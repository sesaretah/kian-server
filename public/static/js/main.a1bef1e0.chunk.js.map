{"version":3,"sources":["js/fa.js","dispatcher.js","stores/ModelStore.js","conf.jsx","actions/MyActions.js","init-fcm.js","Dict.jsx","containers/tasks/list.jsx","containers/tasks/workList.jsx","containers/notifications/homeList.jsx","containers/reports/homeList.jsx","containers/visits/timeseries.jsx","containers/home/index.jsx","components/home/index.jsx","containers/layouts/PanelRightPage.jsx","containers/users/options.jsx","containers/assignments/form.jsx","containers/assignments/list.jsx","containers/access_controls/form.jsx","containers/access_controls/list.jsx","containers/roles/show.jsx","components/roles/show.jsx","containers/roles/list.jsx","containers/roles/index.jsx","components/roles/index.jsx","containers/roles/form.jsx","components/roles/create.jsx","components/roles/update.jsx","containers/tags/show.jsx","components/tags/show.jsx","containers/tags/list.jsx","containers/tags/index.jsx","components/tags/index.jsx","containers/tags/form.jsx","components/tags/create.jsx","components/tags/update.jsx","containers/statuses/show.jsx","components/statuses/show.jsx","containers/statuses/list.jsx","containers/statuses/index.jsx","components/statuses/index.jsx","containers/statuses/form.jsx","components/statuses/create.jsx","components/statuses/update.jsx","containers/tasks/involvementList.jsx","containers/profiles/simpleList.jsx","containers/tasks/involvements.jsx","containers/statuses/simpleList.jsx","containers/tasks/status.jsx","containers/tasks/works.jsx","containers/tasks/reports.jsx","containers/comments/form.jsx","containers/comments/list.jsx","containers/tasks/show.jsx","components/tasks/show.jsx","containers/tasks/index.jsx","components/tasks/index.jsx","containers/tasks/form.jsx","components/tasks/create.jsx","components/tasks/update.jsx","containers/works/involvementList.jsx","containers/works/involvements.jsx","containers/works/status.jsx","containers/works/reports.jsx","containers/todos/todosInvolvementList.jsx","containers/todos/form.jsx","containers/todos/list.jsx","containers/works/show.jsx","components/works/show.jsx","containers/works/list.jsx","containers/works/index.jsx","components/works/index.jsx","containers/works/form.jsx","components/works/create.jsx","components/works/update.jsx","components/todos/create.jsx","components/todos/update.jsx","containers/time_sheets/show.jsx","components/time_sheets/show.jsx","containers/time_sheets/list.jsx","containers/time_sheets/index.jsx","components/time_sheets/index.jsx","containers/time_sheets/form.jsx","components/time_sheets/create.jsx","components/time_sheets/update.jsx","containers/profiles/show.jsx","components/profiles/show.jsx","containers/profiles/list.jsx","containers/profiles/index.jsx","components/profiles/index.jsx","containers/profiles/form.jsx","components/profiles/create.jsx","components/profiles/update.jsx","containers/reports/show.jsx","components/reports/show.jsx","containers/reports/list.jsx","containers/reports/index.jsx","components/users/loggedIn.js","components/reports/index.jsx","containers/uploads/form.jsx","containers/reports/form.jsx","components/reports/uploader.js","components/reports/create.jsx","components/reports/update.jsx","containers/groups/show.jsx","components/groups/show.jsx","containers/groups/list.jsx","containers/groups/index.jsx","components/groups/index.jsx","containers/groups/form.jsx","components/groups/create.jsx","components/groups/update.jsx","containers/settings/form.jsx","components/settings/update.jsx","containers/users/Login.jsx","components/users/Login.jsx","components/users/LoginJwt.jsx","containers/users/SignUp.jsx","components/users/SignUp.jsx","containers/users/Verification.jsx","components/users/Verification.jsx","containers/notifications/list.jsx","containers/notifications/index.jsx","routes.js","components/notifications/index.jsx","containers/layouts/NotFoundPage.jsx","components/App.jsx","serviceWorker.js","index.js"],"names":["module","exports","Dispatcher","modelStore","list","multipleList","instance","klass","this","i","len","data","length","push","emit","console","log","action","type","listModel","listMultipleModel","showIntance","deleteIntance","setIntance","postFile","EventEmitter","dispatcher","register","handleActions","bind","conf","server","getList","model","page","params","token","queryString","Object","keys","map","key","join","axios","get","headers","then","response","dispatch","catch","error","getMultipleList","fileUpload","id","file","url","formData","FormData","append","config","put","getInstance","removeInstance","setInstance","post","updateInstance","initializedFirebaseApp","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","messaging","isSupported","usePublicVapidKey","dict","TaskList","props","alerts","task","result","deadline_alert","className","class","aria-hidden","report_alert","comment_alert","tasks","Fragment","header","sortChange","data-open-in","name","onChange","e","title","target","value","by_title","selected","by_events","sort_by","sort","mediaList","text","details","after","link","WorkList","work","works","NotificationList","notifications","colorClass","notification","seen","new_notifications","crypto","lib","WordArray","random","target_type","target_id","profile","href","fullname","notification_text","slot","src","avatar","width","height","ReportList","reports","new_reports","report","defaults","global","defaultFontFamily","TimeSeries","tasksVisits","datasets","colors","v","d","series","index","x","window","ODate","y","label","backgroundColor","Math","floor","borderColor","options","scales","xAxes","time","displayFormats","day","scaleLabel","display","labelString","date","HomeIndex","home","panelOpen","f7","tabletWidth","your_tasks","your_newest_works","HomePage","getMutipleList","loadData","state","localStorage","getItem","ModelStore","on","removeListener","Framework7","toast","show","receiving","closeTimeout","position","MyActions","multiple","getKlass","setState","tasks_visits","order","Component","PanelRightPage","logout","check_ability","ability","removeItem","location","replace","user","getIntance","the_ability","a","icon","ab","ignoreCache","view","panelClose","dashboard","time_sheets","reloadCurrent","user_settings","privacy","onClick","settings","login","tavan","logged_in","UserOptions","users","email","AssignmentForm","assignment_form","inset","smartSelect","handleChange","user_id","strong","tag","fill","submit","UserList","body","color","removeRole","ios","aurora","md","AccessControlForm","access_control_form","item","placeholder","onInput","abilityTitle","defaultValue","abilityValue","true","false","addAbility","AbilityList","removeAbility","access_control_list","RoleShow","role","simple-list","assignedUsers","Layout","handleChangeValue","$f7route","$$","hide","submitting","role_id","ability_title","ability_value","obj","roles","backLink","back","fab","RoleList","subtitle","RoleIndex","React","RoleForm","defaultRole","isDefaultRole","radio","checked","NonDefault","JSON","parse","Default","disabled","editing","RoleCreate","default_role","$f7router","navigate","role_form","DocumentUpdate","TagShow","confirmed","editable","tag_id","tags","TagList","TagIndex","TagForm","isConfirmed","isConfirmedTag","confirmable","not_confirmed","confirm","TagCreate","tag_form","StatusShow","status","style","the_color","status_id","statuses","StatusList","StatusIndex","StatusForm","readonly","StatusCreate","loadPalette","self","$f7","colorPicker","create","inputEl","targetEl","targetElSetBackgroundColor","modules","openIn","hex","closed","c","onPageAfterIn","pageAfterIn","status_form","confiremd","ParticipantList","involvements","option","involvement","addLink","removeProfile","remove","removeLink","changeRole","select","SimpleList","profiles","addProfile","add","Partcipants","coworkers","the_involvements","accordionList","accordionItem","simpleList","groups","group","addGroup","outline","search","floatingLabel","clearButton","searchProfile","query","addStatus","Statuses","add_stauts","searchStatus","Works","chip","priority","new","disableButtonText","cancel","inline","Reports","creation","t","Date","fromNow","creation_date","content","CommentForm","comment_form","comment","maxlength","resizable","commentContent","CommentList","items","editLink","deleteCommentConfirm","comments","created_at","locale","ago","noGap","loadMore","more","TaskShow","access","segment","includes","submitComment","archived","archive_note","arr","the_tags","is_public","public","private","discussions","removeTask","deleteComment","the_comments","user_access","task_id","q","profileId","profile_id","statusId","commentable_type","commentable_id","dialog","are_you_sure","alert","group_id","backLinkForce","TaskIndex","TaskForm","isPublic","isPublicTask","select_appropriate_title","required","write_appropriate_description","chips","deleteable","removeTag","checkbox","write_archive_note","archiveNote","archive","deleteTaskConfirm","delete","deleteButton","TaskCreate","loadTags","deadline","start","startTime","deadlineTime","privateTask","app","autocomplete","openerEl","valueProperty","textProperty","searchbarDisableText","popupCloseLinkText","close","notFoundText","not_found","limit","searchbarPlaceholder","preloader","source","render","results","preloaderShow","request","method","dataType","success","indexOf","preloaderHide","change","concat","incomplete_data","filter","task_form","deleteTask","deleteInstance","defaultTask","default_task","selectedMode","InvolvementList","TodosInvolvementsList","lt","todo","check","todos","todoChecked","deleteTodoConfirm","addInvolvements","TodoForm","involvementChecked","workInvolvement","flag","workInvolvements","involvementCheck","TodoList","todo_list","WorkShow","start_date","start_date_j","deadline_date_j","removeWork","deleteTodo","the_todos","work_id","is_done","deadline_date","WorkIndex","WorkForm","privateWork","normal","high","urgent","select_a_date","start_time","select_a_time","deadline_time","deleteWorkConfirm","WorkCreate","loadCalender","loadTime","picker","rotateEffect","cols","values","split","textAlign","calendar","closeOnSelect","firstDay","weekendDays","monthNames","dayNames","dayNamesShort","work_form","deleteWork","defaultWork","default_work","TodoCreate","removeInvolvement","setInvolvements","work_involvements","TimeSheetShow","association","kind","associations","time_sheet","the_associations","a_type","sheet_date","jdate","morning_report","afternoon_report","extra_report","time_sheet_id","TimeSheetList","TimeSheetIndex","related_time_sheets","sent_to_me","mine_time_sheets","sent_by_me","page_mine","page_related","p","mine","related","TimeSheetForm","removeAssociation","write_appropriate_details","morningReport","afternoonReport","extraReport","recipients","TimeSheetCreate","loadAssociation","timeSheetDate","today","weekAgo","setDate","getDate","time_sheet_form","ProfileShow","the_tasks","the_works","actuals","metas","channels","ProfileList","ProfileIndex","inner","ProfileForm","profile_info","firstname","surename","withIcon","buttonText","choose_image","onDrop","buttonClassName","imgExtension","maxFileSize","ProfileCreate","handleChangeValueFields","removeActual","submitFields","fields","pictures","picture","meta_id","metaId","fid","newState","assign","uuid","profile_form","ReportShow","draft","contentState","convertFromRaw","editorState","EditorState","createWithContent","the_work","the_task","toolbar","readOnly","attachments","attachment","filename","commentable","selectedChannel","sheetOpened","tooltip","substring","ReportIndex","pageContent","tabbar","bottom","tabLink","tabLinkActive","swipeable","tabActive","interaction","loggedIn","Report","el","interaction_type","interactionable_id","interactionable_type","source_type","source_id","UploadForm","getUploadParams","meta","onChangeStatus","onSubmit","files","allFiles","f","forEach","autoUpload","submitButtonDisabled","inputContent","drag_or_browse","ReportForm","new_report","localization","translations","fa","image","uploadCallback","uploadImageCallBack","previewImage","onEditorStateChange","deleteReportConfirm","uploadableType","Promise","resolve","reject","xhr","XMLHttpRequest","open","setRequestHeader","send","addEventListener","responseText","ReportCreate","createEmpty","enc","Base64","stringify","convertToRaw","getCurrentContent","blocks","block","trim","taskId","workId","prev","prevstate","report_form","ReportUpdate","removeAttachment","deleteReport","workflow_form","GroupShow","the_grouping","GroupList","GroupIndex","GroupForm","grouping","removeGrouping","groupings","GroupCreate","loadGrouping","group_form","tag_grouping","SettingForm","setting","notification_setting","form","changeSetting","if_someone_adds_you_youll_be_asked","blocked_list","blockList","removeBlocked","notification_type","mail_notification","push_notification","sms","add_involvement_to_tasks","remove_involvement_from_tasks","change_status_tasks","add_works_to_tasks","add_reports_to_tasks","add_comments_to_tasks","add_involvement_to_works","remove_involvement_from_works","change_status_works","add_todos_to_works","add_reports_to_works","add_comments_to_works","add_comments_to_reports","add_involvement_to_todos","remove_involvement_from_todos","add_involvement_to_time_sheets","remove_involvement_from_timesheets","SettingCreate","loadBlockList","prevState","LoginForm","sign_up","autofocus","enter_your_email","animate","you_can_sign_up","cas","password","reload","username","Login","setItem","SignUpForm","enter_your_name","enter_your_surename","validate","if_registered","you_can_login","SignUp","verification","verification_code","enter_verification_code","verificationCode","Verification","NotificationIndex","path","component","LoginJwt","RoleUpdate","SettingUpdate","GroupUpdate","StatusUpdate","TaskUpdate","TagUpdate","TimeSheetUpdate","WorkUpdate","TodoUpdate","ProfileUpdate","requestPermission","getToken","err","navigator","serviceWorker","message","firebaseMessaging","payload","titleRightText","cssClass","f7params","theme","panel","rightBreakpoint","routes","createContext","left","cover","themeDark","right","reveal","pushState","main","Boolean","hostname","match","registration","scope","use","Framework7React","ReactDOM","createElement","App","document","getElementById"],"mappings":"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","file":"static/js/main.a1bef1e0.chunk.js","sourcesContent":["module.exports = {\n\n  // Generic\n  'generic.add': 'افزودن',\n  'generic.cancel': 'لغو',\n\n  // BlockType\n  'components.controls.blocktype.h1': 'H1',\n  'components.controls.blocktype.h2': 'H2',\n  'components.controls.blocktype.h3': 'H3',\n  'components.controls.blocktype.h4': 'H4',\n  'components.controls.blocktype.h5': 'H5',\n  'components.controls.blocktype.h6': 'H6',\n  'components.controls.blocktype.blockquote': 'Blockquote',\n  'components.controls.blocktype.code': 'Code',\n  'components.controls.blocktype.blocktype': 'Block Type',\n  'components.controls.blocktype.normal': 'Normal',\n\n  // Color Picker\n  'components.controls.colorpicker.colorpicker': 'Color Picker',\n  'components.controls.colorpicker.text': 'Text',\n  'components.controls.colorpicker.background': 'Highlight',\n\n  // Embedded\n  'components.controls.embedded.embedded': 'Embedded',\n  'components.controls.embedded.embeddedlink': 'Embedded Link',\n  'components.controls.embedded.enterlink': 'Enter link',\n\n  // Emoji\n  'components.controls.emoji.emoji': 'Emoji',\n\n  // FontFamily\n  'components.controls.fontfamily.fontfamily': 'Font',\n\n  // FontSize\n  'components.controls.fontsize.fontsize': 'Font Size',\n\n  // History\n  'components.controls.history.history': 'History',\n  'components.controls.history.undo': 'Undo',\n  'components.controls.history.redo': 'Redo',\n\n  // Image\n  'components.controls.image.image': 'عکس',\n  'components.controls.image.fileUpload': 'بارگذاری',\n  'components.controls.image.byURL': 'پیوند',\n  'components.controls.image.dropFileText': 'اینجا را کلیک کنید ',\n\n  // Inline\n  'components.controls.inline.bold': 'Bold',\n  'components.controls.inline.italic': 'Italic',\n  'components.controls.inline.underline': 'Underline',\n  'components.controls.inline.strikethrough': 'Strikethrough',\n  'components.controls.inline.monospace': 'Monospace',\n  'components.controls.inline.superscript': 'Superscript',\n  'components.controls.inline.subscript': 'Subscript',\n\n  // Link\n  'components.controls.link.linkTitle': 'عنوان پیوند',\n  'components.controls.link.linkTarget': 'آدرس',\n  'components.controls.link.linkTargetOption': 'در پنجره جدید باز کن',\n  'components.controls.link.link': 'پیوند',\n  'components.controls.link.unlink': 'لغو پیوند',\n\n  // List\n  'components.controls.list.list': 'List',\n  'components.controls.list.unordered': 'Unordered',\n  'components.controls.list.ordered': 'Ordered',\n  'components.controls.list.indent': 'Indent',\n  'components.controls.list.outdent': 'Outdent',\n\n  // Remove\n  'components.controls.remove.remove': 'Remove',\n\n  // TextAlign\n  'components.controls.textalign.textalign': 'Text Align',\n  'components.controls.textalign.left': 'Left',\n  'components.controls.textalign.center': 'Center',\n  'components.controls.textalign.right': 'Right',\n  'components.controls.textalign.justify': 'Justify',\n};\n","import { Dispatcher } from \"flux\";\n\nexport default new Dispatcher;\n","import { EventEmitter } from \"events\";\n\nimport dispatcher from \"../dispatcher\";\n\nclass ModelStore extends EventEmitter {\n  constructor() {\n    super()\n    this.list = [];\n    this.multipleList = [];\n    this.instance = null;\n    this.klass= null;\n  }\n\n  listModel(list){\n    this.list = [];\n    this.klass = list.klass\n    for (var i = 0, len = list.data.length; i < len; ++i) {\n      this.list.push(list.data[i]);\n      if (i === len - 1 ) {\n        this.emit(\"got_list\");\n      }\n    }\n    if(list.data.length == 0){\n      this.emit(\"got_list\");\n    }\n\n  }\n\n  listMultipleModel(list){\n    this.multipleList = list.data;\n    this.klass = list.klass\n    this.emit(\"got_multiple_list\");\n  }\n\n  showIntance(instance){\n    this.klass = instance.klass\n    this.instance = instance.data\n    this.emit(\"got_instance\");\n  }\n\n  setIntance(instance){\n    this.klass = instance.klass\n    this.instance = instance.data\n    this.emit(\"set_instance\");\n  }\n\n\n  deleteIntance(instance){\n    this.klass = instance.klass\n    this.instance = instance.data\n    this.emit(\"deleted_instance\");\n  }\n\n  postFile(instance){\n    console.log(instance)\n    this.klass = instance.klass\n    this.instance = instance.data\n    this.emit(\"file_posted\");\n  }\n\n  getIntance() {\n    return this.instance\n  }\n\n  getList(){\n    return this.list\n  }\n\n  getMutipleList(){\n    return this.multipleList\n  }\n\n  getListnKlass(){\n    return [this.list, this.klass]\n  }\n\n  getKlass(){\n    return this.klass\n  }\n\n  handleActions(action) {\n    switch(action.type) {\n      case \"LIST_MODEL_SUCCESS\": {\n        this.listModel(action.list);\n        break;\n      }\n      case \"MULTIPLE_LIST_MODEL_SUCCESS\": {\n        this.listMultipleModel(action.list);\n        break;\n      }\n      case \"GET_INSTANCE_SUCCESS\": {\n        this.showIntance(action.instance);\n        break;\n      }\n      case \"DELETE_INSTANCE_SUCCESS\": {\n        this.deleteIntance(action.instance);\n        break;\n      }\n      case \"SET_INSTANCE_SUCCESS\": {\n        this.setIntance(action.instance);\n        break;\n      }\n      case \"POST_FILE_SUCCESS\": {\n        this.postFile(action.instance);\n        break;\n      }\n\n      \n    }\n  }\n}\n\n\nconst modelStore = new ModelStore;\ndispatcher.register(modelStore.handleActions.bind(modelStore));\n\nexport default modelStore;\n","export const conf = { \n'server' : '/v1'\n};","import dispatcher from \"../dispatcher\";\nimport axios, {put} from 'axios';\nimport { conf } from '../conf';\n\nconst server= conf.server;\nconsole.log(server)\n//const server='http://localhost:3001/v1';\n//const server='/v1';\n//const server='http://95.156.255.115/api';\n\n\nexport function getList(model, page=1, params={}, token) {\n  var queryString = Object.keys(params).map(key => key + '=' + params[key]).join('&');\n  axios.get(server + '/'+ model +'?page='+page+'&'+queryString, { headers: {'Content-Type': 'application/json', 'Authorization': \"bearer \" + token } })\n  .then(function (response) {\n    dispatcher.dispatch({\n      type: \"LIST_MODEL_SUCCESS\",\n      list: response.data,\n    });\n  })\n  .catch(function (error) {\n    console.log(error);\n  });\n}\n\nexport function getMultipleList(model, page=1, params={}, token) {\n  var queryString = Object.keys(params).map(key => key + '=' + params[key]).join('&');\n  axios.get(server + '/'+ model +'?page='+page+'&'+queryString, { headers: {'Content-Type': 'application/json', 'Authorization': \"bearer \" + token } })\n  .then(function (response) {\n    dispatcher.dispatch({\n      type: \"MULTIPLE_LIST_MODEL_SUCCESS\",\n      list: response.data,\n    });\n  })\n  .catch(function (error) {\n    console.log(error);\n  });\n}\n\nexport function fileUpload(model, id , file, token){\n  const url = server + '/'+ model +'/'+id;\n  const formData = new FormData();\n  formData.append('profile[avatar]',file)\n  formData.append('profile[id]',id)\n  const config = {\n      headers: {\n          'content-type': 'multipart/form-data',\n          'Authorization': \"bearer \" + token \n      }\n  }\n  put(url, formData,config).then(function (response) {\n    dispatcher.dispatch({\n      type: \"POST_FILE_SUCCESS\",\n      instance: response.data,\n    });\n  })\n  .catch(function (error) {\n    console.log(error);\n  });\n}\n\nexport function getInstance(model, id, token) {\n  axios.get(server + '/'+ model +'/'+id, { headers: {'Content-Type': 'application/json', 'Authorization': \"bearer \" + token } })\n  .then(function (response) {\n    dispatcher.dispatch({\n      type: \"GET_INSTANCE_SUCCESS\",\n      instance: response.data,\n    });\n  })\n  .catch(function (error) {\n    console.log(error);\n  });\n}\n\nexport function removeInstance(model, params={}, token ) {\n  var queryString = Object.keys(params).map(key => key + '=' + params[key]).join('&');\n  axios.get(server + '/'+ model +'/delete?'+queryString, { headers: {'Content-Type': 'application/json', 'Authorization': \"bearer \" + token } })\n  .then(function (response) {\n    dispatcher.dispatch({\n      type: \"DELETE_INSTANCE_SUCCESS\",\n      instance: response.data,\n    });\n  })\n  .catch(function (error) {\n    console.log(error);\n  });\n}\n\nexport function setInstance(model, data, token) {\n  axios.post(server + '/'+ model +'/', data, { headers: {'Content-Type': 'application/json', 'Authorization': \"bearer \" + token } })\n  .then(function (response) {\n    dispatcher.dispatch({\n      type: \"SET_INSTANCE_SUCCESS\",\n      instance: response.data,\n    });\n  })\n  .catch(function (error) {\n    console.log(error);\n  });\n}\n\nexport function updateInstance(model, data, token) {\n  axios.put(server + '/'+ model +'/'+data.id, data, { headers: {'Content-Type': 'application/json', 'Authorization': \"bearer \" + token } })\n  .then(function (response) {\n    dispatcher.dispatch({\n      type: \"SET_INSTANCE_SUCCESS\",\n      instance: response.data,\n    });\n  })\n  .catch(function (error) {\n    console.log(error);\n  });\n}\n","import * as firebase from \"firebase/app\";\nimport \"firebase/messaging\";\nconst initializedFirebaseApp = firebase.initializeApp({\n    apiKey: \"AIzaSyAbQ1NDkKB_E_SbfgHY3w-esVWhjwj9DeE\",\n    authDomain: \"tavan-e768d.firebaseapp.com\",\n    databaseURL: \"https://tavan-e768d.firebaseio.com\",\n    projectId: \"tavan-e768d\",\n    storageBucket: \"tavan-e768d.appspot.com\",\n    messagingSenderId: \"498708095861\",\n    appId: \"1:498708095861:web:00428b1330b24e1eece93c\",\n    measurementId: \"G-55DLXZ4VZY\"\n \n});\n//const messaging = initializedFirebaseApp.messaging();\nvar messaging = null;\nif (firebase.messaging.isSupported()){\n  messaging = initializedFirebaseApp.messaging();\n  messaging.usePublicVapidKey(\n    // Project Settings => Cloud Messaging => Web Push certificates\n    \"BGtSQdySGVQOeOwFha6rSVdmtfIUo_V33Eq-RTRb5kUNLvvwM7AVGCLtChjnGlD50fudRx8D4Aw-7br71Qfefrc\"\n  );\n  \n} else {\n \n}\nexport { messaging }; ","export const dict = {\n  'home' : 'خانه',\n  'name' : 'نام و نام خانوادگی ',\n  'login' : 'ورود',\n  'username' :  'نام کاربری ',\n  'password' : 'رمز عبور ',\n  'password_confirmation': 'تکرار رمز عبور',\n  'mobile' : 'شماره موبایل ',\n  'error': 'خطا',\n  'sign_in' : 'ورود ',\n  'sign_up' : 'ثبت نام',\n  'back' : 'بازگشت',\n  'signed_up_already': 'تا کنون ثبت نام نکرده اید؟',\n  'new_advert': 'درج آگهی ',\n  'title': 'عنوان',\n  'abstract': 'چکیده',\n  'content': 'متن',\n  'submit': 'ثبت ',\n  'upload_from_gallery': 'انتخاب از گالری',\n  'welcome': 'خوش آمدید',\n  'sign_out': 'خروج',\n  'phone_number': 'شماره تلفن',\n  'telegram_channel': 'کانال تلگرام',\n  'instagram_page': 'صفحه اینستاگرام',\n  'address': 'آدرس ',\n  'email': 'ایمیل ',\n  'contact_information':'اطلاعات تماس ',\n  'search': 'جستجو ',\n  'cancel' : 'انصراف',\n  'view': 'نمایش',\n  'edit': 'ویرایش',\n  'delete': 'حذف',\n  'adverts_nes': 'عنوان، متن و شماره تلفن اجباری است',\n  'my_pins': ' نشان شده‌ها ',\n  'pin' : 'نشان کن',\n  'pinned': 'نشان شده',\n  'message_to_seller': 'ارسال پیام',\n  'messages': 'پیام ها ',\n  'send_message': 'پیام خود را بنویسید',\n  'province': 'استان',\n  'city': 'شهر',\n  'website': 'وبسایت',\n  'call': 'تماس بگیرید',\n  'ago': ' قبل',\n  'all_above': 'همه ی موارد فوق',\n  'no_result': 'موردی یافت نشد ',\n  'category': 'دسته بندی ',\n  'leg':'مسیر',\n  'date':'تاریخ',\n  'time': 'زمان',\n  'numberOfPassngers': 'تعداد مسافران ',\n  'surename': 'نام خانوادگی',\n  'fathername':'نام پدر',\n  'ssn':'کدملی',\n  'birthplace':'محل تولد',\n  'pass_no': 'شماره گذرنامه',\n  'birthdate': 'تاریخ تولد',\n  'place_of_birth': 'محل تولد',\n  'required_fields': 'فیلدهای اجباری',\n  'en_father_name': 'نام پدر لاتین',\n  'en_name': 'نام لاتین',\n  'en_surename': 'نام خانوادگی لاتین ',\n  'passport_no': 'شماره گذرنامه',\n  'final_confirm' : 'تایید نهایی ',\n  'document_form': 'فرم اسناد ',\n  'save': 'ذخیره',\n  'documents':'اسناد ',\n  'type' : 'نوع',\n  'string': 'متن کوتاه',\n  'text': 'متن بلند',\n  'select': 'گزینه',\n  'multiSelect': 'چند گزینه',\n  'table': 'جدول',\n  'date':'تاریخ',\n  'refundable': 'قابل اعاده',\n  'yes':'بله',\n  'no':'خیر',\n  'commentable':'قابل نظردهی',\n  'end_point':'نقطه پایان',\n  'start_point':'نقطه شروع',\n  'votable':'رای گیری',\n  'publishable':'قابل انتشار',\n  'field_name': 'نام فیلد',\n  'add': 'افزودن ',\n  'remove': 'حذف',\n  'auxiliary_tables': 'جداول کمکی',\n  'create_by':'ایجاد شده توسط',\n  'list': 'لیست',\n  'workflows': 'گردش کارها',\n  'auxiliary_records': 'مقادیر کمکی',\n  'basic_table': 'جدول پایه',\n  'relation_table': 'جدول رابطه',\n  'auxiliary_table_form': 'فرم جدول کمکی ' ,\n  'Basic': 'پایه',\n  'Relation': 'رابطه ',\n  'Divan': 'دیوان',\n  'workflow_form':'فرم گردش کار',\n  'submitting':'در حال ارسال ... ',\n  'settings':'تنظیمات',\n  'receiving':'در حال دریافت ...',\n  'workflow_tables': 'جداول کمکی گردش کار ',\n  'auxiliary_table': 'جدول کمکی',\n  'workflow':'گردش کار',\n  'actions' : 'عملیات',\n  'roles': 'نقش ها',\n  'divan': 'دیوان',\n  'enter_your_email': 'ایمیل خود را وارد کنید',\n  'enter_your_password': 'رمز عبور را وارد کنید ',\n  'enter_your_password_confirmation': 'رمز عبور را تکرار کنید ',\n  'profiles': 'افراد ',\n  'firstname': 'نام',\n  'if_registered': 'اگر قبلا ثبت نام کرده اید',\n  'you_can_login':'وارد شوید ',\n  'if_not_registered': 'اگر ثبت نام نکرده اید',\n  'you_can_sign_up':'ثبت نام کنید',\n  'new_assignment': 'اعطای نقش جدید',\n  'posts': 'پست ها',\n  'bookmark': 'نشان',\n  'like':'علاقه',\n  'follow':'دنبال',\n  'share':'اشتراک',\n  'social_acts':'عملگرهای اجتماعی ',\n  'channels': 'کانال ها',\n  'close': 'بستن',\n  'channel':'کانال ',\n  'details': 'شرح',\n  'Shoa': 'شعاع ',\n  'role': 'نقش',\n  'Default': 'پیش فرض',\n  'NonDefault':'غیر پیش فرض ',\n  'value': ' مقدار',\n  'true': 'مثبت',\n  'false': 'منفی',\n  'access_control_list':'لیست کنترل دسترسی',\n  'access_control_form':'فرم کنترل دسترسی',\n  'assignment_form':'فرم اعطای نقش',\n  'comment_form': 'نظر بدهید',\n  'post_form': 'فرم پست',\n  'metas':'پیش جداول',\n  'shoa': 'شعاع',\n  'form' : 'ورود اطلاعات',\n  'choose_image': 'انتخاب عکس',\n  'logout': 'خروج',\n  'more': 'بیشتر ...',\n  'social': 'اجتماعی',\n  'courses':'دروس',\n  'discussions':'گفتگو ها',\n  'exams':'آزمون ها ',\n  'public':'عمومی',\n  'private':'خصوصی ',\n  'course_type':'نوع درس',\n  'select_appropriate_title': 'عنوانی مناسب انتخاب کنید',\n  'write_appropriate_description':'شرحی از اهداف و روش ها بنویسید',\n  'description':'شرح ',\n  'drag_or_browse': 'فایل مورد نظر را اینجا بیاندازید یا کلیک کنید',\n  'attachment' : 'فایل های پیوست',\n  'tasks': 'وظایف',\n  'start_date': 'تاریخ شروع',\n  'deadline' : 'مهلت نهایی',\n  'select_a_date' : 'یک تاریخ انتخاب کنید',\n  'incomplete_data': 'همه ی موارد را تکمیل کنید',\n  'alert': 'هشدار',\n  'deadline_time': 'ساعت',\n  'start_time':'ساعت',\n  'select_a_time':'انتخاب ساعت',\n  'coworkers': 'همکاران',\n  'works': 'کارها ',\n  'dashboard':'میزکار',\n  'tavan':'توان',\n  'statuses': 'وضعیت ها',\n  'status' : 'وضعیت',\n  'add_stauts': 'تغییر وضعیت',\n  'select' : 'انتخاب',\n  'new': 'جدید',\n  'task' : 'وظیفه',\n  'attachments': 'پیوست ها',\n  'reports': 'اسناد و گزارشات',\n  'tags':'برچسب ها',\n  'new_tag': 'برچسب جدید ',\n  'recent_tasks': 'وظایف اخیر',\n  'public_tasks': 'وظایف عمومی',\n  'sort_by' : 'مرتب سازی',\n  'by_title':'عنوان',\n  'by_events':'رخداد',\n  'deadline_near': 'مهلت نهایی نزدیک',\n  'new_report': 'گزارش جدید',\n  'new_comments': 'گفتگوی جدید',\n  'Admin':'مدیر',\n  'Colleague':'همکار',\n  'Observer':'ناظر',\n  'Creator':'سازنده',\n  'verification_code':'کد احراز',\n  'enter_verification_code':  'کد احراز را وارد کنید',\n  'your_tasks':'وظایف مرتبط با شما',\n  'your_newest_works':'جدیدترین کارهای مرتبط با شما',\n  'todo_list': 'تقسیم بندی کار',\n  'todo_participants': 'افراد',\n  'new_todo_participants': 'افراد جدید',\n  'not_found': 'چیزی یافت نشد',\n  'are_you_sure': 'مطمئن هستید؟',\n  'Confirmer': 'تایید کننده',\n  'time_sheets': 'کارنما',\n  'morning_report':'گزارش پیش از ظهر',\n  'afternoon_report':'گزارش بعد از ظهر',\n  'extra_report':'گزارش اضافه کاری',\n  'write_appropriate_details':'شرحی کامل بنویسید',\n  'associations':'مرتبط با',\n  'sheet_date':'تاریخ جدول',\n  'recipients':'دریافت کنندگان',\n  'sent_by_me': 'ارسال شده ها',\n  'sent_to_me':'دریافت شده ها',\n  'priority':'لولویت',\n  'normal':'عادی',\n  'high':'فوری',\n  'urgent':'بسیار فوری',\n  'archived': 'آرشیو شده',\n  'write_archive_note' : 'متن جمع بندی به منظور آرشیو سازی بنویسید',\n  'user_groups': 'گروه بندی کاربران',\n  'user_settings': 'تنظیمات شخصی',\n  'add_involvement_to_tasks':'افزودن همکاران به وظایف',\n  'remove_involvement_from_tasks':'حذف همکاران از وظایف',\n  'change_status_tasks':'تغییر وضعیت وظایف',\n  'add_works_to_tasks':'افزودن کار به وظایف',\n  'add_reports_to_tasks':'افزودن گزارش به وظایف',\n  'add_comments_to_tasks':'افزودن نظر به وظایف',\n  'add_involvement_to_works':'افزودن همکاران به کارها',\n  'remove_involvement_from_works':'حذف همکاران از کارها',\n  'change_status_works':'تغییر وضعیت کارها',\n  'add_todos_to_works':'افزودن تقسیم کار به کارها',\n  'add_reports_to_works':'افزودن گزارش به کارها',\n  'add_comments_to_works':'افزودن نظر به کارها',\n  'add_involvement_to_todos':'افزودن همکار به تقسیم کار',\n  'remove_involvement_from_todos':'حذف همکار از تقسیم کار',\n  'add_involvement_to_time_sheets':'افزودن گیرنده به کارنما',\n  'remove_involvement_from_timesheets':'حذف گیرنده از کارنما',\n  'notification_type':'شیوه اطلاع رسانی',\n  'mail_notification':'ایمیل',\n  'push_notification':'آگاهسازی وب',\n  'sms':'پیامک',\n  'if_someone_adds_you_youll_be_asked': 'چنانچه کسی شما را به یک فعالیت بیافزاید شما باید تایید کنید.',\n  'previous_attachments':'پیوست های قبلا آپلود شده',\n  'cas': 'احراز هویت مرکزی' ,\n  'profile': 'پروفایل',\n  'groups' : 'گروهبندی همکاران',\n  'confirmed':'تایید شده',\n  'not_confirmed': 'تایید نشده',\n  'blocked_list': 'کاربران مسدود شده',\n  'notifications': 'اطلاع رسانی',\n  'privacy':'حریم خصوصی',\n  'add_comments_to_reports':'افزودن نظر به گزارشات',\n  'new_notifications' : 'آگاهسازی های جدید',\n  'new_reports': 'آخرین گزارشات'\n}\n","import React from \"react\";\nimport { List, ListItem, CardHeader, CardContent, CardFooter } from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\nimport Moment from 'react-moment';\nimport JDate from 'jalali-date';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\n\nconst TaskList = (props) => {\n  function title(t) {\n    var date = new Date(new window.ODate(t))\n    return (<Moment date={date} fromNow></Moment>)\n  }\n  function alerts(task) {\n    var result = []\n    if (task.deadline_alert) {\n      result.push(\n        <span className='color-red ml-5'>\n          <i class=\"fa fa-bell-o\" aria-hidden=\"true\"></i>\n        </span>\n      )\n    }\n    if (task.report_alert) {\n      result.push(\n        <span className='color-blue ml-5'>\n          <i class=\"fa fa-file-text-o \" aria-hidden=\"true\"></i>\n        </span>\n      )\n    }\n    if (task.comment_alert) {\n      result.push(\n        <span className='color-green mr-5'>\n          <i class=\"fa fa-comments-o \" aria-hidden=\"true\"></i>\n        </span>\n      )\n    }\n    return (result)\n  }\n\n  function sort() {\n    if (props.sortChange) {\n      return (\n        <a className=\" fs-10 smart-select smart-select-init\" data-open-in=\"popover\">\n          <select name=\"superhero\" onChange={(e) => { props.sortChange({ title: e.target.value }) }}>\n            <option value=\"title\" key='option-title' >{dict.by_title}</option>\n            <option value=\"events\" key='option-events' selected>{dict.by_events}</option>\n          </select>\n          <div className=\"item-content\">\n            <div className=\"item-inner\">\n              <div className=\"item-title\">{dict.sort_by}</div>\n            </div>\n          </div>\n        </a>\n      )\n    }\n  }\n\n  if (props.tasks) {\n    return (\n      <React.Fragment>\n        <CardHeader>\n          {props.header}\n\n          {sort()}\n        </CardHeader>\n        <CardContent className='h-120'>\n          <List mediaList className='fs-11'>\n            {props.tasks.map((task) =>\n              <ListItem key={'task' + task.id} title={task.title} text={task.details} after={alerts(task)} link={'/tasks/' + task.id}></ListItem>\n            )}\n          </List>\n        </CardContent>\n        <CardFooter>\n          {/* <span className='fs-10'>\n            <span className='color-red ml-5'>\n              <i class=\"fa fa-bell-o ml-5\" aria-hidden=\"true\"></i>\n              {dict.deadline_near}\n            </span>\n            <span className='color-blue ml-5'>\n              <i class=\"fa fa-file-text-o  ml-5\" aria-hidden=\"true\"></i>\n              {dict.new_report}\n            </span>\n            <span className='color-green mr-5'>\n              <i class=\"fa fa-comments-o ml-5\" aria-hidden=\"true\"></i>\n              {dict.new_comments}\n            </span>\n            </span>*/}\n\n        </CardFooter>\n      </React.Fragment>\n\n    )\n  } else {\n    return (<ul></ul>)\n  }\n}\nexport default TaskList;\n","import React from \"react\";\nimport { List, ListItem, CardHeader, CardContent, CardFooter } from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\nimport Moment from 'react-moment';\nimport JDate from 'jalali-date';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\n\nconst WorkList = (props) => {\n  function title(t) {\n    var date = new Date(new window.ODate(t))\n    return (<Moment date={date} fromNow></Moment>)\n  }\n  function alerts(work) {\n    var result = []\n    if (work.deadline_alert) {\n      result.push(\n        <span className='color-red ml-5'>\n          <i class=\"fa fa-bell-o\" aria-hidden=\"true\"></i>\n        </span>\n      )\n    }\n    if (work.report_alert) {\n      result.push(\n        <span className='color-blue ml-5'>\n          <i class=\"fa fa-file-text-o \" aria-hidden=\"true\"></i>\n        </span>\n      )\n    }\n    if (work.comment_alert) {\n      result.push(\n        <span className='color-green mr-5'>\n          <i class=\"fa fa-comments-o \" aria-hidden=\"true\"></i>\n        </span>\n      )\n    }\n    return(result)\n  }\n\n  if (props.works) {\n    return (\n      <React.Fragment>\n        <CardHeader>\n          {props.header}\n        </CardHeader>\n        <CardContent className='h-120'>\n          <List mediaList className='fs-11'>\n            {props.works.map((work) =>\n              <ListItem   className='fs-10' key={'workList'+work.id} title={work.title} text={work.task.title} after={alerts(work)} link={'/works/' + work.id}></ListItem>\n            )}\n          </List>\n        </CardContent>\n        <CardFooter>\n        </CardFooter>\n      </React.Fragment>\n\n    )\n  } else {\n    return (<ul></ul>)\n  }\n}\nexport default WorkList;\n","import React from \"react\";\nimport { List, ListItem, Link, Card, CardHeader, CardContent, CardFooter } from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\n\nconst NotificationList = (props) => {\n  if (props.notifications && props.notifications.length > 0) {\n    function profileLink(profile) {\n      return (<Link href='/profiles/'>{profile.fullname}</Link>)\n    }\n\n    function colorClass(notification) {\n      if (!notification.seen) {\n        return 'bg-blonde'\n      }\n    }\n    return (\n      <Card>\n        <CardHeader>{dict.new_notifications}</CardHeader>\n        <CardContent className='h-120'>\n          <List mediaList>\n            {props.notifications.map((notification) =>\n              <ListItem\n                className={'fs-11 ' + colorClass(notification)}\n                key={crypto.lib.WordArray.random(32)}\n                link={'/' + notification.target_type + '/' + notification.target_id}\n                title={profileLink(notification.profile)}\n                text={notification.notification_text.title}\n              >\n                <img slot=\"media\" src={notification.profile.avatar} width=\"32\" height=\"32\" />\n              </ListItem>\n            )}\n          </List>\n        </CardContent>\n        <CardFooter></CardFooter>\n      </Card>\n    )\n  } else {\n    return (<ul></ul>)\n  }\n}\nexport default NotificationList;\n","import React from \"react\";\nimport { List, ListItem, Link, Card, CardHeader, CardContent, CardFooter } from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\n\nconst ReportList = (props) => {\nconsole.log(props)\n  if (props.reports && props.reports.length > 0) {\n    function profileLink(profile) {\n      return (<Link href='/profiles/'>{profile.fullname}</Link>)\n    }\n\n    return (\n      <Card>\n        <CardHeader>{dict.new_reports}</CardHeader>\n        <CardContent className='h-120'>\n          <List mediaList>\n            {props.reports.map((report) =>\n              <ListItem\n                className={'fs-11 '}\n                key={crypto.lib.WordArray.random(32)}\n                link={'/' + report.target_type + '/' + report.target_id}\n                text={profileLink(report.profile)}\n                title={report.title}\n              >\n                <img slot=\"media\" src={report.profile.avatar} width=\"32\" height=\"32\" />\n              </ListItem>\n            )}\n          </List>\n        </CardContent>\n        <CardFooter></CardFooter>\n      </Card>\n    )\n  } else {\n    return (<ul></ul>)\n  }\n}\nexport default ReportList;\n","import React from \"react\";\nimport { List, ListItem, Card, CardHeader, CardContent } from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { defaults, Bar } from 'react-chartjs-2';\nimport { dict } from \"../../Dict\";\n\ndefaults.global.defaultFontFamily = 'iransans';\n\nconst TimeSeries = (props) => {\n    function series() {\n        var result = []\n        var colors = ['#ff6384', '#36a2eb', '#cc65fe', '#ffce56', '#20f08b', '#944dab', '#67f71d', '#650512', '#2f5561', '#e4ae5c']\n        props.tasksVisits.map((v) => {\n            var d = []\n            Object.keys(v.series.data).map(function (key, index) { d.push({ x: new window.ODate(key), y: index }) })\n            result.push({\n                label: v.series.title,\n                backgroundColor: colors[Math.floor(Math.random() * 10)],\n                borderColor: 'blue',\n                data: d\n            })\n        }\n        )\n        return result\n\n    }\n    var s1 = {\n        label: 's1',\n        borderColor: 'blue',\n        data: [\n            { x: '2017-01-06 18:39:30', y: 100 },\n            { x: '2017-01-07 18:39:28', y: 101 },\n        ]\n    };\n\n    var s2 = {\n        label: 's2',\n        borderColor: 'red',\n        data: [\n            { x: '2017-01-07 18:00:00', y: 90 },\n            { x: '2017-01-08 18:00:00', y: 105 },\n        ]\n    };\n    if (props.tasksVisits) {\n        return (\n            <Card>\n                <CardHeader></CardHeader>\n                <CardContent>\n                    <Bar\n                        data={{ datasets: series() }}\n                        options={{\n                            scales: {\n                                xAxes: [{\n                                    type: 'time',\n                                    time: {\n                                        displayFormats: {\n                                            day: 'MM/D'\n                                        },\n                                    },\n                                        scaleLabel: {\n                                        display: true,\n                                        labelString:  dict.date\n                                    }\n                                }]\n                            }\n                        }\n                        }\n                    />\n                </CardContent>\n            </Card>\n        )\n    } else {\n        return (null)\n    }\n\n}\nexport default TimeSeries;","import React from \"react\";\nimport { Page, Navbar, Row, BlockTitle, Col, Fab, Icon, Card, Link } from 'framework7-react';\nimport TaskList from \"../tasks/list\"\nimport WorkList from \"../tasks/workList\"\nimport NotificationList from \"../notifications/homeList\"\nimport ReportList from \"../reports/homeList\"\nimport VisitChart from \"../visits/timeseries\"\n\n\nimport { dict } from '../../Dict';\n\nconst HomeIndex = (props) => {\n\n    return (\n        <Page>\n            <Navbar title={dict.home} >\n                <Link panelOpen=\"right\">\n                    <Icon f7=\"bars\"></Icon>\n                </Link>\n            </Navbar>\n            <Row>\n                <Col width='100' tabletWidth='50'>\n                    <Card>\n                        <TaskList tasks={props.tasks} header={dict.your_tasks} sortChange={props.sortChange} />\n                    </Card>\n                </Col>\n                <Col width='100' tabletWidth='50'>\n                    <Card>\n                        <WorkList works={props.works} header={dict.your_newest_works} sortChange={props.sortChange} />\n                    </Card>\n                </Col>\n\n\n\n            </Row>\n            <Row>\n                <Col width='100' tabletWidth='50'>\n                    <NotificationList notifications={props.notifications} header={dict.your_newest_works} sortChange={props.sortChange} />\n                </Col>\n\n                <Col width='100' tabletWidth='50'>\n                    <ReportList reports={props.reports} header={dict.your_newest_works} sortChange={props.sortChange} />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col width='100' tabletWidth='50'>\n                    <VisitChart tasksVisits={props.tasksVisits} header={dict.your_newest_works} sortChange={props.sortChange} />\n                </Col>\n\n            </Row>\n\n        </Page>\n    )\n}\nexport default HomeIndex;\n","import React, { Component } from 'react';\nimport { NavLeft, Link, Page, Navbar, Icon, Row, Col, Card } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport Framework7 from 'framework7/framework7.esm.bundle'\nimport HomeContent from \"../../containers/home/index\"\n\nexport default class HomePage extends Component {\n  constructor() {\n    super();\n    this.getMutipleList = this.getMutipleList.bind(this);\n    this.sortChange = this.sortChange.bind(this);\n    \n    this.loadData = this.loadData.bind(this);\n\n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      tasks: null,\n      works: null,\n      notifications: null,\n      reports: null,\n    }\n  }\n\n\n  componentWillMount() {\n    ModelStore.on(\"got_multiple_list\", this.getMutipleList);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_multiple_list\", this.getMutipleList);\n  }\n\n  componentDidMount() {\n    if (this.state.token && this.state.token.length > 10) {\n\n    }\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  loadData() {\n    const f7: Framework7 = Framework7.instance;\n    f7.toast.show({ text: dict.receiving, closeTimeout: 2000, position: 'top' });\n    MyActions.getMultipleList('home', this.state.page, {}, this.state.token);\n  }\n\n  getMutipleList() {\n    var multiple = ModelStore.getMutipleList()\n    var klass = ModelStore.getKlass()\n    console.log(multiple)\n    if (multiple && klass === 'Home') {\n      this.setState({\n        tasks: multiple.tasks,\n        works: multiple.works,\n        notifications: multiple.notifications,\n        reports: multiple.reports,\n        tasksVisits: multiple.tasks_visits,\n      });\n    }\n  }\n\n  sortChange(i) {\n    MyActions.getList('tasks', this.state.page, { order: i.title }, this.state.token);\n  }\n\n  render() {\n    const {tasks, works, notifications, reports, tasksVisits} = this.state;\n    return(<HomeContent notifications={notifications} tasksVisits={tasksVisits} reports={reports} tasks={tasks} works={works} sortChange={this.sortChange}/>)\n  }\n}","import React, { Component } from 'react';\nimport { Menu, MenuItem, MenuDropdown, MenuDropdownItem, Page, Navbar, Block, BlockTitle, List, ListItem, FabButton, FabButtons, Fab, Icon } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\n\nexport default class PanelRightPage extends Component {\n  constructor() {\n    super();\n    this.logout = this.logout.bind(this);\n    this.getInstance = this.getInstance.bind(this);\n    this.check_ability = this.check_ability.bind(this);\n\n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      ability: null,\n    }\n  }\n\n  logout() {\n    this.setState({ token: null });\n    window.localStorage.removeItem('token');\n    window.location.replace('/')\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n  }\n\n  componentDidMount() {\n    if (this.state.token && this.state.token.length > 10) {\n      MyActions.getInstance('users', 'role', this.state.token);\n    }\n  }\n\n  getInstance() {\n    var user = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (user && klass === 'UserRole') {\n      console.log(user)\n      this.setState({\n        ability: user.the_ability\n      });\n    }\n\n  }\n\n  check_ability(a, link, icon) {\n    var result = []\n    if (this.state.ability) {\n      this.state.ability.map((ab) => {\n        if (ab.title === a && ab.value) {\n          result.push(\n            <ListItem link={\"/\" + link + \"/\"} ignoreCache={true} key={'panel' + link} view=\"#main-view\" panelClose>\n              <i className={\"va ml-5 fa fa-\" + icon}></i>\n              <span>{dict[link]}</span>\n            </ListItem>\n          )\n        }\n      })\n    }\n    return result\n  }\n\n  logged_in(token) {\n    if (token) {\n      return (\n        <React.Fragment>\n          <BlockTitle> <i className=\"va ml-5 fa fa-tachometer\"></i>{dict.dashboard}</BlockTitle>\n          <List className='fs-13'>\n          <ListItem link=\"/\" view=\"#main-view\" panelClose>\n              <i className=\"va ml-5 fa fa-home\"></i>\n              <span>{dict.home}</span>\n            </ListItem>\n\n            <ListItem link=\"/tasks/\" view=\"#main-view\" panelClose>\n              <i className=\"va ml-5 fa fa-tasks\"></i>\n              <span>{dict.tasks}</span>\n            </ListItem>\n\n            <ListItem link=\"/time_sheets/\" view=\"#main-view\" panelClose>\n              <i className=\"va ml-5 fa fa-file-excel-o\"></i>\n              <span>{dict.time_sheets}</span>\n            </ListItem>\n\n\n            <ListItem link=\"/notifications/\" ignoreCache={false} reloadCurrent={false} view=\"#main-view\" panelClose>\n              <i className=\"va ml-5 fa fa-circle-o-notch\"></i>\n              <span>{dict.notifications}</span>\n            </ListItem>\n          </List>\n\n          <BlockTitle><i className=\"va ml-5 fa fa-cogs\"></i>{dict.user_settings}</BlockTitle>\n          <List>\n            <ListItem link=\"/settings/\" ignoreCache={true} view=\"#main-view\" panelClose>\n              <i className=\"va ml-5 fa fa-user-secret\"></i>\n              <span>{dict.privacy}</span>\n            </ListItem>\n            <ListItem link=\"/profiles/\" view=\"#main-view\" panelClose>\n              <i className=\"va ml-5 fa fa-user-circle-o\"></i>\n              <span>{dict.profile}</span>\n            </ListItem>\n            <ListItem view=\"#main-view\" panelClose onClick={this.logout}>\n              <i className=\"va ml-5 fa fa-power-off\"></i>\n              <span>{dict.logout}</span>\n            </ListItem>\n          </List>\n\n\n          <BlockTitle> <i className=\"va ml-5 fa fa-cog\"></i>{dict.settings}</BlockTitle>\n          <List className='fs-13'>\n            {this.check_ability('change_role', \"roles\", \"shield\")}\n\n            {this.check_ability('change_statuses', \"statuses\", \"circle-o\")}\n\n            {this.check_ability('add_tags', \"tags\", \"tags\")}\n\n            {this.check_ability('change_groups', \"groups\", \"bullseye\")}\n          </List>\n        </React.Fragment>\n      )\n    } else {\n      return (\n        <React.Fragment>\n          <BlockTitle>{dict.user_settings}</BlockTitle>\n          <List>\n            <ListItem link=\"/login/\" title={dict.login} view=\"#main-view\" panelClose></ListItem>\n          </List>\n        </React.Fragment>\n      )\n    }\n  }\n\n  render() {\n    const { token } = this.state;\n    return (\n      <Page >\n        <Navbar title={dict.tavan} />\n        {this.logged_in(token)}\n      </Page>\n    );\n  }\n}","import React from \"react\";\nimport { List, ListItem, Button, Icon} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport crypto from 'crypto-js';\nconst UserOptions = (props) => {\n  var options = [<option value=''></option>]\n  if(props.users){\n    for (let i = 0; i < props.users.length; i++) {\n      options.push(\n        <option value={props.users[i].id}>\n          {props.users[i].email}\n        </option>\n      )\n    }\n\n  }\n  return options\n\n}\nexport default UserOptions;\n","import React from \"react\";\nimport { List, ListItem, BlockTitle, Block, Row, Button,Link } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport UserOptions from \"../users/options\";\n\nconst AssignmentForm = (props) => {\n  return (\n    <React.Fragment>\n      <BlockTitle>{dict.assignment_form}</BlockTitle>\n      <List inset>\n        <ListItem\n          title={dict.email}\n          smartSelect\n        >\n          <select name=\"content\"\n            onChange={(e) => { props.handleChange({ user_id: e.target.value }) }}>\n            <UserOptions users={props.users} />\n          </select>\n        </ListItem>\n      </List>\n      <Block strong inset>\n        <Row tag=\"p\">\n          <Link className=\"btn-notice\"></Link>\n          <Button className=\"col btn\" fill onClick={props.submit}>{dict.submit}</Button>\n        </Row>\n      </Block>\n    </React.Fragment>\n  )\n}\nexport default AssignmentForm;\n","  \nimport React from \"react\";\nimport { List, ListItem, Button, Icon} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport crypto from 'crypto-js';\nconst UserList = (props) => {\n    var body = []\n  if(props.users){\n\n    \n    for (let i = 0; i < props.users.length; i++) {\n        var td = []\n        body.push(<tr key={crypto.lib.WordArray.random(32)}>\n        <td key={crypto.lib.WordArray.random(32)}>{props.users[i].id}</td>\n        <td key={crypto.lib.WordArray.random(32)}>{props.users[i].email}</td>\n        <td className=\"checkbox-cell\" key={crypto.lib.WordArray.random(32)}>\n            <Button color='gray' onClick={() => props.removeRole(props.users[i].id)}>\n              <Icon ios=\"f7:trash\" aurora=\"f7:trash\" md=\"material:trash\"></Icon>\n            </Button>\n          </td>\n        </tr>)\n    }\n\n  return(\n    <div className=\"data-table card\">\n      <table>\n        <thead>\n          <tr>\n            <td>ID</td>\n            <td>Email</td>\n          </tr>\n        </thead>\n\n        <tbody>\n          {body}\n        </tbody>\n      </table>\n    </div>\n\n  )\n}\nelse {\n  return(null)\n}\n}\nexport default UserList;","import React from \"react\";\nimport { List, Link, ListInput, Block, Row, Button, BlockTitle } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport crypto from 'crypto-js';\nimport UserOptions from \"../users/options\";\n\nconst AccessControlForm = (props) => {\n    return (\n        <React.Fragment>\n            <BlockTitle>{dict.access_control_form}</BlockTitle>\n            <List  inset>\n                <ListInput\n                    label={dict.item}\n                    type=\"text\"\n                    placeholder='...'\n                    onInput={(e) => {\n                        props.handleChange({ abilityTitle: e.target.value })\n                    }}\n                />\n                <ListInput\n                    label={dict.value}\n                    type=\"select\"\n                    defaultValue={true}\n                    placeholder=\"Please choose...\"\n                    onChange={(e) => {\n                        props.handleChange({ abilityValue: e.target.value })\n                    }}\n                >\n                    <option value={true}>{dict.true}</option>\n                    <option value={false}>{dict.false}</option>\n                </ListInput>\n            </List>\n            <Block strong inset>\n                <Row tag=\"p\">\n                 <Link className=\"btn-notice\"></Link>\n                    <Button className=\"col btn\" fill onClick={props.addAbility}>{dict.submit}</Button>\n                </Row>\n            </Block>\n        </React.Fragment>\n    )\n}\nexport default AccessControlForm;\n","\nimport React from \"react\";\nimport { List, ListItem, Button, Icon, BlockTitle } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport crypto from 'crypto-js';\nconst AbilityList = (props) => {\n    var body = []\n    if (props.ability) {\n\n\n        for (let i = 0; i < props.ability.length; i++) {\n            var td = []\n            body.push(<tr key={crypto.lib.WordArray.random(32)}>\n                <td key={crypto.lib.WordArray.random(32)}>{props.ability[i].title}</td>\n                <td key={crypto.lib.WordArray.random(32)}>{dict[props.ability[i].value]}</td>\n                <td className=\"checkbox-cell\" key={crypto.lib.WordArray.random(32)}>\n                    <Button color='gray' onClick={() => props.removeAbility(props.ability[i].title)}>\n                        <Icon ios=\"f7:trash\" aurora=\"f7:trash\" md=\"material:trash\"></Icon>\n                    </Button>\n                </td>\n            </tr>)\n        }\n\n        return (\n            <React.Fragment>\n            <BlockTitle>{dict.access_control_list}</BlockTitle>\n            <div className=\"data-table card\">\n                <table>\n                    <thead>\n                        <tr>\n                            <td>{dict.title}</td>\n                            <td>{dict.value}</td>\n                        </tr>\n                    </thead>\n\n                    <tbody>\n                        {body}\n                    </tbody>\n                </table>\n            </div>\n            </React.Fragment>\n\n        )\n    }\n    else {\n        return (null)\n    }\n}\nexport default AbilityList;","import React from \"react\";\nimport { Page, Navbar, List, BlockTitle, ListItem, Fab, Icon,Preloader, Block} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport AssignmentForm from \"../assignments/form\";\nimport AssignmentList from \"../assignments/list\";\n\nimport AccessControlForm from \"../access_controls/form\";\nimport AccessControlList from \"../access_controls/list\";\n\nconst RoleShow = (props) => {\n  if (props.role){\n    return(\n      <React.Fragment>\n        <BlockTitle>{dict.title}</BlockTitle>\n        <List simple-list>\n          <ListItem>{props.role.title}</ListItem>\n        </List>\n\n        <AccessControlList  ability={props.ability} removeAbility={props.removeAbility}/>\n        <AccessControlForm  addAbility={props.addAbility} handleChange={props.handleChange} />\n        \n\n        <AssignmentList users={props.assignedUsers} removeRole={props.removeRole} />\n        <AssignmentForm users={props.users}  submit={props.submit} handleChange={props.handleChange}/>\n\n        \n      </React.Fragment>\n    )\n  } else {\n    return(null)\n  }\n}\nexport default RoleShow;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon, Fab\n} from 'framework7-react';\nimport { dict } from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport RoleShow from \"../../containers/roles/show\"\n\nexport default class Layout extends Component {\n  constructor() {\n    super();\n    this.getInstance = this.getInstance.bind(this);\n    this.getList = this.getList.bind(this);\n    this.submit = this.submit.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.removeRole = this.removeRole.bind(this);\n    this.addAbility = this.addAbility.bind(this);\n    this.removeAbility = this.removeAbility.bind(this);\n\n    \n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      role: null,\n      id: null,\n      users: null,\n      assignedUsers: null,\n      user_id: null,\n      abilityTitle: '',\n      abilityValue: true,\n      ability: null,\n    }\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.getInstance);\n    ModelStore.on(\"got_list\", this.getList);\n    ModelStore.on(\"deleted_instance\", this.getInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.getInstance);\n    ModelStore.removeListener(\"got_list\", this.getList);\n    ModelStore.removeListener(\"deleted_instance\", this.getInstance);\n  }\n\n  componentDidMount() {\n    MyActions.getInstance('roles', this.$f7route.params['roleId'], this.state.token);\n    MyActions.getList('users', this.state.page, {}, this.state.token);\n  }\n\n  getInstance() {\n    var role = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (role && klass === 'Role') {\n      this.setState({\n        role: role,\n        id: role.id,\n        assignedUsers: role.users,\n        ability: role.ability\n      });\n    }\n    this.$$('.btn').show();\n  }\n\n  getList() {\n    var users = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    if (users && klass === 'User') {\n      this.setState({\n        users: users,\n      });\n    }\n  }\n\n  submit() {\n    this.$$('.btn').hide();\n    this.$$('.btn-notice').text(dict.submitting);\n    var data = { role_id: this.state.id, user_id: this.state.user_id }\n    MyActions.setInstance('users/assignments', data, this.state.token);\n  }\n\n  addAbility() {\n    var data = { id: this.state.id, ability_title: this.state.abilityTitle, ability_value: this.state.abilityValue}\n    MyActions.setInstance('roles/abilities', data, this.state.token);\n  }\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  fab() {\n    if (this.state.role) {\n      return (\n        <Fab href={\"/roles/\" + this.state.role.id + \"/edit\"} target=\"#main-view\" position=\"left-bottom\" slot=\"fixed\" color=\"lime\">\n          <Icon ios=\"f7:edit\" aurora=\"f7:edit\" md=\"material:edit\"></Icon>\n          <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n        </Fab>\n      )\n    }\n  }\n\n  removeRole(user_id) {\n    MyActions.removeInstance('users/assignments', { user_id: user_id, role_id: this.state.id }, this.state.token);\n  }\n\n  removeAbility(title){\n    MyActions.removeInstance('roles/abilities', { id: this.state.id, title: title }, this.state.token);\n  }\n\n  render() {\n    const { role, users, assignedUsers, ability } = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.roles} backLink={dict.back} />\n        <BlockTitle></BlockTitle>\n        {this.fab()}\n        <RoleShow role={role} users={users} ability={ability} removeAbility={this.removeAbility} assignedUsers={assignedUsers} addAbility={this.addAbility} removeRole={this.removeRole} submit={this.submit} handleChange={this.handleChangeValue} />\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { List, ListItem} from 'framework7-react';\nimport crypto from 'crypto-js';\n\nconst RoleList = (props) => {\n\n  if (props.roles) {\n    return (\n      <List mediaList>\n        {props.roles.map((role) =>\n          <ListItem\n            key={crypto.lib.WordArray.random(32)}\n            link={\"/roles/\" + role.id}\n            ignoreCache={true}\n            title={role.title}\n            after=\"\"\n            subtitle=\"\"\n            text=\"\"\n            ></ListItem>\n        )}\n      </List>\n    )} else {\n      return (<ul></ul>)\n    }\n  }\n  export default RoleList;\n","import React from \"react\";\nimport { Page, Navbar, List, BlockTitle, ListItem, Fab, Icon,Preloader, Block} from 'framework7-react';\nimport RoleList from \"./list\"\nimport { dict} from '../../Dict';\n\nconst RoleIndex = (props) => {\n  return(\n    <Page>\n      <Navbar title={dict.roles} backLink={dict.back} >\n      </Navbar>\n      <BlockTitle>{dict.list}</BlockTitle>\n      <Fab href=\"/roles/new\" target=\"#main-view\"  position=\"left-bottom\" slot=\"fixed\" color=\"deeporange\">\n        <Icon ios=\"f7:add\" aurora=\"f7:add\" md=\"material:add\"></Icon>\n        <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n      </Fab>\n      <RoleList roles={props.roles}/>\n    </Page>\n  )\n}\nexport default RoleIndex;\n","import React from \"react\"\nimport { Page,Fab, Icon } from 'framework7-react';\nimport ModelStore from \"../../stores/ModelStore\";\nimport RoleIndex from \"../../containers/roles/index\"\nimport * as MyActions from \"../../actions/MyActions\";\nimport { dict} from '../../Dict';\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\n\nexport default class Layout extends React.Component {\n  constructor() {\n    super();\n    this.getList = this.getList.bind(this);\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      roles: null,\n    }\n  }\n  componentWillMount() {\n    ModelStore.on(\"got_list\", this.getList);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_list\", this.getList);\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  loadData(){\n    const f7: Framework7 = Framework7.instance;\n    f7.toast.show({ text: dict.receiving, closeTimeout: 2000, position: 'top'});\n    MyActions.getList('roles', this.state.page, {}, this.state.token);\n  }\n\n  getList() {\n    var roles = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    if (roles && klass === 'Role'){\n      this.setState({\n        roles: roles,\n      });\n    }\n  }\n\n  render() {\n    const {roles} = this.state;\n    return(<RoleIndex roles={roles}/>)\n  }\n}\n","import React from \"react\";\nimport { List, ListItem, ListInput, Block, Row, Button, BlockTitle,Link } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport crypto from 'crypto-js';\n\n\nconst RoleForm = (props) => {\n  if (props.defaultRole) {\n    var isDefaultRole = true;\n  } else {\n    var isDefaultRole = false\n  }\n  \n  return (\n    <React.Fragment>\n      <BlockTitle>{dict.role}</BlockTitle>\n      <List >\n        <ListInput\n          label={dict.title}\n          key='role-title'\n          type=\"text\"\n          placeholder='...'\n          defaultValue={props.role.title}\n          onInput={(e) => {\n            props.handleChange({ title: e.target.value })\n          }}\n        />\n        <ListItem radio value={false} checked={!isDefaultRole} name=\"defaultRole\" title={dict.NonDefault}\n          onChange={(e) => {\n            console.log(e)\n            props.handleChange({ defaultRole: JSON.parse(e.target.value) })\n          }}>\n        </ListItem>\n        <ListItem radio value={true} checked={isDefaultRole} name=\"defaultRole\" title={dict.Default}\n          onChange={(e) => {\n            console.log(e)\n            props.handleChange({ defaultRole: JSON.parse(e.target.value) });\n          }}>\n        </ListItem>\n      </List>\n\n      <Block strong>\n        <Row tag=\"p\">\n        <Link className=\"btn-notice\"></Link>\n          <Button className=\"col btn\" fill disabled={!props.editing} onClick={props.submit}>{dict.submit}</Button>\n        </Row>\n      </Block>\n    </React.Fragment>\n  )\n}\nexport default RoleForm;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport RoleForm from \"../../containers/roles/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\nexport default class RoleCreate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      role: {},\n      defaultRole: true,\n    }\n  }\n\n\n  componentWillMount() {\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n  }\n\n  submit(){\n    var data = {title: this.state.title, default_role: this.state.defaultRole}\n    MyActions.setInstance('roles', data, this.state.token);\n  }\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  setInstance(){\n    const self = this;\n    this.$f7router.navigate('/roles/');\n  }\n\n\n\n  render() {\n    const {role, defaultRole} = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.role_form} backLink={dict.back} />\n        <BlockTitle>{dict.role_form}</BlockTitle>\n        <RoleForm role={role} defaultRole={defaultRole} submit={this.submit} editing={true} handleChange={this.handleChangeValue}/>\n      </Page>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport RoleForm from \"../../containers/roles/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\n\nexport default class DocumentUpdate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.getInstance = this.getInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n\n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      role : {},\n      defaultRole: null,\n    }\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n\n  }\n\n\n  submit(){\n    var data = {id:this.state.id, title: this.state.title, default_role: this.state.defaultRole}\n    MyActions.updateInstance('roles', data,  this.state.token);\n  }\n  componentDidMount(){\n    this.loadData();\n  }\n\n  loadData(){\n    const f7: Framework7 = Framework7.instance;\n    f7.toast.show({ text: dict.receiving, closeTimeout: 2000, position: 'top'});\n    if (this.$f7route.params['roleId']) {\n      MyActions.getInstance('roles', this.$f7route.params['roleId'],  this.state.token);\n    }\n  }\n\n\n  getInstance(){\n    var role = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (role && klass === 'Role'){\n      this.setState({\n        title: role.title,\n        id: role.id,\n        role: role,\n        defaultRole: role.default_role\n      });\n    }\n  }\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n\n  setInstance(){\n    const self = this;\n    this.$f7router.navigate('/roles/');\n  }\n\n\n  render() {\n        const {role, defaultRole} = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.role_form} backLink={dict.back} />\n        <BlockTitle>{dict.role_form}</BlockTitle>\n        <RoleForm role={role} defaultRole={defaultRole} submit={this.submit} editing={true} handleChange={this.handleChangeValue}/>\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { Page, Navbar, List, BlockTitle, ListItem, Fab, Icon,Preloader, Block} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport AssignmentForm from \"../assignments/form\";\nimport AssignmentList from \"../assignments/list\";\n\nimport AccessControlForm from \"../access_controls/form\";\nimport AccessControlList from \"../access_controls/list\";\n\nconst TagShow = (props) => {\n  if (props.tag){\n    return(\n      <React.Fragment>\n        <BlockTitle>{dict.title}</BlockTitle>\n        <List simple-list>\n          <ListItem>{props.tag.title}</ListItem>\n        </List>\n\n        <BlockTitle>{dict.confirmed}</BlockTitle>\n        <List simple-list>\n          <ListItem>{dict[props.tag.confirmed]}</ListItem>\n        </List>\n\n        \n      </React.Fragment>\n    )\n  } else {\n    return(null)\n  }\n}\nexport default TagShow;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon, Fab\n} from 'framework7-react';\nimport { dict } from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport TagShow from \"../../containers/tags/show\"\n\nexport default class Layout extends Component {\n  constructor() {\n    super();\n    this.getInstance = this.getInstance.bind(this);\n    this.submit = this.submit.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      tag: null,\n      id: null,\n      users: null,\n      user_id: null,\n      editable: false,\n    }\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.getInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.getInstance);\n  }\n\n  componentDidMount() {\n    MyActions.getInstance('tags', this.$f7route.params['tagId'], this.state.token);\n  }\n\n  getInstance() {\n    var tag = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (tag && klass === 'Tag') {\n      this.setState({\n        tag: tag,\n        id: tag.id,\n        assignedUsers: tag.users,\n        ability: tag.ability,\n        editable: tag.editable\n      });\n    }\n    this.$$('.btn').show();\n  }\n\n\n  submit() {\n    this.$$('.btn').hide();\n    this.$$('.btn-notice').text(dict.submitting);\n    var data = { tag_id: this.state.id, user_id: this.state.user_id }\n    MyActions.setInstance('users/assignments', data, this.state.token);\n  }\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  fab() {\n    if (this.state.tag && this.state.editable) {\n      return (\n        <Fab href={\"/tags/\" + this.state.tag.id + \"/edit\"} target=\"#main-view\" position=\"left-bottom\" slot=\"fixed\" color=\"lime\">\n          <Icon ios=\"f7:edit\" aurora=\"f7:edit\" md=\"material:edit\"></Icon>\n          <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n        </Fab>\n      )\n    }\n  }\n\n\n  render() {\n    const { tag, editable} = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.tags} backLink={dict.back} />\n        <BlockTitle></BlockTitle>\n        {this.fab()}\n        <TagShow \n          tag={tag} editable={editable} \n           submit={this.submit} handleChange={this.handleChangeValue} />\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { List, ListItem} from 'framework7-react';\nimport crypto from 'crypto-js';\n\nconst TagList = (props) => {\n\n  if (props.tags) {\n    return (\n      <List mediaList>\n        {props.tags.map((tag) =>\n          <ListItem\n            key={crypto.lib.WordArray.random(32)}\n            link={\"/tags/\" + tag.id}\n            ignoreCache={true}\n            title={tag.title}\n            after=\"\"\n            subtitle=\"\"\n            text=\"\"\n            ></ListItem>\n        )}\n      </List>\n    )} else {\n      return (<ul></ul>)\n    }\n  }\n  export default TagList;\n","import React from \"react\";\nimport { Page, Navbar, List, BlockTitle, ListItem, Fab, Icon,Preloader, Block} from 'framework7-react';\nimport TagList from \"./list\"\nimport { dict} from '../../Dict';\n\nconst TagIndex = (props) => {\n  return(\n    <Page>\n      <Navbar title={dict.tags} backLink={dict.back} >\n      </Navbar>\n      <BlockTitle>{dict.list}</BlockTitle>\n      <Fab href=\"/tags/new\" target=\"#main-view\"  position=\"left-bottom\" slot=\"fixed\" color=\"deeporange\">\n        <Icon ios=\"f7:add\" aurora=\"f7:add\" md=\"material:add\"></Icon>\n        <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n      </Fab>\n      <TagList tags={props.tags}/>\n    </Page>\n  )\n}\nexport default TagIndex;\n","import React from \"react\"\nimport { Page,Fab, Icon } from 'framework7-react';\nimport ModelStore from \"../../stores/ModelStore\";\nimport TagIndex from \"../../containers/tags/index\"\nimport * as MyActions from \"../../actions/MyActions\";\nimport { dict} from '../../Dict';\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\n\nexport default class Layout extends React.Component {\n  constructor() {\n    super();\n    this.getList = this.getList.bind(this);\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      tags: null,\n    }\n  }\n  componentWillMount() {\n    ModelStore.on(\"got_list\", this.getList);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_list\", this.getList);\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  loadData(){\n    const f7: Framework7 = Framework7.instance;\n    f7.toast.show({ text: dict.receiving, closeTimeout: 2000, position: 'top'});\n    MyActions.getList('tags', this.state.page, {}, this.state.token);\n  }\n\n  getList() {\n    var tags = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    if (tags && klass === 'Tag'){\n      this.setState({\n        tags: tags,\n      });\n    }\n  }\n\n  render() {\n    const {tags} = this.state;\n    return(<TagIndex tags={tags}/>)\n  }\n}\n","import React from \"react\";\nimport { List, ListItem, ListInput, Block, Row, Button, BlockTitle, Link } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport crypto from 'crypto-js';\n\n\nconst TagForm = (props) => {\n\n  if (props.isConfirmed) {\n    var isConfirmedTag = true;\n  } else {\n    var isConfirmedTag = false\n  }\n\n  function confirm() {\n    if (props.confirmable) {\n      return (\n        <List>\n          <ListItem radio value={false} checked={!isConfirmedTag} name=\"selectedMode\" title={dict.not_confirmed}\n            onChange={(e) => {\n              props.handleChange({ isConfirmed: JSON.parse(e.target.value) });\n            }}>\n          </ListItem>\n          <ListItem radio value={true} checked={isConfirmedTag} name=\"selectedMode\" title={dict.confirmed}\n            onChange={(e) => {\n              props.handleChange({ isConfirmed: JSON.parse(e.target.value) })\n            }}>\n          </ListItem>\n        </List>\n      )\n    }\n\n  }\n  return (\n    <React.Fragment>\n      <BlockTitle>{dict.tag}</BlockTitle>\n      <List >\n        <ListInput\n          label={dict.title}\n          type=\"text\"\n          placeholder='...'\n          defaultValue={props.tag.title}\n          onInput={(e) => {\n            props.handleChange({ title: e.target.value })\n          }}\n        />\n      </List>\n      {confirm()}\n\n      <Block strong>\n        <Row tag=\"p\">\n        <Link className=\"btn-notice\"></Link>\n          <Button className=\"col btn\" fill disabled={!props.editing} onClick={props.submit}>{dict.submit}</Button>\n        </Row>\n      </Block>\n    </React.Fragment>\n  )\n}\nexport default TagForm;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport TagForm from \"../../containers/tags/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\nexport default class TagCreate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      tag: {},\n      isConfirmed: false,\n      confirmable: false,\n    }\n  }\n\n\n  componentWillMount() {\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n  }\n\n  submit(){\n    var data = {title: this.state.title, confirmed: this.state.isConfirmed}\n    MyActions.setInstance('tags', data, this.state.token);\n  }\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  setInstance(){\n    const self = this;\n    this.$f7router.navigate('/tags/');\n  }\n\n\n\n  render() {\n    const {tag, isConfirmed, confirmable} = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.tag_form} backLink={dict.back} />\n        <BlockTitle>{dict.tag_form}</BlockTitle>\n        <TagForm \n          tag={tag} submit={this.submit} editing={true} confirmable={confirmable}\n          handleChange={this.handleChangeValue} isConfirmed={isConfirmed}\n          />\n      </Page>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport TagForm from \"../../containers/tags/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\n\nexport default class DocumentUpdate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.getInstance = this.getInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n\n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      tag : {},\n      isConfirmed: false,\n      confirmable: false,\n    }\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n\n  }\n\n\n  submit(){\n    var data = {\n      id:this.state.id, title: this.state.title, \n      confirmed: this.state.isConfirmed}\n    MyActions.updateInstance('tags', data,  this.state.token);\n  }\n  componentDidMount(){\n    this.loadData();\n  }\n\n  loadData(){\n    const f7: Framework7 = Framework7.instance;\n    f7.toast.show({ text: dict.receiving, closeTimeout: 2000, position: 'top'});\n    if (this.$f7route.params['tagId']) {\n      MyActions.getInstance('tags', this.$f7route.params['tagId'],  this.state.token);\n    }\n  }\n\n\n  getInstance(){\n    var tag = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (tag && klass === 'Tag'){\n      this.setState({\n        title: tag.title,\n        id: tag.id,\n        tag: tag,\n        isConfirmed: tag.confirmed,\n        confirmable: tag.confirmable\n      });\n    }\n  }\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n\n  setInstance(){\n    const self = this;\n    this.$f7router.navigate('/tags/');\n  }\n\n\n  render() {\n        const {tag, isConfirmed, confirmable} = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.tag_form} backLink={dict.back} />\n        <BlockTitle>{dict.tag_form}</BlockTitle>\n        <TagForm \n          tag={tag} isConfirmed={isConfirmed} submit={this.submit} confirmable={confirmable}\n          editing={true} handleChange={this.handleChangeValue}/>\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { Page, Navbar, List, BlockTitle, ListItem, Fab, Icon,Preloader, Block} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport AssignmentForm from \"../assignments/form\";\nimport AssignmentList from \"../assignments/list\";\n\nimport AccessControlForm from \"../access_controls/form\";\nimport AccessControlList from \"../access_controls/list\";\n\nconst StatusShow = (props) => {\n  if (props.status){\n    return(\n      <React.Fragment>\n        <BlockTitle>{dict.title}</BlockTitle>\n        <List simple-list>\n          <ListItem>{props.status.title}</ListItem>\n        </List>\n        <BlockTitle>{dict.confirmed}</BlockTitle>\n        <List simple-list>\n          <ListItem>{dict[props.status.confirmed]}</ListItem>\n        </List>\n\n        <List simple-list>\n          <ListItem style={{backgroundColor: props.status.the_color}}>{props.status.the_color}</ListItem>\n        </List>\n\n        \n      </React.Fragment>\n    )\n  } else {\n    return(null)\n  }\n}\nexport default StatusShow;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon, Fab\n} from 'framework7-react';\nimport { dict } from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport StatusShow from \"../../containers/statuses/show\"\n\nexport default class Layout extends Component {\n  constructor() {\n    super();\n    this.getInstance = this.getInstance.bind(this);\n    this.submit = this.submit.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);    \n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      status: null,\n      id: null,\n      editable: false,\n    }\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.getInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.getInstance);\n  }\n\n  componentDidMount() {\n    MyActions.getInstance('statuses', this.$f7route.params['statusId'], this.state.token);\n  }\n\n  getInstance() {\n    var status = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (status && klass === 'Status') {\n      this.setState({\n        status: status,\n        id: status.id,\n        editable: status.editable,\n      });\n    }\n    this.$$('.btn').show();\n  }\n\n\n  submit() {\n    this.$$('.btn').hide();\n    this.$$('.btn-notice').text(dict.submitting);\n    var data = { status_id: this.state.id, user_id: this.state.user_id }\n    MyActions.setInstance('users/assignments', data, this.state.token);\n  }\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  fab() {\n    if (this.state.status && this.state.editable) {\n      return (\n        <Fab href={\"/statuses/\" + this.state.status.id + \"/edit\"} target=\"#main-view\" position=\"left-bottom\" slot=\"fixed\" color=\"lime\">\n          <Icon ios=\"f7:edit\" aurora=\"f7:edit\" md=\"material:edit\"></Icon>\n          <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n        </Fab>\n      )\n    }\n  }\n\n  render() {\n    const { status, editable } = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.statuses} backLink={dict.back} />\n        <BlockTitle></BlockTitle>\n        {this.fab()}\n        <StatusShow status={status} editable={editable} \n          submit={this.submit} handleChange={this.handleChangeValue} />\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { List, ListItem} from 'framework7-react';\nimport crypto from 'crypto-js';\n\nconst StatusList = (props) => {\n\n  if (props.statuses) {\n    return (\n      <List mediaList>\n        {props.statuses.map((status) =>\n          <ListItem\n            key={crypto.lib.WordArray.random(32)}\n            link={\"/statuses/\" + status.id}\n            ignoreCache={true}\n            title={status.title}\n            after=\"\"\n            subtitle=\"\"\n            text=\"\"\n            ></ListItem>\n        )}\n      </List>\n    )} else {\n      return (<ul></ul>)\n    }\n  }\n  export default StatusList;\n","import React from \"react\";\nimport { Page, Navbar, List, BlockTitle, ListItem, Fab, Icon,Preloader, Block} from 'framework7-react';\nimport StatusList from \"./list\"\nimport { dict} from '../../Dict';\n\nconst StatusIndex = (props) => {\n  return(\n    <Page>\n      <Navbar title={dict.statuses} backLink={dict.back} >\n      </Navbar>\n      <BlockTitle>{dict.list}</BlockTitle>\n      <Fab href=\"/statuses/new\" target=\"#main-view\"  position=\"left-bottom\" slot=\"fixed\" color=\"deeporange\">\n        <Icon ios=\"f7:add\" aurora=\"f7:add\" md=\"material:add\"></Icon>\n        <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n      </Fab>\n      <StatusList statuses={props.statuses}/>\n    </Page>\n  )\n}\nexport default StatusIndex;\n","import React from \"react\"\nimport { Page,Fab, Icon } from 'framework7-react';\nimport ModelStore from \"../../stores/ModelStore\";\nimport StatusIndex from \"../../containers/statuses/index\"\nimport * as MyActions from \"../../actions/MyActions\";\nimport { dict} from '../../Dict';\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\n\nexport default class Layout extends React.Component {\n  constructor() {\n    super();\n    this.getList = this.getList.bind(this);\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      statuses: null,\n    }\n  }\n  componentWillMount() {\n    ModelStore.on(\"got_list\", this.getList);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_list\", this.getList);\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  loadData(){\n    const f7: Framework7 = Framework7.instance;\n    f7.toast.show({ text: dict.receiving, closeTimeout: 2000, position: 'top'});\n    MyActions.getList('statuses', this.state.page, {}, this.state.token);\n  }\n\n  getList() {\n    var statuses = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    if (statuses && klass === 'Status'){\n      this.setState({\n        statuses: statuses,\n      });\n    }\n  }\n\n  render() {\n    const {statuses} = this.state;\n    return(<StatusIndex statuses={statuses}/>)\n  }\n}\n","import React from \"react\";\nimport { List, ListItem, ListInput, Block, Row, Button, BlockTitle, Link } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport crypto from 'crypto-js';\n\n\nconst StatusForm = (props) => {\n  if (props.status) {\n    if (props.isConfirmed) {\n      var isConfirmedTag = true;\n    } else {\n      var isConfirmedTag = false\n    }\n    function confirm() {\n      if (props.confirmable) {\n        return (\n          <List>\n            <ListItem radio value={false} checked={!isConfirmedTag} name=\"selectedMode\" title={dict.not_confirmed}\n              onChange={(e) => {\n                props.handleChange({ isConfirmed: JSON.parse(e.target.value) });\n              }}>\n            </ListItem>\n            <ListItem radio value={true} checked={isConfirmedTag} name=\"selectedMode\" title={dict.confirmed}\n              onChange={(e) => {\n                props.handleChange({ isConfirmed: JSON.parse(e.target.value) })\n              }}>\n            </ListItem>\n          </List>\n        )\n      }\n\n    }\n    return (\n      <React.Fragment>\n        <BlockTitle>{dict.status}</BlockTitle>\n        <List >\n          <ListInput\n            label={dict.title}\n            type=\"text\"\n            placeholder='...'\n            defaultValue={props.title}\n            onInput={(e) => {\n              props.handleChange({ title: e.target.value })\n            }}\n          />\n        </List>\n\n        {confirm()}\n\n        <div className=\"list \">\n          <ul>\n            <li>\n              <div className=\"item-content item-input\">\n                <div className=\"item-media\">\n                  <i class=\"fa fa-2x fa-circle-o demo-list-icon\" aria-hidden=\"true\" id=\"demo-color-picker-spectrum-value\"></i>\n                </div>\n                <div className=\"item-inner\">\n                  <div className=\"item-input-wrap\">\n                    <input type=\"text\" placeholder=\"Color\" value={props.color} readonly=\"readonly\" id=\"demo-color-picker-spectrum\" />\n                  </div>\n                </div>\n              </div>\n            </li>\n          </ul>\n        </div>\n\n        <Block strong>\n          <Row tag=\"p\">\n          <Link className=\"btn-notice\"></Link>\n            <Button className=\"col btn\" fill disabled={!props.editing} onClick={props.submit}>{dict.submit}</Button>\n          </Row>\n        </Block>\n      </React.Fragment>\n    )\n  } else {\n    return (null)\n  }\n\n}\nexport default StatusForm;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport StatusForm from \"../../containers/statuses/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\nexport default class StatusCreate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      status: {},\n      title: '',\n      color: '',\n      isConfirmed: false,\n    }\n  }\n\n\n  componentWillMount() {\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n  }\n\n\n  pageAfterIn() {\n    this.loadPalette();\n  }\n\n  loadPalette() {\n    const self = this;\n    const app = self.$f7;\n    app.colorPicker.create({\n      inputEl: '#demo-color-picker-spectrum',\n      targetEl: '#demo-color-picker-spectrum-value',\n      targetElSetBackgroundColor: true,\n      modules: ['sb-spectrum', 'hue-slider'],\n      openIn: 'popover',\n      value: {\n        hex: '#ff0000',\n      },\n      on: {\n        closed: function (c) {\n          self.setState({ color: c.value.hex });\n        }\n      }\n    });\n  }\n\n  submit(){\n    var data = {title: this.state.title, color: this.state.color, confirmed: this.state.isConfirmed}\n    MyActions.setInstance('statuses', data, this.state.token);\n  }\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  setInstance(){\n    const self = this;\n    this.$f7router.navigate('/statuses/');\n  }\n\n\n\n  render() {\n    const {status, isConfirmed} = this.state;\n    return (\n      <Page onPageAfterIn={this.pageAfterIn.bind(this)}>\n        <Navbar title={dict.status_form} backLink={dict.back} />\n        <BlockTitle>{dict.status_form}</BlockTitle>\n        <StatusForm \n        status={status} submit={this.submit} isConfirmed={isConfirmed}\n        editing={true} handleChange={this.handleChangeValue}\n        />\n      </Page>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport StatusForm from \"../../containers/statuses/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\n\nexport default class DocumentUpdate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.getInstance = this.getInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.loadPalette = this.loadPalette.bind(this);\n\n    \n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      status : {},\n      title: null,\n      id: '',\n      color: '#fff',\n      isConfirmed: false,\n      confirmable: false,\n    }\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  pageAfterIn() {\n    this.loadPalette();\n  }\n\n  loadPalette() {\n    \n    const self = this;\n    const app = self.$f7;\n\n    app.colorPicker.create({\n      inputEl: '#demo-color-picker-spectrum',\n      targetEl: '#demo-color-picker-spectrum-value',\n      targetElSetBackgroundColor: true,\n      modules: ['sb-spectrum', 'hue-slider'],\n      openIn: 'popover',\n      value: {\n        hex: this.state.color,\n      },\n      on: {\n        closed: function (c) {\n          self.setState({ color: c.value.hex });\n        }\n      }\n    });\n  }\n\n\n  submit(){\n    var data = {id:this.state.id, title: this.state.title, color: this.state.color, confirmed: this.state.isConfirmed}\n    MyActions.updateInstance('statuses', data,  this.state.token);\n  }\n\n  loadData(){\n    const f7: Framework7 = Framework7.instance;\n    f7.toast.show({ text: dict.receiving, closeTimeout: 2000, position: 'top'});\n    if (this.$f7route.params['statusId']) {\n      MyActions.getInstance('statuses', this.$f7route.params['statusId'],  this.state.token);\n    }\n  }\n\n\n  getInstance(){\n    var status = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (status && klass === 'Status'){\n      this.setState({\n        title: status.title,\n        id: status.id,\n        color: status.the_color,\n        status: status,\n        isConfirmed: status.confiremd,\n        confirmable: status.confirmable,\n      }, () => this.loadPalette());\n    } \n    console.log(status)\n  }\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n\n  setInstance(){\n    const self = this;\n    this.$f7router.navigate('/statuses/');\n  }\n\n\n  render() {\n        const {status, title, color, isConfirmed, confirmable} = this.state;\n    return (\n      <Page onPageAfterIn={this.pageAfterIn.bind(this)}>\n        <Navbar title={dict.status_form} backLink={dict.back} />\n        <BlockTitle>{dict.status_form}</BlockTitle>\n        <StatusForm \n        status={status} title={title} color={color} isConfirmed={isConfirmed}\n        submit={this.submit} editing={true} handleChange={this.handleChangeValue}\n        confirmable={confirmable}\n        />\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { List, ListItem, Link } from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\nimport Moment from 'react-moment';\nimport JDate from 'jalali-date';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\n\nconst ParticipantList = (props) => {\n  function removeLink(involvement){\n    if (involvement.role !== 'Creator' && props.editable){\n      return(<Link className=\"mt-4\" onClick={() => props.removeProfile(involvement.profile.id)}>{dict.remove}</Link>)\n    }\n  }\n\n  if (props.involvements) {\n    function select(involvement) {\n      if ( props.editable) {\n        return (\n          <select name=\"role\" onChange={(e) => { props.changeRole(involvement.profile.id, e.target.value) }}>\n            {option('Admin', involvement)}\n            {option('Confirmer', involvement)}\n            {option('Colleague', involvement)}\n            {option('Observer', involvement)}\n          </select>\n        )\n      }\n    }\n    function option(role, involvement) {\n      var selected = false\n      if (involvement.role == role) {\n        selected = true\n      }\n      return (<option value={role} selected={selected}>{dict[role]}</option>)\n    }\n    function addLink(involvement) {\n      if (props.removeProfile) {\n        return (\n          <div className='inline'>\n           {removeLink(involvement)}\n            <a className=\" fs-10 smart-select smart-select-init\" data-open-in=\"popover\">\n              {select(involvement)}\n              <div className=\"item-content\">\n                <div className=\"item-inner bg-w-after\">\n                  <div className=\"item-title\">{dict.role}</div>\n                  <div className=\"item-after mt-2\">{dict[involvement.role]}</div>\n                </div>\n              </div>\n            </a>\n          </div>\n        )\n      }\n    }\n    return (\n      <List className='fs-11'>\n        {props.involvements.map((involvement) =>\n          <ListItem\n            key={involvement.profile.id}\n            title={involvement.profile.fullname}\n            after={addLink(involvement)}>\n            <img slot=\"media\" src={involvement.profile.avatar} width=\"27\" height=\"27\" />\n          </ListItem>\n        )}\n      </List>\n    )\n  } else {\n    return (<ul></ul>)\n  }\n}\nexport default ParticipantList;\n","import React from \"react\";\nimport { List, ListItem, Link} from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\nimport Moment from 'react-moment';\nimport JDate from 'jalali-date';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\n\nconst SimpleList = (props) => {\n  if (props.profiles) {\n    function addLink(profile){\n        if (props.addProfile){\n            return(<Link onClick={()=> props.addProfile(profile.id)}>{dict.add}</Link>)\n        } \n        if (props.removeProfile){\n            return(<Link onClick={()=> props.removeProfile(profile.id)}>{dict.remove}</Link>)\n        } \n    }\n    return (\n      <List>\n        {props.profiles.map((profile) =>\n          <ListItem\n          title={profile.fullname}\n          subtitle=\"...\"\n          after={addLink(profile)}>\n          <img slot=\"media\" src={profile.avatar} width=\"27\" height=\"27\"/>\n          </ListItem>\n        )}\n      </List>\n    )\n  } else {\n    return (<ul></ul>)\n  }\n}\nexport default SimpleList;\n","import React from \"react\";\nimport { Toggle, AccordionContent, Card, CardHeader, CardContent, List, ListItem, CardFooter, ListInput, Col } from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\nimport Moment from 'react-moment';\nimport JDate from 'jalali-date';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\nimport InvolvementList from \"./involvementList\";\nimport SimpleList from \"../profiles/simpleList\";\n\nconst Partcipants = (props) => {\n    function editable() {\n        if (props.editable) {\n            return (\n                <List accordionList className='w-100'>\n                    <ListItem accordionItem className='fs-10' title={\"+ \" + dict.add}>\n                        <AccordionContent>\n                            <List simpleList>\n                                {props.task.groups.map((group) =>\n                                    <ListItem>\n                                        <span>{group.title}</span>\n                                        <Toggle onChange={(e) => props.addGroup(e,group.id)}/>\n                                    </ListItem>\n                                )}\n                            </List>\n                            <List >\n                                <ListInput\n                                    outline\n                                    label={dict.search}\n                                    floatingLabel\n                                    type=\"text\"\n                                    placeholder=\"\"\n                                    clearButton\n                                    onInput={(e) => {\n                                        props.searchProfile({ query: e.target.value })\n                                    }}\n                                />\n                            </List>\n                            <SimpleList profiles={props.profiles} addProfile={props.addProfile} />\n                        </AccordionContent>\n                    </ListItem>\n                </List>\n            )\n        }\n    }\n    if (props.task) {\n        return (\n            <Card>\n                <CardHeader>\n                    {dict.coworkers}\n                </CardHeader>\n                <CardContent className='mh-90'>\n                    <List>\n                        <InvolvementList\n                            involvements={props.task.the_involvements} removeProfile={props.removeProfile}\n                            changeRole={props.changeRole} editable={props.editable}\n                        />\n                    </List>\n                </CardContent>\n                <CardFooter>\n                    {editable()}\n                </CardFooter>\n            </Card>\n        )\n    } else {\n        return (<ul></ul>)\n    }\n}\nexport default Partcipants;\n","import React from \"react\";\nimport { List, ListItem, Link, Icon, Chip } from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\nimport Moment from 'react-moment';\nimport JDate from 'jalali-date';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\n\nconst SimpleList = (props) => {\n  if (props.statuses) {\n    function addLink(status) {\n      if (props.addStatus) {\n        return (<Link onClick={() => props.addStatus(status.id)}>{dict.select}</Link>)\n      }\n    }\n    return (\n      <List>\n        {props.statuses.map((status) =>\n          <ListItem\n            title={\n              <div className=\"chip\" >\n                <div className=\"chip-media\" style={{ backgroundColor: status.the_color }} >\n                  <i className=\"icon f7-icons if-not-md\">plus_circle</i>\n                  <i className=\"icon material-icons md-only\"></i>\n                </div>\n                <div className=\"chip-label\">{status.title}</div>\n              </div>}\n            after={addLink(status)}\n          />\n        )}\n      </List>\n    )\n  } else {\n    return (<ul></ul>)\n  }\n}\nexport default SimpleList;\n","import React from \"react\";\nimport { Block, AccordionContent, Icon, Chip, CardContent, List, ListItem, CardFooter, ListInput, Col } from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\nimport Moment from 'react-moment';\nimport JDate from 'jalali-date';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\nimport SimpleList from \"../statuses/simpleList\";\n\nconst Statuses = (props) => {\n    function chip(status){\n        if(status) {\n            return(\n                <div>\n                <div className=\"chip\" >\n                    <div className=\"chip-media\" style={{ backgroundColor: status.color }} >\n                        <i className=\"icon f7-icons if-not-md\">plus_circle</i>\n                        <i className=\"icon material-icons md-only\"></i>\n                    </div>\n                    <div className=\"chip-label\">{status.title}</div>\n                </div>\n            </div>\n            )\n        } else {\n        return(<div>{dict.add_stauts}</div>)\n        }\n    }\n    function editable() {\n        if (props.editable) {\n            return (\n                <AccordionContent>\n                <List >\n                    <ListInput\n                        outline\n                        label={dict.search}\n                        floatingLabel\n                        type=\"text\"\n                        placeholder=\"\"\n                        clearButton\n                        onInput={(e) => {\n                            props.searchStatus({ query: e.target.value })\n                        }}\n                    />\n                </List>\n                <SimpleList statuses={props.statuses} addStatus={props.addStatus} />\n            </AccordionContent>)\n        }\n    }\n    if (props.task) {\n        \n        return (\n            <List accordionList className='w-100'>\n                <ListItem accordionItem className='fs-10'\n                    title={chip(props.task.status)}\n                >\n                {editable()}\n                </ListItem>\n            </List>\n        )\n    } else {\n        return (<ul></ul>)\n    }\n}\nexport default Statuses;\n","import React from \"react\";\nimport { Searchbar, Card, CardHeader, Link, CardContent, List, ListItem, CardFooter, Row, Col } from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\nimport Moment from 'react-moment';\nimport JDate from 'jalali-date';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\n\nconst Works = (props) => {\n\n    function chip(work) {\n        var result = []\n\n        if (work.deadline_alert) {\n            result.push(\n                <span className='color-red ml-5'>\n                    <i class=\"fa fa-bell-o\" aria-hidden=\"true\"></i>\n                </span>\n            )\n        }\n\n        if (work.comment_alert) {\n            result.push(\n                <span className='color-green ml-5'>\n                    <i class=\"fa fa-comments-o \" aria-hidden=\"true\"></i>\n                </span>\n            )\n        }\n        if (work.report_alert) {\n            result.push(\n                <span className='color-blue ml-5'>\n                    <i class=\"fa fa-file-text-o \" aria-hidden=\"true\"></i>\n                </span>\n            )\n        }\n        if (work.status) {\n            result.push(\n\n                <div className=\"chip\" key={'work-status-chip' + work.id }>\n                    <div className=\"chip-media\" style={{ backgroundColor: work.status.color }} >\n                        <i className=\"icon f7-icons if-not-md\">plus_circle</i>\n                        <i className=\"icon material-icons md-only\"></i>\n                    </div>\n                    <div className=\"chip-label\">{work.status.title}</div>\n                </div>\n            )\n\n        } else {\n            result.push(<span className='mr-5'>{dict.add_stauts}</span>)\n        }\n        return (result)\n    }\n\n    function editable() {\n        if (props.editable) {\n            return (<Link href={'/works/new/' + props.task.id}><i className=\"ml-5 fa fa-plus\"></i> {dict.new}</Link>)\n        }\n    }\n\n    function title(work){        \n        return(<span>{work.title}</span>)\n    }\n\n    function text(work) {\n        var result = []\n        if (work.priority === 'high'){\n            result.push(<span className='va-2 fs-8 bg-yellow ml-10'>{dict[work.priority]}</span> )\n        }\n        if (work.priority === 'urgent'){\n            result.push(<span className='va-2 fs-8 bg-orange ml-10'>{dict[work.priority]}</span> )\n        }\n        result.push(<span  className='pd-5'>{work.details}</span>)\n        return(result)\n    }\n\n    if (props.task) {\n        return (\n            <Card>\n                <CardHeader>\n                    {dict.works}\n                    {editable()}\n                </CardHeader>\n                <CardContent>\n                    <List mediaList >\n                        {props.task.works.map((work) =>\n                            <ListItem\n                                key={'work'+work.id}\n                                className='fs-11 work-media'\n                                link={\"/works/\" + work.id}\n                                title={title(work)}\n                                after={chip(work)}\n                                text={text(work)}\n                            >\n                            </ListItem>\n                        )}\n                    </List>\n                </CardContent>\n                <CardFooter>\n\n                    <Searchbar\n                        className='p-static fs-10'\n                        disableButtonText={dict.cancel}\n                        placeholder={dict.search}\n                        inline={true}\n                    ></Searchbar>\n\n                </CardFooter>\n            </Card>\n        )\n    } else {\n        return (<ul></ul>)\n    }\n}\nexport default Works;\n","import React from \"react\";\nimport { Searchbar, Card, CardHeader, Link, CardContent, List, ListItem, CardFooter, ListInput, Col } from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\nimport Moment from 'react-moment';\nimport JDate from 'jalali-date';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\n\nconst Reports = (props) => {\n    if (props.task) {\n        function creation(t) {\n            var date = new Date(new window.ODate(t))\n            return (<Moment date={date} fromNow></Moment>)\n        }\n        function editable() {\n            if (props.editable) {\n                return (<Link href={'/reports/new/tasks/' + props.task.id}><i className=\"ml-5 fa fa-plus\"></i> {dict.new}</Link>)\n            }\n        }\n        return (\n            <Card>\n                <CardHeader>\n                    {dict.reports}\n                    {editable()}\n                </CardHeader>\n                <CardContent>\n                    <List mediaList >\n                        {props.task.reports.map((report) =>\n                            <ListItem\n                                key={'report' + report.id}\n                                className='fs-11 work-media'\n                                link={\"/reports/\" + report.id}\n                                title={report.title}\n                                after={creation(report.creation_date)}\n                                text={report.content}\n                            >\n                            </ListItem>\n                        )}\n                    </List>\n                </CardContent>\n                <CardFooter>\n                    <Searchbar\n                        className='p-static fs-10'\n                        disableButtonText={dict.cancel}\n                        placeholder={dict.search}\n                        inline={true}\n                    ></Searchbar>\n                </CardFooter>\n            </Card>\n        )\n    } else {\n        return (<ul></ul>)\n    }\n}\nexport default Reports;\n","import React from \"react\";\nimport { List, ListInput, BlockTitle, Block, Link, Button, Card, CardHeader, CardFooter } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport InputTrigger from 'react-input-trigger';\n\n\nconst CommentForm = (props) => {\n  return (\n    <Card>\n      <CardHeader>{dict.comment_form}</CardHeader>\n     <List >\n        <ListInput\n          label={dict.comment}\n          id=\"cm-form\"\n          type=\"textarea\"\n          placeholder='...'\n          maxlength='300'\n          resizable\n          clearButton={true}\n          onInput={(e) => {\n            props.handleChange({ commentContent: e.target.value })\n          }}\n        />\n        </List>\n      <CardFooter>\n        <Link></Link>\n        <Link className=\"btn-notice\"></Link>\n        <Button className=\"col btn\" fill onClick={props.submit}>{dict.submit}</Button>\n      </CardFooter>\n    </Card>\n  )\n}\nexport default CommentForm;\n","import React from \"react\";\nimport { List, ListItem, BlockTitle, Row, Link, Col } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport Moment from 'react-moment';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\n\nconst CommentList = (props) => {\n    var items = []\n    function editLink(comment) {\n        if (comment.editable) {\n            return (\n                <Link onClick={() => props.deleteCommentConfirm(comment.id)}>\n                    <i className=\"va ml-5 fa fa-trash\"></i>\n                </Link>\n            )\n        }\n    }\n    if (props.comments) {\n\n        for (let i = 0; i < props.comments.length; i++) {\n            var date = new Date(new window.ODate(props.comments[i].created_at))\n            var time =\n                <React.Fragment>\n                    {editLink(props.comments[i])}\n                    <Moment locale=\"fa\" fromNow ago>{date}</Moment>\n                    {dict.ago}\n                </React.Fragment>\n            items.push(\n                <ListItem\n                    key={'comment' + props.comments[i].id}\n                    className='fs-10'\n                    text={time}\n                    title={props.comments[i].profile.fullname + ':'}\n                    subtitle={props.comments[i].content}\n                >\n                    <img slot=\"media\" src={props.comments[i].profile.avatar} width=\"44\" height=\"44\" />\n                </ListItem>\n\n\n\n            )\n        }\n\n        return (\n            <React.Fragment>\n                <BlockTitle>{dict.comments}</BlockTitle>\n                <List mediaList inset>\n                    {items}\n                </List>\n                <Row noGap>\n                    <Col></Col>\n                    <Col className='center'>\n                        <a className=\"gray-color\" onClick={() => props.loadMore()}>\n                            {dict.more}\n                        </a>\n                    </Col>\n                    <Col></Col>\n                </Row>\n                <BlockTitle></BlockTitle>\n            </React.Fragment>\n        )\n    }\n    else {\n        return (<BlockTitle></BlockTitle>)\n    }\n}\nexport default CommentList;","import React from \"react\";\nimport { Block, AccordionContent, Card, Row, Col, CardHeader, CardContent, List, ListItem, Chip, Icon, CardFooter, BlockTitle, Link } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport Involvements from './involvements';\nimport Statuses from \"./status\";\nimport Works from \"./works\";\nimport Reports from \"./reports\";\nimport CommentForm from \"../comments/form\"\nimport CommentList from \"../comments/list\"\nimport 'moment-timezone';\nimport 'moment/locale/fa';\n\n\nconst TaskShow = (props) => {\n  if (props.task && props.access) {\n    function tags() {\n      var arr = []\n      props.task.the_tags.map((tag) =>\n        arr.push(<Chip key={'task-tag' + tag.id} text={tag.title} />)\n      )\n      return (arr)\n    }\n\n    function archived(){\n      if(props.task.archived){\n        return(\n          <Row>\n          <Col width='100' tabletWidth='100'>\n          <Card className='fs-11 card-orange'>\n            <CardContent>\n            <i class=\"ml-2 fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>\n            {dict.archived} <br/>\n            {props.task.archive_note}\n            </CardContent>\n            \n          </Card>\n          </Col>\n        </Row>\n        )\n      }\n\n    }\n\n    function isPublic() {\n      if (props.task.is_public) {\n        return (dict.public)\n      } else {\n        return (dict.private)\n      }\n    }\n\n    function access(segment) {\n      if (segment === 'statuses') {\n        var editable = false\n        if (props.access.includes('statuses')) {\n          editable = true\n        }\n        return (\n          <Statuses\n            task={props.task} searchStatus={props.searchStatus} editable={editable}\n            statuses={props.statuses} addStatus={props.addStatus}\n          />)\n      }\n\n      if (segment === 'involvements') {\n        var editable = false\n        if (props.access.includes('involvements')) {\n          editable = true\n        }\n        return (\n          <Involvements\n            task={props.task} searchProfile={props.searchProfile}\n            removeProfile={props.removeProfile} addProfile={props.addProfile}\n            profiles={props.profiles} changeRole={props.changeRole}\n            editable={editable} addGroup={props.addGroup}\n          />)\n      }\n\n\n      if (segment === 'works') {\n        var editable = false\n        if (props.access.includes('works')) {\n          editable = true\n        }\n        return (<Works task={props.task} editable={editable} ></Works>)\n      }\n\n      if (segment === 'reports') {\n        var editable = false\n        if (props.access.includes('reports')) {\n          editable = true\n        }\n        return (<Reports task={props.task} editable={editable} ></Reports>)\n      }\n\n      if (segment === 'comments') {\n        if (props.access.includes('comments')) {\n          return (\n            <CommentForm\n              model={props.task} submit={props.submitComment}\n              handleChange={props.handleChange} \n        \n             \n            />\n          )\n        }\n      }\n\n      if (segment === 'edit') {\n        if (props.access.includes('edit')) {\n          return (<Link href={'/tasks/' + props.task.id + '/edit'}><i className=\"ml-5 fa fa-cog\"></i></Link>)\n        }\n      }\n\n      if (segment === 'view') {\n        if (props.access.includes('view')) {\n          return (\n            <React.Fragment>\n              {archived()}\n              <Row>\n                <Col width='100' tabletWidth='50'>\n                  <Card>\n                    <CardHeader>\n                      {props.task.title}\n                      {access('edit')}\n                    </CardHeader>\n                    <CardContent>\n                      <List simple-list>\n                        <ListItem className='fs-11' title=''>{tags()}</ListItem>\n                        <ListItem className='fs-11' title=''>{isPublic()}</ListItem>\n                        <ListItem className='fs-11' title=''>{props.task.details}</ListItem>\n                      </List>\n\n                    </CardContent>\n                    <CardFooter>\n                      {access('statuses')}\n                    </CardFooter>\n                  </Card>\n                </Col>\n\n                <Col width='100' tabletWidth='50'>\n                  {access('involvements')}\n                </Col>\n              </Row>\n\n\n              <Row>\n                <Col width='100' tabletWidth='100'>\n                  {access('works')}\n                </Col>\n              </Row>\n\n              <Row>\n                <Col width='100' tabletWidth='100'>\n                  {access('reports')}\n                </Col>\n              </Row>\n\n              <BlockTitle>{dict.discussions}</BlockTitle>\n\n              {access('comments')}\n              <CommentList\n                comments={props.comments} deleteCommentConfirm={props.deleteCommentConfirm}\n                loadMore={props.loadMore} />\n\n\n            </React.Fragment>\n\n          )\n        }\n      }\n\n    }\n\n\n    return (<React.Fragment>{access('view')}</React.Fragment>)\n  } else {\n    return (null)\n  }\n}\nexport default TaskShow;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  Link,\n  Icon, Fab\n} from 'framework7-react';\nimport { dict } from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport TaskShow from \"../../containers/tasks/show\"\nimport { messaging } from \"../../init-fcm.js\";\n\nexport default class Layout extends Component {\n  constructor() {\n    super();\n    this.getInstance = this.getInstance.bind(this);\n    this.getList = this.getList.bind(this);\n    this.submit = this.submit.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.removeTask = this.removeTask.bind(this);\n    this.searchProfile = this.searchProfile.bind(this);\n    this.addProfile = this.addProfile.bind(this);\n    this.removeProfile = this.removeProfile.bind(this);\n    this.searchStatus = this.searchStatus.bind(this);\n    this.addStatus = this.addStatus.bind(this);\n    this.deleteComment = this.deleteComment.bind(this);\n    this.submitComment = this.submitComment.bind(this);\n    this.loadMore = this.loadMore.bind(this);\n    this.changeRole = this.changeRole.bind(this);\n    this.deleteCommentConfirm = this.deleteCommentConfirm.bind(this);\n    this.addGroup = this.addGroup.bind(this);\n    \n\n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      task: null,\n      id: null,\n      users: null,\n      assignedUsers: null,\n      user_id: null,\n      abilityTitle: '',\n      abilityValue: true,\n      ability: null,\n      comments: null,\n      works: null,\n      query: null,\n      profiles: [],\n      statuses: [],\n      access: [],\n      commentContent: '',\n\n    }\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.getInstance);\n    ModelStore.on(\"got_list\", this.getList);\n    ModelStore.on(\"deleted_instance\", this.getInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.getInstance);\n    ModelStore.removeListener(\"got_list\", this.getList);\n    ModelStore.removeListener(\"deleted_instance\", this.getInstance);\n  }\n\n  componentDidMount() {\n    MyActions.getInstance('tasks', this.$f7route.params['taskId'], this.state.token);\n  }\n\n  getInstance() {\n    var task = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (task && klass === 'Task') {\n      this.setState({\n        task: task,\n        id: task.id,\n        assignedUsers: task.users,\n        works: task.works,\n        comments: task.the_comments,\n        access: task.user_access\n      });\n    }\n    this.$$('.btn').show();\n  }\n\n\n  loadMore() {\n    this.setState({ page: this.state.page + 1 }, () => {\n      MyActions.getInstance('tasks', this.$f7route.params['taskId'], this.state.token, this.state.page);\n    });\n  }\n\n  getList() {\n    var list = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    if (list && klass === 'User') {\n      this.setState({\n        users: list,\n      });\n    }\n    if (list && klass === 'Profile') {\n      this.setState({\n        profiles: list,\n      });\n    }\n    if (list && klass === 'Status') {\n      this.setState({\n        statuses: list,\n      });\n    }\n  }\n\n  submit() {\n    this.$$('.btn').hide();\n    this.$$('.btn-notice').text(dict.submitting);\n    var data = { task_id: this.state.id, user_id: this.state.user_id }\n    MyActions.setInstance('users/assignments', data, this.state.token);\n  }\n\n  searchProfile(obj) {\n    this.setState({ profiles: [] });\n    this.setState(obj, () => {\n      MyActions.getList('profiles/search', this.state.page, { q: this.state.query });\n    });\n  }\n\n  searchStatus(obj) {\n    this.setState({ statuses: [] });\n    this.setState(obj, () => {\n      MyActions.getList('statuses/search', this.state.page, { q: this.state.query });\n    });\n  }\n\n  addProfile(profileId) {\n    var data = { id: this.state.id, profile_id: profileId }\n    MyActions.setInstance('tasks/involvements', data, this.state.token);\n  }\n\n  addStatus(statusId) {\n    var data = { id: this.state.id, status_id: statusId }\n    MyActions.setInstance('tasks/status', data, this.state.token);\n  }\n\n  removeProfile(profileId) {\n    var data = { id: this.state.id, profile_id: profileId }\n    MyActions.removeInstance('tasks/involvements', data, this.state.token);\n  }\n\n  changeRole(profile_id, role) {\n    var data = { id: this.state.id, profile_id: profile_id, role: role }\n    MyActions.setInstance('tasks/change_role', data, this.state.token);\n  }\n\n  submitComment() {\n    var data = { commentable_type: 'Task', commentable_id: this.state.id, content: this.state.commentContent }\n    MyActions.setInstance('comments', data, this.state.token);\n  }\n\n\n  deleteCommentConfirm(id) {\n    const self = this;\n    const app = self.$f7;\n    app.dialog.confirm(dict.are_you_sure, dict.alert, () => self.deleteComment(id))\n  }\n\n  deleteComment(id) {\n    var data = { id: id }\n    MyActions.removeInstance('comments', data, this.state.token, this.state.page);\n  }\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  fab() {\n    if (this.state.task) {\n      return (\n        <Fab href={\"/tasks/\" + this.state.task.id + \"/edit\"} target=\"#main-view\" position=\"left-bottom\" slot=\"fixed\" color=\"lime\">\n          <Icon ios=\"f7:edit\" aurora=\"f7:edit\" md=\"material:edit\"></Icon>\n          <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n        </Fab>\n      )\n    }\n  }\n\n\n\n  removeTask(user_id) {\n    MyActions.removeInstance('users/assignments', { user_id: user_id, task_id: this.state.id }, this.state.token);\n  }\n\n  addGroup(e, id) {\n    var data = { id: this.state.id, group_id: id }\n    if (e.target.checked) {\n      MyActions.setInstance('tasks/group_involvements', data, this.state.token);\n    } else {\n      MyActions.removeInstance('tasks/group_involvements', data, this.state.token);\n    }\n  }\n\n\n\n  render() {\n    const {\n      task, users, assignedUsers, ability,\n      profiles, statuses, works, commentContent,\n      comments, access, } = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.tasks} backLink={dict.back} backLinkForce={true}>\n          <Link panelOpen=\"right\">\n            <Icon f7=\"bars\"></Icon>\n          </Link>\n        </Navbar>\n        <TaskShow\n          task={task} users={users} ability={ability} profiles={profiles} statuses={statuses}\n          removeProfile={this.removeProfile} addProfile={this.addProfile}\n          searchProfile={this.searchProfile} removeAbility={this.removeAbility}\n          assignedUsers={assignedUsers} addAbility={this.addAbility}\n          removeTask={this.removeTask} submit={this.submit} handleChange={this.handleChangeValue}\n          searchStatus={this.searchStatus} addStatus={this.addStatus} works={works}\n          submitComment={this.submitComment} deleteCommentConfirm={this.deleteCommentConfirm}\n          commentContent={commentContent} comments={comments} loadMore={this.loadMore}\n          changeRole={this.changeRole} access={access} addGroup={this.addGroup}\n        />\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { Page, Navbar, Row, BlockTitle, Col, Fab, Icon, Card, Link } from 'framework7-react';\nimport TaskList from \"./list\"\nimport WorkList from \"./workList\"\nimport { dict } from '../../Dict';\n\nconst TaskIndex = (props) => {\n  function fab(a) {\n    if (props.ability) {\n      var result = []\n      props.ability.map((ab) => {\n        if (ab.title === a && ab.value) {\n          result.push(\n            <Fab href=\"/tasks/new\" target=\"#main-view\" position=\"left-bottom\" slot=\"fixed\" color=\"deeporange\">\n              <Icon ios=\"f7:add\" aurora=\"f7:add\" md=\"material:add\"></Icon>\n              <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n            </Fab>\n          )\n        }\n      })\n    }\n    return result\n  }\n  return (\n    <Page>\n      <Navbar title={dict.tasks} >\n        <Link panelOpen=\"right\">\n          <Icon f7=\"bars\"></Icon>\n        </Link>\n      </Navbar>\n      <BlockTitle>{dict.list}</BlockTitle>\n    {fab('create_task')}\n      <Row>\n        <Col width='100' tabletWidth='50'>\n          <Card>\n            <TaskList tasks={props.tasks} header={dict.your_tasks} sortChange={props.sortChange} />\n          </Card>\n        </Col>\n        <Col width='100' tabletWidth='50'>\n          <Card>\n            <WorkList works={props.works} header={dict.your_newest_works} sortChange={props.sortChange} />\n          </Card>\n        </Col>\n\n      </Row>\n\n    </Page>\n  )\n}\nexport default TaskIndex;\n","import React from \"react\"\nimport { Page,Fab, Icon } from 'framework7-react';\nimport ModelStore from \"../../stores/ModelStore\";\nimport TaskIndex from \"../../containers/tasks/index\"\nimport * as MyActions from \"../../actions/MyActions\";\nimport { dict} from '../../Dict';\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\n\nexport default class Layout extends React.Component {\n  constructor() {\n    super();\n    this.getList = this.getList.bind(this);\n    this.sortChange = this.sortChange.bind(this);\n    \n    this.state = {\n      token: window.localStorage.getItem('token'),\n      tasks: null,\n      works: null,\n      ability: null,\n    }\n  }\n  componentWillMount() {\n    ModelStore.on(\"got_list\", this.getList);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_list\", this.getList);\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  sortChange(i){\n    MyActions.getList('tasks', this.state.page, {order: i.title}, this.state.token);\n  }\n\n  loadData(){\n    const f7: Framework7 = Framework7.instance;\n    f7.toast.show({ text: dict.receiving, closeTimeout: 2000, position: 'top'});\n    MyActions.getList('tasks', this.state.page, {}, this.state.token);\n    MyActions.getList('works', this.state.page, {}, this.state.token);\n  }\n\n  getList() {\n    var list = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    if (list && klass === 'Task'){\n      this.setState({\n        tasks: list,\n        ability: list[0].ability\n      });\n    }\n    if (list && klass === 'Work'){\n      this.setState({\n        works: list,\n      });\n    }\n  }\n\n  render() {\n    const {tasks, works, ability} = this.state;\n    return(<TaskIndex tasks={tasks} ability={ability} works={works} sortChange={this.sortChange}/>)\n  }\n}\n","import React from \"react\";\nimport { List, Chip, ListInput, Block, Row, Button, BlockTitle, Card, ListItem, Col, Link } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport crypto from 'crypto-js';\n\n\nconst TaskForm = (props) => {\n  if (props.isPublic) {\n    var isPublicTask = true;\n  } else {\n    var isPublicTask = false;\n  }\n  function tags() {\n    if (props.tags) {\n      var chips = [\n        <div>\n          <a className='fs-11 ' href=\"#\" id='autocomplete-standalone-ajax'>\n            <div className=\"item-title fs-11\">\n              <i className=\"va-minus-2 ml-5 fa fa-plus\"></i>\n              {dict.tags}:\n        </div>\n          </a>\n        </div>]\n      props.tags.map((tag) =>\n        chips.push(<Chip text={tag.title} deleteable onClick={() => props.removeTag(tag.id)} />)\n      )\n      return chips\n    }\n  }\n\n  function deleteButton() {\n    if (props.editing) {\n      return (\n        <Col>\n          <Button className=\"col btn ml-5\" outline color='red' disabled={!props.editing} onClick={() => props.deleteTaskConfirm()}>{dict.delete}</Button>\n        </Col>\n      )\n    }\n  }\n\n  function archive() {\n    if (props.editing) {\n      return (\n        <List>\n          <ListItem checkbox value={props.archived} checked={props.archived} title={dict.archived}\n            onChange={(e) => {\n              props.handleChange({ archived: !JSON.parse(e.target.value) })\n            }}\n          ></ListItem>\n          <ListInput\n            label={dict.archive_note}\n            type=\"textarea\"\n            placeholder={dict.write_archive_note}\n            value={props.archiveNote}\n            onInput={(e) => {\n              props.handleChange({ archiveNote: e.target.value })\n            }}\n          />\n\n        </List>)\n    }\n\n  }\n  return (\n    <Card>\n      <BlockTitle>{dict.task}</BlockTitle>\n      <List >\n        <ListInput\n          label={dict.title}\n          type=\"text\"\n          placeholder={dict.select_appropriate_title}\n          defaultValue={props.task.title}\n          required={true}\n          onInput={(e) => {\n            props.handleChange({ title: e.target.value })\n          }}\n        />\n\n        <ListInput\n          label={dict.details}\n          type=\"textarea\"\n          placeholder={dict.write_appropriate_description}\n          value={props.details}\n          onInput={(e) => {\n            props.handleChange({ details: e.target.value })\n          }}\n        />\n\n        <ListItem radio value={false} checked={!isPublicTask} name=\"selectedMode\" title={dict.private}\n          onChange={(e) => {\n            console.log(e)\n            props.handleChange({ isPublic: JSON.parse(e.target.value) });\n          }}>\n        </ListItem>\n        <ListItem radio value={true} checked={isPublicTask} name=\"selectedMode\" title={dict.public}\n          onChange={(e) => {\n            console.log(e)\n            props.handleChange({ isPublic: JSON.parse(e.target.value) })\n          }}>\n        </ListItem>\n\n\n        <ListItem title={tags()}></ListItem>\n\n      </List>\n\n      {archive()}\n\n      <Block strong>\n        <Row tag=\"p\">\n          {deleteButton()}\n          <Col>\n            <Link className=\"btn-notice\"></Link>\n            <Button className=\"col btn\" fill onClick={props.submit}>{dict.submit}</Button>\n          </Col>\n        </Row>\n      </Block>\n    </Card >\n\n  )\n}\nexport default TaskForm;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  BlockTitle,\n} from 'framework7-react';\nimport { dict } from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport TaskForm from \"../../containers/tasks/form\"\nimport { conf } from '../../conf';\n\nexport default class TaskCreate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.loadTags = this.loadTags.bind(this);\n    this.pageAfterIn = this.pageAfterIn.bind(this);\n    this.removeTag = this.removeTag.bind(this);\n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      task: {},\n      title: null,\n      details: null,\n      deadline: new Date(),\n      start: new Date(),\n      startTime: '0:00',\n      deadlineTime: '0:00',\n      privateTask: true,\n      tags: [],\n      isPublic: false,\n    }\n  }\n\n\n  componentWillMount() {\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n  }\n\n  loadTags() {\n    const self = this;\n    const app = self.$f7;\n\n    app.autocomplete.create({\n      openIn: 'popup', //open in page\n      openerEl: '#autocomplete-standalone-ajax', //link that opens autocomplete\n      multiple: true, //allow multiple values\n      valueProperty: 'id', //object's \"value\" property name\n      textProperty: 'title', //object's \"text\" property name\n      searchbarDisableText: dict.cancel,\n      popupCloseLinkText: dict.close,\n      notFoundText: dict.not_found,\n      limit: 50,\n      searchbarPlaceholder: dict.search,\n      preloader: true, //enable preloader\n      source: function (query, render) {\n        var autocomplete = this;\n        var results = [];\n        if (query.length === 0) {\n          render(results);\n          return;\n        }\n        // Show Preloader\n        autocomplete.preloaderShow();\n        // Do Ajax request to Autocomplete data\n        app.request({\n          url: conf.server + '/tags/search',\n          method: 'GET',\n          dataType: 'json',\n          //send \"query\" to server. Useful in case you generate response dynamically\n          data: {\n            q: query\n          },\n          success: function (item) {\n            // Find matched items\n            for (var i = 0; i < item.data.length; i++) {\n              if (item.data[i].title.indexOf(query) >= 0) results.push(item.data[i]);\n            }\n            // Hide Preoloader\n            autocomplete.preloaderHide();\n            // Render items by passing array with result items\n            render(results);\n          }\n        });\n      },\n      on: {\n        change: function (value) {\n          if (value && value[value.length - 1]) {\n            self.setState({ tags: self.state.tags.concat({ title: value[value.length - 1].title, id: value[value.length - 1].id }) })\n          }\n        },\n      },\n    });\n  }\n\n  pageAfterIn() {\n    this.loadTags();\n  }\n\n  submit() {\n    this.$$('.btn').hide();\n    this.$$('.btn-notice').text(dict.submitting);\n    var data = {\n      title: this.state.title, public: this.state.isPublic,\n      details: this.state.details, tags: this.state.tags\n    }\n    if (this.state.title && this.state.title.length > 0) {\n      MyActions.setInstance('tasks', data, this.state.token);\n    } else {\n      const self = this;\n      self.$f7.dialog.alert(dict.incomplete_data, dict.alert);\n    }\n\n  }\n\n  removeTag(id) {\n    this.setState({\n      tags: this.state.tags.filter(function (tag) {\n        return tag.id !== id\n      })\n    });\n  }\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  setInstance() {\n    this.$$('.btn').show();\n    this.$f7router.navigate('/tasks/');\n  }\n\n\n\n  render() {\n    const { task, tags, isPublic } = this.state;\n    return (\n      <Page onPageAfterIn={this.pageAfterIn.bind(this)} backLink={dict.back} backLinkForce={true}>\n        <Navbar title={dict.task_form} backLink={dict.back} />\n        <BlockTitle>{dict.task_form}</BlockTitle>\n        <TaskForm\n          task={task} removeTag={this.removeTag} tags={tags} isPublic={isPublic}\n          submit={this.submit} editing={false} handleChange={this.handleChangeValue} />\n      </Page>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon\n} from 'framework7-react';\nimport { dict } from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport TaskForm from \"../../containers/tasks/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\nimport { conf } from '../../conf';\n\nexport default class DocumentUpdate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.getInstance = this.getInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.pageAfterIn = this.pageAfterIn.bind(this);\n    this.loadTags = this.loadTags.bind(this);\n    this.removeTag = this.removeTag.bind(this);\n    this.deleteTaskConfirm = this.deleteTaskConfirm.bind(this);\n    this.deleteTask = this.deleteTask.bind(this);\n    this.deleteInstance = this.deleteInstance.bind(this);\n\n     \n    this.state = {\n      token: window.localStorage.getItem('token'),\n      task: {},\n      id: null,\n      title: null,\n      details: null,\n      privateTask: true,\n      details: null,\n      tags: [],\n      isPublic: false,\n      selectedMode: false,\n      archived: false,\n      archiveNote: null,\n    }\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.setInstance);\n    ModelStore.on(\"deleted_instance\", this.deleteInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n    ModelStore.removeListener(\"deleted_instance\", this.deleteInstance);\n\n  }\n\n  pageAfterIn() {\n    this.loadTags();\n  }\n\n  loadTags() {\n    const self = this;\n    const app = self.$f7;\n\n    app.autocomplete.create({\n      openIn: 'popup', //open in page\n      openerEl: '#autocomplete-standalone-ajax', //link that opens autocomplete\n      multiple: true, //allow multiple values\n      valueProperty: 'id', //object's \"value\" property name\n      textProperty: 'title', //object's \"text\" property name\n      limit: 50,\n      searchbarPlaceholder: dict.search,\n      searchbarDisableText: dict.cancel,\n      popupCloseLinkText: dict.close,\n      notFoundText: dict.not_found,\n      preloader: true, //enable preloader\n      source: function (query, render) {\n        var autocomplete = this;\n        var results = [];\n        if (query.length === 0) {\n          render(results);\n          return;\n        }\n        // Show Preloader\n        autocomplete.preloaderShow();\n        // Do Ajax request to Autocomplete data\n        app.request({\n          url: conf.server + '/tags/search',\n          method: 'GET',\n          dataType: 'json',\n          //send \"query\" to server. Useful in case you generate response dynamically\n          data: {\n            q: query\n          },\n          success: function (item) {\n            // Find matched items\n            for (var i = 0; i < item.data.length; i++) {\n              if (item.data[i].title.indexOf(query) >= 0) results.push(item.data[i]);\n            }\n            // Hide Preoloader\n            autocomplete.preloaderHide();\n            // Render items by passing array with result items\n            render(results);\n          }\n        });\n      },\n      on: {\n        change: function (value) {\n          if (value && value[value.length - 1]) {\n            self.setState({ tags: self.state.tags.concat({ title: value[value.length - 1].title, id: value[value.length - 1].id }) })\n          }\n        },\n      },\n    });\n  }\n\n\n\n  submit() {\n    this.$$('.btn').hide();\n    this.$$('.btn-notice').text(dict.submitting);\n    var data = {\n      id: this.state.id, title: this.state.title, public: this.state.isPublic,\n      details: this.state.details, tags: this.state.tags, archive_note: this.state.archiveNote,\n      archived: this.state.archived\n    }\n    if (this.state.title && this.state.title.length > 0) {\n      MyActions.updateInstance('tasks', data, this.state.token);\n    } else {\n      const self = this;\n      self.$f7.dialog.alert(dict.incomplete_data, dict.alert);\n    }\n\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  loadData() {\n    const f7: Framework7 = Framework7.instance;\n    f7.toast.show({ text: dict.receiving, closeTimeout: 2000, position: 'top' });\n    if (this.$f7route.params['taskId']) {\n      MyActions.getInstance('tasks', this.$f7route.params['taskId'], this.state.token);\n    }\n  }\n\n\n  getInstance() {\n    var task = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (task && klass === 'Task') {\n      this.setState({\n        title: task.title,\n        details: task.details,\n        id: task.id,\n        task: task,\n        defaultTask: task.default_task,\n        tags: task.the_tags,\n        isPublic: task.is_public,\n        archived: task.archived, \n        archiveNote: task.archive_note, \n      }, () => this.loadTags());\n    }\n\n  }\n\n  removeTag(id) {\n    this.setState({\n      tags: this.state.tags.filter(function (tag) {\n        return tag.id !== id\n      })\n    });\n  }\n\n  handleChangeValue(obj) {\n    console.log(obj)\n    this.setState(obj);\n  }\n\n  deleteTaskConfirm(){\n    const self = this;\n    const app = self.$f7;\n    app.dialog.confirm(dict.are_you_sure, dict.alert, self.deleteTask)\n  }\n\n  deleteTask(){\n    var data = { id: this.state.id}\n    MyActions.removeInstance('tasks', data, this.state.token);\n  }\n\n\n  deleteInstance() {\n    this.$f7router.navigate('/tasks/');\n  }\n\n\n  setInstance() {\n    var task = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (task && klass === 'Task') {\n      this.$$('.btn').show();\n      this.$f7router.navigate('/tasks/' + task.id);\n    }\n  }\n\n\n  render() {\n    const { task, defaultTask, title, details, isPublic, tags, selectedMode, archived, archiveNote } = this.state;\n    return (\n      <Page onPageAfterIn={this.pageAfterIn.bind(this)} backLink={dict.back} backLinkForce={true}>\n        <Navbar title={dict.task_form} backLink={dict.back} />\n        <BlockTitle>{dict.task_form}</BlockTitle>\n        <TaskForm\n          task={task} title={title} isPublic={isPublic}\n          tags={tags} removeTag={this.removeTag} selectedMode={selectedMode}\n          details={details} defaultTask={defaultTask} submit={this.submit}\n          editing={true} handleChange={this.handleChangeValue}\n          deleteTaskConfirm={this.deleteTaskConfirm}\n          archived={archived} archiveNote={archiveNote}\n          />\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { List, ListItem, Link } from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\nimport Moment from 'react-moment';\nimport JDate from 'jalali-date';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\n\nconst InvolvementList = (props) => {\n\n  if (props.involvements) {\n    function removeLink(involvement){\n      if (involvement.role !== 'Creator' && props.editable){\n        return(<Link className=\"mt-4\" onClick={() => props.removeProfile(involvement.profile.id)}>{dict.remove}</Link>)\n      }\n    }\n\n    function select(involvement) {\n      if (involvement.role !== 'Creator' && props.editable) {\n        return (\n          <select name=\"role\" onChange={(e) => { props.changeRole(involvement.profile.id, e.target.value) }}>\n            {option('Admin', involvement)}\n            {option('Confirmer', involvement)}\n            {option('Colleague', involvement)}\n            {option('Observer', involvement)}\n          </select>\n        )\n      }\n    }\n    function option(role, involvement) {\n      var selected = false\n      if (involvement.role == role) {\n        selected = true\n      }\n      return (<option value={role} selected={selected}>{dict[role]}</option>)\n    }\n    function addLink(involvement) {\n      if (props.removeProfile) {\n        return (\n          <div className='inline'>\n             {removeLink(involvement)}\n            <a className=\" fs-10 smart-select smart-select-init\" data-open-in=\"popover\">\n              {select(involvement)}\n              <div className=\"item-content\">\n                <div className=\"item-inner bg-w-after\">\n                  <div className=\"item-title\">{dict.role}</div>\n                  <div className=\"item-after mt-2\">{dict[involvement.role]}</div>\n                </div>\n              </div>\n            </a>\n          </div>\n        )\n      }\n    }\n    return (\n      <List className='fs-11'>\n        {props.involvements.map((involvement) =>\n          <ListItem\n            key={'involvement' + involvement.profile.id}\n            title={involvement.profile.fullname}\n            after={addLink(involvement)}>\n            <img slot=\"media\" src={involvement.profile.avatar} width=\"27\" height=\"27\" />\n          </ListItem>\n        )}\n      </List>\n    )\n  } else {\n    return (<ul></ul>)\n  }\n}\nexport default InvolvementList;\n","import React from \"react\";\nimport { Link, AccordionContent, Card, CardHeader, CardContent, List, ListItem, CardFooter, ListInput, Col } from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\nimport Moment from 'react-moment';\nimport JDate from 'jalali-date';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\nimport InvolvementList from \"./involvementList\";\nimport  SimpleList from \"../profiles/simpleList\";\n\nconst Partcipants = (props) => {\n    function editable() {\n        if (props.editable) {\n            return (\n                <List accordionList className='w-100'>\n                <ListItem accordionItem className='fs-10' title={\"+ \" + dict.add}>\n                    <AccordionContent>\n                        <List >\n                            <ListInput\n                                outline\n                                label={dict.search}\n                                floatingLabel\n                                type=\"text\"\n                                placeholder=\"\"\n                                clearButton\n                                onInput={(e) => {\n                                    props.searchProfile({ query: e.target.value })\n                                  }}\n                            />\n                        </List>\n                        <SimpleList profiles={props.profiles} addProfile={props.addProfile}  />\n                    </AccordionContent>\n                </ListItem>\n            </List>\n                )\n        }\n    }\n    if (props.work) {\n        return (\n            <Card>\n                <CardHeader>\n                    {dict.coworkers}\n                </CardHeader>\n                <CardContent className='mh-90'>\n                    <List>\n                        <InvolvementList \n                            involvements={props.work.the_involvements} removeProfile={props.removeProfile} \n                            changeRole={props.changeRole} editable={props.editable} />\n                    </List>\n                </CardContent>\n                <CardFooter>\n                    {editable()}\n                </CardFooter>\n            </Card>\n        )\n    } else {\n        return (<ul></ul>)\n    }\n}\nexport default Partcipants;\n","import React from \"react\";\nimport { Block, AccordionContent, Icon, Chip, CardContent, List, ListItem, CardFooter, ListInput, Col } from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\nimport Moment from 'react-moment';\nimport JDate from 'jalali-date';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\nimport SimpleList from \"../statuses/simpleList\";\n\nconst Statuses = (props) => {\n    function chip(status) {\n        if (status) {\n            return (\n                <div>\n                    <div className=\"chip\" >\n                        <div className=\"chip-media\" style={{ backgroundColor: status.color }} >\n                            <i className=\"icon f7-icons if-not-md\">plus_circle</i>\n                            <i className=\"icon material-icons md-only\"></i>\n                        </div>\n                        <div className=\"chip-label\">{status.title}</div>\n                    </div>\n                </div>\n            )\n        } else {\n            return (<div>{dict.add_stauts}</div>)\n        }\n    }\n    function editable() {\n        if (props.editable) {\n            return (\n                <AccordionContent>\n                    <List >\n                        <ListInput\n                            outline\n                            label={dict.search}\n                            floatingLabel\n                            type=\"text\"\n                            placeholder=\"\"\n                            clearButton\n                            onInput={(e) => {\n                                props.searchStatus({ query: e.target.value })\n                            }}\n                        />\n                    </List>\n                    <SimpleList statuses={props.statuses} addStatus={props.addStatus} />\n                </AccordionContent>)\n        }\n    }\n    if (props.work) {\n\n        return (\n            <List accordionList className='w-100'>\n                <ListItem accordionItem className='fs-10'\n                    key={'status' + props.work.id}\n                    title={chip(props.work.status)}\n                >\n                    {editable()}\n                </ListItem>\n            </List>\n        )\n    } else {\n        return (<ul></ul>)\n    }\n}\nexport default Statuses;\n","import React from \"react\";\nimport { Block, Card, CardHeader, Link, CardContent, List, ListItem, CardFooter, ListInput, Col } from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\nimport Moment from 'react-moment';\nimport JDate from 'jalali-date';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\n\nconst Reports = (props) => {\n    if (props.work) {\n        function creation(t) {\n            var date = new Date(new window.ODate(t))\n            return(<Moment date={date} fromNow></Moment>)\n        }\n        function editable() {\n            if (props.editable) {\n                return ( <Link href={'/reports/new/works/' + props.work.id}><i className=\"ml-5 fa fa-plus\"></i> {dict.new}</Link>)\n            }\n        }\n        return (\n            <Card>\n                <CardHeader>\n                    {dict.reports}\n                    {editable()}\n                </CardHeader>\n                <CardContent>\n                    <List mediaList >\n                        {props.work.reports.map((report) =>\n                            <ListItem\n                                key={'report' + report.id}\n                                className='fs-11 work-media'\n                                link={\"/reports/\" + report.id}\n                                title={report.title}\n                                after={creation(report.creation_date)}\n                                text={report.content}\n                            >\n                            </ListItem>\n                        )}\n                    </List>\n                </CardContent>\n                <CardFooter>\n                    +\n              </CardFooter>\n            </Card>\n        )\n    } else {\n        return (<ul></ul>)\n    }\n}\nexport default Reports;\n","import React from \"react\";\nimport { List, ListItem, Chip, Link } from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\nimport Moment from 'react-moment';\nimport JDate from 'jalali-date';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\n\nconst TodosInvolvementsList = (props) => {\n\n  function addInvolvements(todo) {\n    var chips = []\n    todo.involvements.map((involvement) =>\n      chips.push(<Chip key={'chip' + '-' + todo.id + '-' + involvement.profile.id} className=\"ml-5\" text={involvement.profile.fullname} />)\n    )\n    if (props.editable) {\n      chips.push(<Link key={'todoEdit' + todo.id} href={'/todos/' + todo.id + '/edit'}><i className=\"ml-5 fa fa-edit\"></i></Link>)\n      chips.push(<Link key={'todoDelete' + todo.id} onClick={() => props.deleteTodoConfirm(todo.id)}><i className=\"ml-5 fa fa-trash\"></i></Link>)\n    }\n\n    return (chips)\n\n  }\n  function lt(todo) {\n    if (todo.check) {\n      return ('of-scroll line-through ')\n    } else {\n      return ('of-scroll')\n    }\n  }\n  if (props.todos) {\n    return (\n      <List className='fs-11 ' >\n        {props.todos.map((todo) =>\n\n          <li className={lt(todo)} key={'todo' + todo.id}>\n            <label className=\"item-content item-checkbox\">\n              <input type=\"checkbox\" value=\"\" checked={todo.check} onChange={(e) => props.todoChecked(todo.id, e)}></input>\n              <i className=\"icon icon-checkbox\"></i>\n              <div className=\"item-inner of-scroll\">\n                <div className=\"item-title of-visible mw-auto\">{todo.title}</div>\n                <div className=\"item-after\">\n                  <span>\n                    {addInvolvements(todo)}\n                  </span>\n                </div>\n              </div>\n            </label>\n          </li>\n        )}\n      </List>\n\n    )\n  } else {\n    return (<ul></ul>)\n  }\n}\nexport default TodosInvolvementsList;\n        /*<ListItem\nclassName={lt(todo)}\ncheckbox\nchecked={todo.check}\nonChange={(e) => props.todoChecked(todo.id,e)}\ntitle={todo.title}\nafter={addInvolvements(todo)}>\n</ListItem>*/","import React from \"react\";\nimport { List, ListItem, ListInput, Block, Row, Button, Link, Col } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport crypto from 'crypto-js';\n\n\nconst TodoForm = (props) => {\n  if (true) {\n    function involvementChecked(workInvolvement) {\n      var flag = false\n      props.involvements.map((involvement) => {\n        if (involvement.id === workInvolvement.profile.id) {\n          flag = true\n        }\n      }\n      )\n      return flag\n    }\n    return (\n      <List>\n        <ListInput\n          key='todos-form-title'\n          label={dict.title}\n          type=\"text\"\n          placeholder={dict.select_appropriate_title}\n          defaultValue={props.title}\n          required={true}\n          onInput={(e) => {\n            props.handleChange({ title: e.target.value })\n          }}\n        />\n\n        <List className='fs-11 ' >\n          {props.workInvolvements.map((workInvolvement) =>\n            <ListItem\n              key={workInvolvement.id}\n              checkbox\n              checked={involvementChecked(workInvolvement)}\n              onChange={(e) => props.involvementCheck(workInvolvement.profile.id, e)}\n              title={workInvolvement.profile.fullname}\n              after=''>\n            </ListItem>\n\n          )}\n        </List>\n\n\n\n        <Block strong>\n          <Row tag=\"p\">\n            <Col>\n            <Link className=\"btn-notice\"></Link>\n              <Button className=\"col btn\" fill disabled={!props.editing} onClick={props.submit}>{dict.submit}</Button>\n            </Col>\n          </Row>\n        </Block>\n      </List>\n    )\n  } else {\n    return (null)\n  }\n\n}\nexport default TodoForm;\n","import React from \"react\";\nimport { Link, AccordionContent, Card, CardHeader, CardContent, List, ListItem, CardFooter, ListInput, Button } from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\nimport Moment from 'react-moment';\nimport JDate from 'jalali-date';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\nimport TodosInvolvementsList from \"./todosInvolvementList\";\nimport  SimpleList from \"../profiles/simpleList\";\nimport  TodoForm from \"./form\";\n\nconst TodoList = (props) => {\n    if (props.work) {\n        function editable() {\n            if (props.editable) {\n                return ( <Link href={'/todos/new/' + props.work.id}><i className=\"ml-5 fa fa-plus\"></i> {dict.new}</Link>)\n            }\n        }\n        return (\n            <Card className='bg-gray'>\n                <CardHeader>\n                    {dict.todo_list}\n                    {editable()}\n                </CardHeader>\n                <CardContent>\n                    <List>\n                        <TodosInvolvementsList \n                        todos={props.todos} todoChecked={props.todoChecked} \n                        deleteTodoConfirm={props.deleteTodoConfirm} editable={props.editable}\n                        />\n                    </List>\n                </CardContent>\n                <CardFooter>\n                    \n                </CardFooter>\n            </Card>\n        )\n    } else {\n        return (<ul></ul>)\n    }\n}\nexport default TodoList;\n","import React from \"react\";\nimport { Block, AccordionContent, Card, Row, Col, CardHeader, CardContent, List, ListItem, Chip, Icon, CardFooter, BlockTitle, Link } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport Involvements from './involvements';\nimport Statuses from \"./status\";\nimport Reports from \"./reports\";\nimport Moment from 'react-moment';\nimport JDate from 'jalali-date';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\nimport CommentForm from \"../comments/form\"\nimport CommentList from \"../comments/list\"\nimport TodoList from \"../todos/list\"\n\nconst WorkShow = (props) => {\nconsole.log(props.work)\n  function archived(){\n    if(props.work.archived){\n      return(\n        <Row>\n        <Col width='100' tabletWidth='100'>\n        <Card className='fs-11 card-orange'>\n          <CardContent>\n          <i class=\"ml-2 fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>\n          {dict.archived} <br/>\n          {props.work.task.archive_note}\n          </CardContent>\n          \n        </Card>\n        </Col>\n      </Row>\n      )\n    }\n\n  }\n\n  function access(segment) {\n    if (segment === 'statuses') {\n      var editable = false\n      if (props.access.includes('statuses')) {\n        editable = true\n      }\n      return (\n        <Statuses\n          work={props.work} searchStatus={props.searchStatus} editable={editable}\n          statuses={props.statuses} addStatus={props.addStatus}\n        />\n      )\n    }\n\n    if (segment === 'involvements') {\n      var editable = false\n      if (props.access.includes('involvements')) {\n        editable = true\n      }\n      return (\n        <Involvements\n          work={props.work} searchProfile={props.searchProfile}\n          removeProfile={props.removeProfile} addProfile={props.addProfile}\n          profiles={props.profiles} changeRole={props.changeRole}\n          editable={editable} />\n      )\n    }\n\n    if (segment === 'todos') {\n      var editable = false\n      if (props.access.includes('todos')) {\n        editable = true\n      }\n      return (\n        <TodoList \n        work={props.work} todos={props.todos} \n        editable={editable} todoChecked={props.todoChecked}\n        deleteTodoConfirm={props.deleteTodoConfirm}\n        />\n      )\n    }\n\n\n    if (segment === 'reports') {\n      var editable = false\n      if (props.access.includes('reports')) {\n        editable = true\n      }\n      return (<Reports work={props.work} editable={editable} ></Reports>)\n    }\n\n    if (segment === 'comments') {\n      if (props.access.includes('comments')) {\n        return (<CommentForm model={props.work} submit={props.submitComment} handleChange={props.handleChange} />)\n      }\n    }\n\n    if (segment === 'edit') {\n      if (props.access.includes('edit')) {\n        return (<Link href={'/works/' + props.work.id + '/edit'}><i className=\"ml-5 fa fa-cog\"></i></Link>)\n      }\n    }\n\n\n    if (segment === 'view') {\n      if (props.access.includes('view')) {\n        return (\n          <React.Fragment>\n            {archived()}\n            <Row>\n              <Col width='100' tabletWidth='50'>\n                <Card>\n                  <CardHeader>\n                    {props.work.title}\n                    {access('edit')}\n                  </CardHeader>\n                  <CardContent>\n                    <List simple-list>\n                      <ListItem className='fs-11' title={dict.task + ': ' + props.work.task.title} href={'/tasks/' + props.work.task.id}></ListItem>\n                      <ListItem className='fs-11' title={dict.start_date + ': ' + props.work.start_date_j}></ListItem>\n                      <ListItem className='fs-11' title={dict.deadline + ': ' + props.work.deadline_date_j}></ListItem>\n\n                      <ListItem className='fs-11' title=''></ListItem>\n                    </List>\n                    <span className='fs-11'>{props.work.details}</span>\n\n                  </CardContent>\n                  <CardFooter>\n                    {access('statuses')}\n                  </CardFooter>\n                </Card>\n              </Col>\n\n              <Col width='100' tabletWidth='50'>\n                {access('involvements')}\n              </Col>\n            </Row>\n\n            <Row>\n              <Col width='100' tabletWidth='100'>\n                {access('todos')}\n              </Col>\n            </Row>\n\n            <Row>\n              <Col width='100' tabletWidth='100'>\n                {access('reports')}\n              </Col>\n            </Row>\n            {access('comments')}\n\n            <CommentList comments={props.comments} deleteCommentConfirm={props.deleteCommentConfirm}  />\n\n          </React.Fragment>\n        )\n      }\n    }\n\n  }\n\n  if (props.work && props.access) {\n    return (<React.Fragment>{access('view')}</React.Fragment>)\n  } else {\n    return (null)\n  }\n}\nexport default WorkShow;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  Link,\n  Icon, Fab\n} from 'framework7-react';\nimport { dict } from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport WorkShow from \"../../containers/works/show\"\n\nexport default class Layout extends Component {\n  constructor() {\n    super();\n    this.getInstance = this.getInstance.bind(this);\n    this.getList = this.getList.bind(this);\n    this.submit = this.submit.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.removeWork = this.removeWork.bind(this);\n    this.addAbility = this.addAbility.bind(this);\n    this.removeAbility = this.removeAbility.bind(this);\n    this.searchProfile = this.searchProfile.bind(this);\n    this.addProfile = this.addProfile.bind(this);\n    this.removeProfile = this.removeProfile.bind(this);\n    this.searchStatus = this.searchStatus.bind(this);\n    this.addStatus = this.addStatus.bind(this);\n    this.deleteComment = this.deleteComment.bind(this);\n    this.deleteCommentConfirm = this.deleteCommentConfirm.bind(this);\n    this.submitComment = this.submitComment.bind(this);\n    this.loadMore = this.loadMore.bind(this);\n    this.changeRole = this.changeRole.bind(this);\n    this.todoChecked = this.todoChecked.bind(this);\n    this.deleteTodoConfirm = this.deleteTodoConfirm.bind(this);\n    this.deleteTodo = this.deleteTodo.bind(this);\n    \n    \n    \n    this.state = {\n      token: window.localStorage.getItem('token'),\n      work: null,\n      id: null,\n      users: null,\n      assignedUsers: null,\n      user_id: null,\n      abilityTitle: '',\n      abilityValue: true,\n      ability: null,\n      query: null,\n      profiles: [],\n      statuses: [],\n      commentContent: '',\n      access: null,\n      comments: null,\n      todos: [],\n    }\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.getInstance);\n    ModelStore.on(\"got_list\", this.getList);\n    ModelStore.on(\"deleted_instance\", this.getInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.getInstance);\n    ModelStore.removeListener(\"got_list\", this.getList);\n    ModelStore.removeListener(\"deleted_instance\", this.getInstance);\n  }\n\n  componentDidMount() {\n    MyActions.getInstance('works', this.$f7route.params['workId'], this.state.token);\n  }\n\n  getInstance() {\n    var work = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (work && klass === 'Work') {\n      this.setState({\n        work: work,\n        id: work.id,\n        assignedUsers: work.users,\n        ability: work.ability,\n        comments: work.the_comments,\n        access: work.user_access,\n        todos: work.the_todos,\n        //involvementss: work.the_involvementss\n      });\n    }\n    this.$$('.btn').show();\n  }\n\n  getList() {\n    var list = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    if (list && klass === 'User') {\n      this.setState({\n        users: list,\n      });\n    }\n    if (list && klass === 'Profile') {\n      this.setState({\n        profiles: list,\n      });\n    }\n    if (list && klass === 'Status') {\n      this.setState({\n        statuses: list,\n      });\n    }\n  }\n\n  submit() {\n    this.$$('.btn').hide();\n    this.$$('.btn-notice').text(dict.submitting);\n    var data = { work_id: this.state.id, user_id: this.state.user_id }\n    MyActions.setInstance('users/assignments', data, this.state.token);\n  }\n\n  searchProfile(obj){\n    this.setState({ profiles: []});\n    this.setState(obj, () => {\n      MyActions.getList('profiles/search', this.state.page, {q: this.state.query});\n  });  \n  }\n\n  searchStatus(obj){\n    this.setState({ statuses: []});\n    this.setState(obj, () => {\n      MyActions.getList('statuses/search', this.state.page, {q: this.state.query});\n  });  \n  }\n\n  addProfile(profileId){\n    var data = { id: this.state.id, profile_id: profileId}\n    MyActions.setInstance('works/involvements', data, this.state.token);\n  }\n\n  addStatus(statusId){\n    var data = { id: this.state.id, status_id: statusId}\n    MyActions.setInstance('works/status', data, this.state.token);\n  }\n\n  removeProfile(profileId) {\n    var data = { id: this.state.id, profile_id: profileId}\n    MyActions.removeInstance('works/involvements', data, this.state.token);\n  }\n\n  addAbility() {\n    var data = { id: this.state.id, ability_title: this.state.abilityTitle, ability_value: this.state.abilityValue}\n    MyActions.setInstance('works/abilities', data, this.state.token);\n  }\n\n  changeRole(profile_id, role) {\n    var data = { id: this.state.id, profile_id: profile_id, role: role}\n    MyActions.setInstance('works/change_role', data, this.state.token);\n  }\n\n\n  loadMore() {\n    this.setState({ page: this.state.page + 1 }, () => {\n      MyActions.getInstance('works', this.$f7route.params['workId'], this.state.token, this.state.page);\n    });\n  }\n\n\n  submitComment() {\n    var data = { commentable_type: 'Work' ,commentable_id: this.state.id, content: this.state.commentContent }\n    MyActions.setInstance('comments', data, this.state.token);\n  }\n\n\n  deleteCommentConfirm(id){\n    const self = this;\n    const app = self.$f7;\n    app.dialog.confirm(dict.are_you_sure, dict.alert, () => self.deleteComment(id))\n  }\n\n  deleteComment(id) {\n    var data = { id: id }\n    MyActions.removeInstance('comments', data, this.state.token, this.state.page);\n  }\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  todoChecked(id, e){\n    var data={id: id, is_done: e.target.checked}\n    MyActions.setInstance('todos/check_todo', data, this.state.token);\n  }\n\n  fab() {\n    if (this.state.work) {\n      return (\n        <Fab href={\"/works/\" + this.state.work.id + \"/edit\"} target=\"#main-view\" position=\"left-bottom\" slot=\"fixed\" color=\"lime\">\n          <Icon ios=\"f7:edit\" aurora=\"f7:edit\" md=\"material:edit\"></Icon>\n          <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n        </Fab>\n      )\n    }\n  }\n\n  deleteTodoConfirm(id){\n    const self = this;\n    const app = self.$f7;\n    app.dialog.confirm(dict.are_you_sure, dict.alert, () => self.deleteTodo(id))\n  }\n\n  deleteTodo(id){\n    var data = {id: id}\n    MyActions.removeInstance('todos', data, this.state.token);\n  }\n\n  removeWork(user_id) {\n    MyActions.removeInstance('users/assignments', { user_id: user_id, work_id: this.state.id }, this.state.token);\n  }\n\n  removeAbility(title){\n    MyActions.removeInstance('works/abilities', { id: this.state.id, title: title }, this.state.token);\n  }\n\n  render() {\n    const { work, users, assignedUsers, ability, profiles, statuses, comments, commentContent, access, todos } = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.works} backLinkForce={true} backLink={dict.back} >\n        <Link panelOpen=\"right\">\n          <Icon f7=\"bars\"></Icon>\n        </Link>\n        </Navbar>\n        <WorkShow \n          work={work} users={users} ability={ability} profiles={profiles} statuses={statuses}\n          removeProfile={this.removeProfile} addProfile={this.addProfile}\n          searchProfile={this.searchProfile} removeAbility={this.removeAbility}\n          assignedUsers={assignedUsers} addAbility={this.addAbility} \n          removeWork={this.removeWork} submit={this.submit} handleChange={this.handleChangeValue}\n          searchStatus={this.searchStatus} addStatus={this.addStatus}\n          submitComment={this.submitComment} deleteCommentConfirm={this.deleteCommentConfirm}\n          commentContent={commentContent} comments={comments} loadMore={this.loadMore}\n          changeRole={this.changeRole} access={access} todos={todos} \n          todoChecked={this.todoChecked} deleteTodoConfirm={this.deleteTodoConfirm}\n          />\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { List, ListItem} from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\nimport Moment from 'react-moment';\nimport JDate from 'jalali-date';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\n\nconst WorkList = (props) => {\n  function title(t) {\n    var date = new Date(new window.ODate(t))\n    return(<Moment date={date} fromNow></Moment>)\n  }\n  if (props.works) {\n    console.log(props.works)\n    \n    return (\n      <List>\n        {props.works.map((work) =>\n        <ListItem key={'worklist' + work.id} header={work.title} title={title(work.deadline_date)} link={'/works/'+work.id}></ListItem>\n        )}\n      </List>\n    )\n  } else {\n    return (<ul></ul>)\n  }\n}\nexport default WorkList;\n","import React from \"react\";\nimport { Page, Navbar, List, BlockTitle, ListItem, Fab, Icon,Preloader, Block} from 'framework7-react';\nimport WorkList from \"./list\"\nimport { dict} from '../../Dict';\n\nconst WorkIndex = (props) => {\n  return(\n    <Page>\n      <Navbar title={dict.works} backLink={dict.back} >\n      </Navbar>\n      <BlockTitle>{dict.list}</BlockTitle>\n      <WorkList works={props.works}/>\n    </Page>\n  )\n}\nexport default WorkIndex;\n","import React from \"react\"\nimport { Page,Fab, Icon } from 'framework7-react';\nimport ModelStore from \"../../stores/ModelStore\";\nimport WorkIndex from \"../../containers/works/index\"\nimport * as MyActions from \"../../actions/MyActions\";\nimport { dict} from '../../Dict';\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\n\nexport default class Layout extends React.Component {\n  constructor() {\n    super();\n    this.getList = this.getList.bind(this);\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      works: null,\n    }\n  }\n  componentWillMount() {\n    ModelStore.on(\"got_list\", this.getList);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_list\", this.getList);\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  loadData(){\n    const f7: Framework7 = Framework7.instance;\n    f7.toast.show({ text: dict.receiving, closeTimeout: 2000, position: 'top'});\n    MyActions.getList('works', this.state.page, {}, this.state.token);\n  }\n\n  getList() {\n    var works = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    if (works && klass === 'Work'){\n      this.setState({\n        works: works,\n      });\n    }\n  }\n\n  render() {\n    const {works} = this.state;\n    return(<WorkIndex works={works}/>)\n  }\n}\n","import React from \"react\";\nimport { List, Col, ListInput, Block, Row, Button, BlockTitle, Card, Link } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport crypto from 'crypto-js';\n\n\nconst WorkForm = (props) => {\n  if (props.privateWork) {\n    var isPrivateWork = true;\n  } else {\n    var isPrivateWork = false\n  }\n\n  function deleteButton() {\n    if (props.editing) {\n      return (\n        <Col>\n          <Button className=\"col btn ml-5\" outline color='red' disabled={!props.editing} onClick={() => props.deleteWorkConfirm()}>{dict.delete}</Button>\n        </Col>\n      )\n    }\n  }\n  return (\n    <Card>\n      <BlockTitle>{dict.work}</BlockTitle>\n      <List >\n        <ListInput\n          label={dict.title}\n          type=\"text\"\n          placeholder={dict.select_appropriate_title}\n          defaultValue={props.work.title}\n          required={true}\n          onInput={(e) => {\n            props.handleChange({ title: e.target.value })\n          }}\n        />\n\n        <ListInput\n          label={dict.details}\n          type=\"textarea\"\n          placeholder={dict.write_appropriate_description}\n          value={props.content}\n          onInput={(e) => {\n            props.handleChange({ details: e.target.value })\n          }}\n        />\n\n        <ListInput\n          label={dict.priority}\n          type=\"select\"\n          defaultValue={props.priority}\n          onChange={(e) => {\n            props.handleChange({ priority: e.target.value })\n          }}\n        >\n          <option value=\"normal\">{dict.normal}</option>\n          <option value=\"high\">{dict.high}</option>\n          <option value=\"urgent\">{dict.urgent}</option>\n        </ListInput>\n\n\n        <li>\n          <div class=\"item-content item-input\">\n            <div class=\"item-inner\">\n              <div class=\"item-title item-label\">{dict.start_date}</div>\n              <div class=\"item-input-wrap\">\n                <input type=\"text\" placeholder={dict.select_a_date} readonly=\"readonly\" id=\"start-calendar\" />\n              </div>\n            </div>\n          </div>\n        </li>\n\n        <li>\n          <div class=\"item-content item-input\">\n            <div class=\"item-inner\">\n              <div class=\"item-title item-label\">{dict.start_time}</div>\n              <div class=\"item-input-wrap\">\n                <input type=\"text\" placeholder={dict.select_a_time} value={props.startTime} readonly=\"readonly\" id=\"start-time-picker\" />\n              </div>\n            </div>\n          </div>\n        </li>\n        <li>\n          <div class=\"item-content item-input\">\n\n          </div>\n        </li>\n        <li>\n          <div class=\"item-content item-input\">\n            <div class=\"item-inner\">\n              <div class=\"item-title item-label\">{dict.deadline}</div>\n              <div class=\"item-input-wrap\">\n                <input type=\"text\" placeholder={dict.select_a_date} readonly=\"readonly\" id=\"deadline-calendar\" />\n              </div>\n            </div>\n          </div>\n        </li>\n\n        <li>\n          <div class=\"item-content item-input\">\n            <div class=\"item-inner\">\n              <div class=\"item-title item-label\">{dict.deadline_time}</div>\n              <div class=\"item-input-wrap\">\n                <input type=\"text\" placeholder={dict.select_a_time} value={props.deadlineTime} readonly=\"readonly\" id=\"deadline-time-picker\" />\n              </div>\n            </div>\n          </div>\n        </li>\n      </List>\n\n      <Block strong>\n        <Row tag=\"p\">\n          {deleteButton()}\n          <Link className=\"btn-notice\"></Link>\n          <Button className=\"col btn\" fill onClick={props.submit}>{dict.submit}</Button>\n        </Row>\n      </Block>\n    </Card >\n\n  )\n}\nexport default WorkForm;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  BlockTitle,\n} from 'framework7-react';\nimport { dict } from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport WorkForm from \"../../containers/works/form\"\n\nexport default class WorkCreate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.loadCalender = this.loadCalender.bind(this);\n    this.pageAfterIn = this.pageAfterIn.bind(this);\n    \n    this.state = {\n      token: window.localStorage.getItem('token'),\n      work: {},\n      title: null,\n      details: null,\n      deadline: new Date(),\n      start: new Date(),\n      startTime:  '0:00',\n      deadlineTime: '0:00',\n      privateWork: true,\n      priority: 'normal',\n    }\n  }\n\n\n  componentWillMount() {\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n  }\n\n  componentDidMount() {\n\n  }\n\n  pageAfterIn() {\n    this.loadCalender();\n    this.loadTime();\n  }\n\n  loadTime(){\n    var today = new Date();\n    const self = this;\n    const app = self.$f7;\n    \n    app.picker.create({\n      inputEl: '#start-time-picker',\n        rotateEffect: true,\n        on: {\n          closed: function (picker) {\n            self.setState({ startTime: picker.value[1]+':'+picker.value[0]});\n          }\n        },\n        cols: [\n          {\n            values: ('00 15 30 45').split(' ')\n          },\n          {\n            textAlign: 'left',\n            values: ('0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23').split(' ')\n          },\n\n        ]\n    });\n    app.picker.create({\n      inputEl: '#deadline-time-picker',\n        rotateEffect: true,        on: {\n          closed: function (picker) {\n            self.setState({ deadlineTime: picker.value[1]+':'+picker.value[0]});\n          }\n        },\n        cols: [\n          {\n            values: ('00 15 30 45').split(' ')\n          },\n          {\n            textAlign: 'left',\n            values: ('0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23').split(' ')\n          },\n\n        ]\n    });\n  }\n\n  loadCalender(){\n    const self = this;\n    const app = self.$f7;\n\n    app.calendar.create({\n      inputEl: '#start-calendar',\n      value: [new Date()],\n      closeOnSelect: true,\n      firstDay: 6,\n      weekendDays: [4, 5],\n      monthNames: ['فروردين', 'ارديبهشت', 'خرداد', 'تیر', 'مرداد', 'شهریور', 'مهر', 'آبان', 'آذر', 'دی', 'بهمن', 'اسفند'],\n      dayNames: ['یکشنبه', 'دوشنبه', 'سه شنبه', 'چهارشنبه', 'پنج‌شنبه', 'جمعه', 'شنبه'],\n      dayNamesShort: ['یک', 'دو', 'سه ', 'چهار', 'پنج‌', 'جمعه', 'شنبه'],\n      on: {\n        closed: function (c) {\n          console.log(c.value[0].a)\n          self.setState({ start: c.value[0].a });\n        }\n      }\n    });\n\n    app.calendar.create({\n      inputEl: '#deadline-calendar',\n      closeOnSelect: true,\n      value: [new Date()],\n      firstDay: 6,\n      weekendDays: [4, 5],\n      monthNames: ['فروردين', 'ارديبهشت', 'خرداد', 'تیر', 'مرداد', 'شهریور', 'مهر', 'آبان', 'آذر', 'دی', 'بهمن', 'اسفند'],\n      dayNames: ['یکشنبه', 'دوشنبه', 'سه شنبه', 'چهارشنبه', 'پنج‌شنبه', 'جمعه', 'شنبه'],\n      dayNamesShort: ['یک', 'دو', 'سه ', 'چهار', 'پنج‌', 'جمعه', 'شنبه'],\n      on: {\n        closed: function (c) {\n          self.setState({ deadline: c.value[0].a });\n        }\n      }\n\n    });\n  }\n\n  submit() {\n    this.$$('.btn').hide();\n    this.$$('.btn-notice').text(dict.submitting);\n    var data = { \n      title: this.state.title, details: this.state.details, \n      start: this.state.start, start_time: this.state.startTime, \n      deadline: this.state.deadline, deadline_time: this.state.deadlineTime,\n      task_id: this.$f7route.params['taskId'], priority: this.state.priority\n    }\n    if (this.state.title && this.state.title.length > 0) {\n      MyActions.setInstance('works', data, this.state.token);\n    } else {\n      const self = this;\n      self.$f7.dialog.alert(dict.incomplete_data, dict.alert);\n    }\n\n  }\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  setInstance() {\n    var work = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (work && klass === 'Work') {\n      this.$$('.btn').show();\n      this.$f7router.navigate('/works/'+work.id);\n    } else {\n      this.$$('.btn').show();\n      this.$f7router.navigate('/tasks/');\n    }\n    \n  }\n\n\n\n  render() {\n    const { work } = this.state;\n    return (\n      <Page onPageAfterIn={this.pageAfterIn.bind(this)}>\n        <Navbar title={dict.work_form} backLink={dict.back} />\n        <BlockTitle>{dict.work_form}</BlockTitle>\n        <WorkForm work={work} submit={this.submit} editing={false} handleChange={this.handleChangeValue} />\n      </Page>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon\n} from 'framework7-react';\nimport { dict } from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport WorkForm from \"../../containers/works/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\nexport default class DocumentUpdate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.getInstance = this.getInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.loadTime = this.loadTime.bind(this);\n    this.loadCalender = this.loadCalender.bind(this);\n    this.pageAfterIn = this.pageAfterIn.bind(this);\n    this.deleteWorkConfirm = this.deleteWorkConfirm.bind(this);\n    this.deleteWork = this.deleteWork.bind(this);\n    this.deleteInstance = this.deleteInstance.bind(this);\n\n    \n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      work: {},\n      id: null,\n      title: null,\n      details: null,\n      deadline: new Date(),\n      start: new Date(),\n      startTime: '0 00',\n      deadlineTime: '0 00',\n      privateWork: true,\n      priority: 'normal',\n    }\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.setInstance);\n    ModelStore.on(\"deleted_instance\", this.deleteInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n    ModelStore.removeListener(\"deleted_instance\", this.deleteInstance);\n\n  }\n\n  pageAfterIn() {\n    this.loadTime();\n  }\n\n  loadTime() {\n    var today = new Date();\n    const self = this;\n    const app = self.$f7;\n\n    app.picker.create({\n      inputEl: '#start-time-picker',\n      rotateEffect: true,\n      on: {\n        closed: function (picker) {\n          self.setState({ startTime: picker.value[1] + ':' + picker.value[0] });\n        }\n      },\n      cols: [\n        {\n          values: ('00 15 30 45').split(' ')\n        },\n        {\n          textAlign: 'left',\n          values: ('0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23').split(' ')\n        },\n\n      ]\n    });\n    app.picker.create({\n      inputEl: '#deadline-time-picker',\n      rotateEffect: true, on: {\n        closed: function (picker) {\n          self.setState({ deadlineTime: picker.value[1] + ':' + picker.value[0] });\n        }\n      },\n      cols: [\n        {\n          values: ('00 15 30 45').split(' ')\n        },\n        {\n          textAlign: 'left',\n          values: ('0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23').split(' ')\n        },\n\n      ]\n    });\n  }\n\n  loadCalender() {\n    const self = this;\n    const app = self.$f7;\n\n    app.calendar.create({\n      inputEl: '#start-calendar',\n      value: [this.state.start],\n      closeOnSelect: true,\n      firstDay: 6,\n      weekendDays: [4, 5],\n      monthNames: ['فروردين', 'ارديبهشت', 'خرداد', 'تیر', 'مرداد', 'شهریور', 'مهر', 'آبان', 'آذر', 'دی', 'بهمن', 'اسفند'],\n      dayNames: ['یکشنبه', 'دوشنبه', 'سه شنبه', 'چهارشنبه', 'پنج‌شنبه', 'جمعه', 'شنبه'],\n      dayNamesShort: ['یک', 'دو', 'سه ', 'چهار', 'پنج‌', 'جمعه', 'شنبه'],\n      on: {\n        closed: function (c) {\n          self.setState({ start: c.value[0].a });\n        }\n      }\n    });\n\n    app.calendar.create({\n      inputEl: '#deadline-calendar',\n      closeOnSelect: true,\n      value: [this.state.deadline],\n      firstDay: 6,\n      weekendDays: [4, 5],\n      monthNames: ['فروردين', 'ارديبهشت', 'خرداد', 'تیر', 'مرداد', 'شهریور', 'مهر', 'آبان', 'آذر', 'دی', 'بهمن', 'اسفند'],\n      dayNames: ['یکشنبه', 'دوشنبه', 'سه شنبه', 'چهارشنبه', 'پنج‌شنبه', 'جمعه', 'شنبه'],\n      dayNamesShort: ['یک', 'دو', 'سه ', 'چهار', 'پنج‌', 'جمعه', 'شنبه'],\n      on: {\n        closed: function (c) {\n          //console.log(c.value[0].a)\n          self.setState({ deadline: c.value[0].a });\n        }\n      }\n\n    });\n  }\n\n\n\n  submit() {\n    this.$$('.btn').hide();\n    this.$$('.btn-notice').text(dict.submitting);\n    var data = { \n      id: this.state.id, title: this.state.title, details: this.state.details,\n      start: this.state.start, start_time: this.state.startTime, \n      deadline: this.state.deadline, deadline_time: this.state.deadlineTime,\n      priority: this.state.priority\n    }// start: new Date(this.state.start.setHours(startTime[0], startTime[1], 0, 0)).toISOString(), deadline:  new Date(this.state.deadline.setHours(deadlineTime[0], deadlineTime[1], 0, 0)).toISOString() }\n    if (this.state.title && this.state.title.length > 0) {\n      MyActions.updateInstance('works', data, this.state.token);\n    } else {\n      const self = this;\n      self.$f7.dialog.alert(dict.incomplete_data, dict.alert);\n    }\n\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  loadData() {\n    const f7: Framework7 = Framework7.instance;\n    f7.toast.show({ text: dict.receiving, closeTimeout: 2000, position: 'top' });\n    if (this.$f7route.params['workId']) {\n      MyActions.getInstance('works', this.$f7route.params['workId'], this.state.token);\n    }\n  }\n\n\n  getInstance() {\n    var work = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (work && klass === 'Work') {\n      this.setState({\n        title: work.title,\n        content: work.details,\n        id: work.id,\n        work: work,\n        start: new window.ODate(work.start_date),\n        deadline: new window.ODate(work.deadline_date),\n        startTime: work.start_time,\n        deadlineTime: work.deadline_time,\n        defaultWork: work.default_work,\n        priority: work.priority\n      }, () => this.loadCalender());\n    }\n  }\n\n  deleteWorkConfirm(){\n    const self = this;\n    const app = self.$f7;\n    app.dialog.confirm(dict.are_you_sure, dict.alert, self.deleteWork)\n  }\n\n  deleteWork(){\n    var data = { id: this.state.id}\n    MyActions.removeInstance('works', data, this.state.token);\n  }\n\n  deleteInstance() {\n    this.$f7router.navigate('/tasks/');\n  }\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n\n  setInstance() {\n    this.$$('.btn').show();\n    this.$f7router.navigate('/works/'+this.state.id);\n  }\n\n\n  render() {\n    const { work, defaultWork, title, content, startTime, deadlineTime, priority } = this.state;\n    return (\n      <Page onPageAfterIn={this.pageAfterIn.bind(this)}>\n        <Navbar title={dict.work_form} backLink={dict.back} />\n        <BlockTitle>{dict.work_form}</BlockTitle>\n        <WorkForm \n        work={work} title={title} startTime={startTime} \n        deadlineTime={deadlineTime} content={content} \n        defaultWork={defaultWork} submit={this.submit} \n        editing={true} handleChange={this.handleChangeValue} \n        deleteWorkConfirm={this.deleteWorkConfirm}\n        priority={priority}\n        />\n      </Page>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  BlockTitle,\n} from 'framework7-react';\nimport { dict } from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport TodoForm from \"../../containers/todos/form\"\n\nexport default class TodoCreate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.getInstance = this.getInstance.bind(this);\n    this.involvementCheck = this.involvementCheck.bind(this);\n    \n    \n    this.state = {\n      token: window.localStorage.getItem('token'),\n      todo: {},\n      title: null,\n      involvements: [],\n      workInvolvements: [],\n    }\n  }\n\n\n  componentWillMount() {\n    ModelStore.on(\"set_instance\", this.setInstance);\n    ModelStore.on(\"got_instance\", this.getInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n  }\n\n  componentDidMount() {\n    MyActions.getInstance('works', this.$f7route.params['workId'], this.state.token);\n  }\n\n\n  submit() {\n    this.$$('.btn').hide();\n    this.$$('.btn-notice').text(dict.submitting);\n    var data = { \n        title: this.state.title, work_id: this.$f7route.params['workId'],\n        involvements: this.state.involvements\n    }\n    if (this.state.title && this.state.title.length > 0) {\n      MyActions.setInstance('todos', data, this.state.token);\n    } else {\n      const self = this;\n      self.$f7.dialog.alert(dict.incomplete_data, dict.alert);\n    }\n\n  }\n\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  setInstance() {\n    var todo = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (todo && klass === 'Todo') {\n      this.$$('.btn').show();\n      this.$f7router.navigate('/works/'+todo.work_id);\n    } \n  }\n\n  getInstance() {\n    var work = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (work && klass === 'Work') {\n      this.setState({\n        workInvolvements: work.the_involvements\n      });\n    }\n  }\n\n  involvementCheck(id, e){\n    if (e.target.checked) {\n      this.setState({ involvements: this.state.involvements.concat({ id: id })})\n    } else {\n      this.setState({\n        involvements: this.state.involvements.filter(function (involvement) {\n          return involvement.id !== id\n        })\n      });\n    }\n  }\n\n\n\n  render() {\n    const { todo, involvements, workInvolvements } = this.state;\n    return (\n      <Page  backLink={dict.back} backLinkForce={true}>\n        <Navbar title={dict.work_form} backLink={dict.back} />\n        <BlockTitle>{dict.work_form}</BlockTitle>\n        <TodoForm \n        todo={todo} workInvolvements={workInvolvements}\n         involvements={involvements} removeInvolvement={this.removeInvolvement}\n        submit={this.submit} editing={true} involvementCheck={this.involvementCheck}\n        handleChange={this.handleChangeValue} />\n      </Page>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  BlockTitle,\n} from 'framework7-react';\nimport { dict } from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport TodoForm from \"../../containers/todos/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\nexport default class TodoCreate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.removeInvolvement = this.removeInvolvement.bind(this);\n    this.getInstance = this.getInstance.bind(this);\n    this.involvementCheck = this.involvementCheck.bind(this);\n    this.setInvolvements = this.setInvolvements.bind(this);\n    \n    \n    this.state = {\n      token: window.localStorage.getItem('token'),\n      todo: {},\n      title: null,\n      id: null, \n      involvements: [],\n      workInvolvements: [],\n    }\n  }\n\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  loadData() {\n    const f7: Framework7 = Framework7.instance;\n    f7.toast.show({ text: dict.receiving, closeTimeout: 2000, position: 'top' });\n    if (this.$f7route.params['todoId']) {\n      MyActions.getInstance('todos', this.$f7route.params['todoId'], this.state.token);\n    }\n  }\n\n\n  submit() {\n    this.$$('.btn').hide();\n    this.$$('.btn-notice').text(dict.submitting);\n    var data = { \n        id: this.state.id,\n        title: this.state.title,\n        involvements: this.state.involvements\n    }\n    if (this.state.title && this.state.title.length > 0) {\n      MyActions.updateInstance('todos', data, this.state.token);\n    } else {\n      const self = this;\n      self.$f7.dialog.alert(dict.incomplete_data, dict.alert);\n    }\n\n  }\n\n  removeInvolvement(id) {\n    this.setState({\n      involvements: this.state.involvements.filter(function (involvement) {\n        return involvement.id !== id\n      })\n    });\n  }\n\n  getInstance() {\n    var todo = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (todo && klass === 'Todo') {\n      this.setState({\n        title: todo.title,\n        id: todo.id,\n        //involvements: todo.involvement_tags,\n        workInvolvements: todo.work_involvements\n      }, () =>  this.setInvolvements());\n    }\n  }\n\n  setInvolvements(){\n    this.setState({ involvements: [] });\n    var arr = []\n    this.state.workInvolvements.map((workInvolvement) => {\n      if(workInvolvement.check){\n        arr.push({ id: workInvolvement.profile.id })\n      }\n    })\n    this.setState({ involvements: arr})\n  }\n\n\n  involvementCheck(id, e){\n    if (e.target.checked) {\n      this.setState({ involvements: this.state.involvements.concat({ id: id })})\n    } else {\n      this.setState({\n        involvements: this.state.involvements.filter(function (involvement) {\n          return involvement.id !== id\n        })\n      });\n    }\n  }\n\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  setInstance() {\n    var todo = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (todo && klass === 'Todo') {\n      this.$$('.btn').show();\n      this.$f7router.navigate('/works/'+todo.work_id);\n    } \n  }\n\n\n\n  render() {\n    const { todo, involvements, title , workInvolvements} = this.state;\n    return (\n      <Page  backLink={dict.back} backLinkForce={true}>\n        <Navbar title={dict.work_form} backLink={dict.back} />\n        <BlockTitle>{dict.work_form}</BlockTitle>\n        <TodoForm \n        todo={todo} workInvolvements={workInvolvements}\n         title={title} involvements={involvements} involvementCheck={this.involvementCheck}\n        removeInvolvement={this.removeInvolvement} submit={this.submit} editing={true} handleChange={this.handleChangeValue} />\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { Page, Navbar, List, BlockTitle, ListItem, Chip, Icon, Preloader, Block } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport CommentForm from \"../comments/form\"\nimport CommentList from \"../comments/list\"\n\n\nconst TimeSheetShow = (props) => {\n  function association(kind) {\n    var chips = [\n      <div>\n        <div className=\"item-title fs-11\">\n          {dict.associations}:\n        </div>\n      </div>\n    ]\n    if (props.time_sheet.the_associations) {\n      props.time_sheet.the_associations.map((association) => {\n        if (association.kind == kind) {\n          chips.push(<a href={'/' + association.a_type + '/' + association.id + '/'}><Chip text={association.title} /></a>)\n        }\n      }\n      )\n    }\n    return chips\n  }\n\n  if (props.time_sheet) {\n    return (\n      <React.Fragment>\n        <BlockTitle>{dict.sheet_date}</BlockTitle>\n        <List simple-list>\n          <ListItem>{props.time_sheet.jdate}</ListItem>\n        </List>\n\n        <List className='fs-11'>\n        {props.time_sheet.the_involvements.map((involvement) =>\n          <ListItem\n            key={'involvement' + involvement.profile.id}\n            title={involvement.profile.fullname}\n            after=''>\n            <img slot=\"media\" src={involvement.profile.avatar} width=\"27\" height=\"27\" />\n          </ListItem>\n        )}\n      </List>\n\n        <BlockTitle>{dict.morning_report}</BlockTitle>\n        <List simple-list>\n          <ListItem>{props.time_sheet.morning_report}</ListItem>\n          <ListItem>{association('Morning')}</ListItem>\n        </List>\n\n        <BlockTitle>{dict.afternoon_report}</BlockTitle>\n        <List simple-list>\n          <ListItem>{props.time_sheet.afternoon_report}</ListItem>\n          <ListItem>{association('Afternoon')}</ListItem>\n        </List>\n\n        <BlockTitle>{dict.extra_report}</BlockTitle>\n        <List simple-list>\n          <ListItem>{props.time_sheet.extra_report}</ListItem>\n          <ListItem>{association('Extra')}</ListItem>\n        </List>\n\n        <CommentForm model={props.time_sheet} submit={props.submitComment} handleChange={props.handleChange}/>\n\n        <CommentList\n                comments={props.comments} deleteCommentConfirm={props.deleteCommentConfirm}\n                loadMore={props.loadMore} />\n      </React.Fragment>\n    )\n  } else {\n    return (null)\n  }\n}\nexport default TimeSheetShow;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon, Fab\n} from 'framework7-react';\nimport { dict } from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport TimeSheetShow from \"../../containers/time_sheets/show\"\n\nexport default class Layout extends Component {\n  constructor() {\n    super();\n    this.getInstance = this.getInstance.bind(this);\n    this.getList = this.getList.bind(this);\n    this.submit = this.submit.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.deleteComment = this.deleteComment.bind(this);\n    this.submitComment = this.submitComment.bind(this);\n    this.deleteCommentConfirm = this.deleteCommentConfirm.bind(this);\n    \n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      time_sheet: null,\n      id: null,\n      user_id: null,\n      comments: null,\n    }\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.getInstance);\n    ModelStore.on(\"got_list\", this.getList);\n    ModelStore.on(\"deleted_instance\", this.getInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.getInstance);\n    ModelStore.removeListener(\"got_list\", this.getList);\n    ModelStore.removeListener(\"deleted_instance\", this.getInstance);\n  }\n\n  componentDidMount() {\n    MyActions.getInstance('time_sheets', this.$f7route.params['timeSheetId'], this.state.token);\n  }\n\n  getInstance() {\n    var time_sheet = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (time_sheet && klass === 'TimeSheet') {\n      this.setState({\n        time_sheet: time_sheet,\n        id: time_sheet.id,\n        comments: time_sheet.the_comments,\n      });\n    }\n    this.$$('.btn').show();\n  }\n\n  getList() {\n    var users = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    if (users && klass === 'User') {\n      this.setState({\n        users: users,\n      });\n    }\n  }\n\n  submit() {\n    this.$$('.btn').hide();\n    this.$$('.btn-notice').text(dict.submitting);\n    var data = { time_sheet_id: this.state.id, user_id: this.state.user_id }\n    MyActions.setInstance('users/assignments', data, this.state.token);\n  }\n\n  submitComment() {\n    var data = { commentable_type: 'TimeSheet' ,commentable_id: this.state.id, content: this.state.commentContent }\n    MyActions.setInstance('comments', data, this.state.token);\n  }\n\n\n  deleteCommentConfirm(id){\n    const self = this;\n    const app = self.$f7;\n    app.dialog.confirm(dict.are_you_sure, dict.alert, () => self.deleteComment(id))\n  }\n\n  deleteComment(id) {\n    var data = { id: id }\n    MyActions.removeInstance('comments', data, this.state.token, this.state.page);\n  }\n\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  fab() {\n    if (this.state.time_sheet) {\n      return (\n        <Fab href={\"/time_sheets/\" + this.state.time_sheet.id + \"/edit\"} target=\"#main-view\" position=\"left-bottom\" slot=\"fixed\" color=\"lime\">\n          <Icon ios=\"f7:edit\" aurora=\"f7:edit\" md=\"material:edit\"></Icon>\n          <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n        </Fab>\n      )\n    }\n  }\n\n  render() {\n    const { time_sheet, comments } = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.time_sheets} backLink={dict.back} />\n        <BlockTitle></BlockTitle>\n        {this.fab()}\n        <TimeSheetShow \n          time_sheet={time_sheet} \n          submit={this.submit} handleChange={this.handleChangeValue} \n          comments={comments}\n          submitComment={this.submitComment} deleteCommentConfirm={this.deleteCommentConfirm}\n          />\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { List, ListItem, CardHeader, CardContent, CardFooter, Card, Button, Link } from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\n\nconst TimeSheetList = (props) => {\n\n  if (props.time_sheets) {\n    return (\n      <Card>\n        <CardHeader>\n          {props.header}\n        </CardHeader>\n        <CardContent>\n          <List mediaList className='fs-11'>\n            {props.time_sheets.map((time_sheet) =>\n              <ListItem\n              className='fs-11'\n                key={crypto.lib.WordArray.random(32)}\n                link={\"/time_sheets/\" + time_sheet.id}\n                ignoreCache={true}\n                title={time_sheet.jdate}\n                after=\"\"\n                subtitle={time_sheet.profile.fullname}\n                text=\"\"\n              >\n                 <img slot=\"media\" src={time_sheet.profile.avatar} width=\"28\" height=\"28\"/>\n              </ListItem>\n            )}\n          </List>\n        </CardContent>\n        <CardFooter>\n          <Link></Link>\n            <Button  onClick={() => props.loadMore(props.page)}>{dict.more}</Button>\n        </CardFooter>\n      </Card>\n    )\n  } else {\n    return (<ul></ul>)\n  }\n}\nexport default TimeSheetList;\n","import React from \"react\";\nimport { Page, Navbar, Row, BlockTitle, Col, Fab, Icon, Preloader, Block, Card, CardFooter, CardContent, CardHeader } from 'framework7-react';\nimport TimeSheetList from \"./list\"\nimport { dict } from '../../Dict';\n\nconst TimeSheetIndex = (props) => {\n  return (\n    <Page>\n      <Navbar title={dict.time_sheets} backLink={dict.back} >\n      </Navbar>\n      <BlockTitle>{dict.list}</BlockTitle>\n      <Fab href=\"/time_sheets/new\" target=\"#main-view\" position=\"left-bottom\" slot=\"fixed\" color=\"deeporange\">\n        <Icon ios=\"f7:add\" aurora=\"f7:add\" md=\"material:add\"></Icon>\n        <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n      </Fab>\n      <Row>\n        <Col width='100' tabletWidth='50'>\n          <TimeSheetList\n            time_sheets={props.related_time_sheets} header={dict.sent_to_me}\n            page='page_related' loadMore={props.loadMore}\n          />\n        </Col>\n        <Col width='100' tabletWidth='50'>\n          <TimeSheetList\n            time_sheets={props.mine_time_sheets} header={dict.sent_by_me}\n            page='page_mine' loadMore={props.loadMore}\n          />\n        </Col>\n      </Row>\n\n    </Page>\n  )\n}\nexport default TimeSheetIndex;\n","import React from \"react\"\nimport { Page,Fab, Icon } from 'framework7-react';\nimport ModelStore from \"../../stores/ModelStore\";\nimport TimeSheetIndex from \"../../containers/time_sheets/index\"\nimport * as MyActions from \"../../actions/MyActions\";\nimport { dict} from '../../Dict';\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\n\nexport default class Layout extends React.Component {\n  constructor() {\n    super();\n    this.getMutipleList = this.getMutipleList.bind(this);\n    this.loadMore = this.loadMore.bind(this);\n    this.getList = this.getList.bind(this);\n    \n    this.state = {\n      token: window.localStorage.getItem('token'),\n      mine_time_sheets: [],\n      related_time_sheets: [],\n      page_mine: 1,\n      page_related: 1,\n    }\n  }\n  componentWillMount() {\n    ModelStore.on(\"got_multiple_list\", this.getMutipleList);\n    ModelStore.on(\"got_list\", this.getList);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_multiple_list\", this.getMutipleList);\n    ModelStore.removeListener(\"got_list\", this.getList);\n  }\n  \n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  loadData(){\n    const f7: Framework7 = Framework7.instance;\n    f7.toast.show({ text: dict.receiving, closeTimeout: 2000, position: 'top'});\n    MyActions.getMultipleList('time_sheets', this.state.page, {}, this.state.token);\n  }\n\n\n  loadMore(p) {\n\n    if( p === 'page_mine') {\n      this.setState({ page_mine: this.state.page_mine + 1 }, () => {\n        MyActions.getList('time_sheets/mine', this.state.page_mine, {}, this.state.token);\n      });\n    }\n    if( p === 'page_related') {\n      this.setState({ page_related: this.state.page_related + 1 }, () => {\n        MyActions.getList('time_sheets/related', this.state.page_related, {}, this.state.token);\n      });\n    }\n  }\n\n  getList(){\n    var list = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    console.log(list)\n    if (list && klass === 'TimeSheetMine'){\n      this.setState({\n        mine_time_sheets: this.state.mine_time_sheets.concat(list),\n      });\n    }\n    if (list && klass === 'TimeSheetRelated'){\n      this.setState({\n        related_time_sheets: this.state.related_time_sheets.concat(list),\n      });\n  }\n}\n\n  getMutipleList() {\n    var multiple = ModelStore.getMutipleList()\n    var klass = ModelStore.getKlass()\n    console.log(multiple)\n    if (multiple && klass === 'TimeSheet'){\n      this.setState({\n        mine_time_sheets: multiple.mine,\n        related_time_sheets: multiple.related,\n      });\n    }\n  }\n\n  render() {\n    const {mine_time_sheets, related_time_sheets} = this.state;\n    return(<TimeSheetIndex \n      mine_time_sheets={mine_time_sheets} related_time_sheets={related_time_sheets}\n      loadMore={this.loadMore}\n      />)\n  }\n}\n","import React from \"react\";\nimport { List, ListItem, ListInput, Col, Row, Button, Link, Chip, Card, CardHeader, CardContent, CardFooter } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport crypto from 'crypto-js';\n\n\nconst TimeSheetForm = (props) => {\n\n\n  function association(type) {\n    var chips = [\n      <div>\n        <a className='fs-11 ' href=\"#\" id={type + '-association'}>\n          <div className=\"item-title fs-11\">\n            <i className=\"va-minus-2 ml-5 fa fa-plus\"></i>\n            {dict.associations}:\n        </div>\n        </a>\n      </div>\n    ]\n    if (props.associations) {\n      props.associations.map((association) => {\n        if (association.kind == type) {\n          chips.push(<Chip text={association.title} deleteable onClick={() => props.removeAssociation(association.id, type)} />)\n        }\n      }\n      )\n    }\n    return chips\n  }\n\n  function involvements() {\n    var chips = [\n      <div>\n        <a className='fs-11 ' href=\"#\" id='time-sheet-involvements'>\n          <div className=\"item-title fs-11\">\n            <i className=\"va-minus-2 ml-5 fa fa-user-plus\"></i>\n            {dict.recipients}:\n        </div>\n        </a>\n      </div>\n    ]\n    if (props.involvements) {\n      props.involvements.map((involvement) => {\n        chips.push(<Chip text={involvement.fullname} deleteable onClick={() => props.removeInvolvement(involvement.id)} />)\n      }\n      )\n    }\n    return chips\n  }\n\n  if (props.time_sheet) {\n    return (\n      <Card>\n        <CardHeader>{dict.time_sheet}</CardHeader>\n        <CardContent>\n          <List >\n            <ListInput\n              label={dict.morning_report}\n              type=\"textarea\"\n              placeholder={dict.write_appropriate_details}\n              value={props.time_sheet.morning_report}\n              onInput={(e) => {\n                props.handleChange({ morningReport: e.target.value })\n              }}\n            />\n\n\n            <ListItem title={association('Morning')}></ListItem>\n\n            <ListInput\n              label={dict.afternoon_report}\n              type=\"textarea\"\n              placeholder={dict.write_appropriate_details}\n              value={props.time_sheet.afternoon_report}\n              onInput={(e) => {\n                props.handleChange({ afternoonReport: e.target.value })\n              }}\n            />\n\n            <ListItem title={association('Afternoon')}></ListItem>\n\n            <ListInput\n              label={dict.extra_report}\n              type=\"textarea\"\n              placeholder={dict.write_appropriate_details}\n              value={props.extra_report}\n              onInput={(e) => {\n                props.handleChange({ extraReport: e.target.value })\n              }}\n            />\n\n            <ListItem title={association('Extra')}></ListItem>\n\n            <li>\n              <div className=\"item-content item-input\">\n                <div className=\"item-inner\">\n                  <div className=\"item-title item-label\">{dict.sheet_date}</div>\n                  <div className=\"item-input-wrap\">\n                    <input className=\"date-input\" type=\"text\" placeholder={dict.select_a_date} readonly=\"readonly\" id=\"sheet-date-calendar\" />\n                  </div>\n                </div>\n              </div>\n            </li>\n\n            <ListItem title={involvements()}></ListItem>\n          </List>\n        </CardContent>\n        <CardFooter>\n\n          <Link></Link>\n          <Button fill disabled={!props.editing} onClick={props.submit}>{dict.submit}</Button>\n        </CardFooter>\n      </Card>\n    )\n  }\n  else {\n    return (null)\n  }\n}\nexport default TimeSheetForm;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport TimeSheetForm from \"../../containers/time_sheets/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\nimport { conf } from '../../conf';\n\nexport default class TimeSheetCreate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.loadCalender = this.loadCalender.bind(this);\n    this.loadAssociation = this.loadAssociation.bind(this);\n    this.removeAssociation = this.removeAssociation.bind(this);\n    this.removeInvolvement = this.removeInvolvement.bind(this);\n    \n    \n    \n    \n    this.state = {\n      token: window.localStorage.getItem('token'),\n      morningReport: null,\n      afternoonReport: null,\n      extraReport: null,\n      associations: [],\n      involvements: [],\n      time_sheet: {},\n      timeSheetDate:  new Date(),\n      isPublic: false,\n    }\n  }\n\n\n  componentWillMount() {\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n  }\n\n  submit(){\n    var data = {\n      associations: this.state.associations,\n      morning_report: this.state.morningReport, afternoon_report: this.state.afternoonReport,\n      extra_report: this.state.extraReport, sheet_date: this.state.timeSheetDate,\n      involvements: this.state.involvements\n    }\n    MyActions.setInstance('time_sheets', data, this.state.token);\n  }\n\n  loadAssociation() {\n    const self = this;\n    const app = self.$f7;\n\n    app.autocomplete.create({\n      openIn: 'popup', //open in page\n      openerEl: '#Morning-association', //link that opens autocomplete\n      multiple: true, //allow multiple values\n      valueProperty: 'id', //object's \"value\" property name\n      textProperty: 'title', //object's \"text\" property name\n      searchbarDisableText: dict.cancel,\n      popupCloseLinkText: dict.close,\n      notFoundText: dict.not_found,\n      limit: 50,\n      searchbarPlaceholder: dict.search,\n      preloader: true, //enable preloader\n      source: function (query, render) {\n        var autocomplete = this;\n        var results = [];\n        if (query.length === 0) {\n          render(results);\n          return;\n        }\n        // Show Preloader\n        autocomplete.preloaderShow();\n        // Do Ajax request to Autocomplete data\n        app.request({\n          url:  conf.server + '/time_sheets/search_ass',\n          method: 'GET',\n          dataType: 'json',\n          //send \"query\" to server. Useful in case you generate response dynamically\n          data: {\n            q: query\n          },\n          success: function (item) {\n            // Find matched items\n            for (var i = 0; i < item.data.length; i++) {\n              results.push(item.data[i]);\n            }\n            // Hide Preoloader\n            autocomplete.preloaderHide();\n            // Render items by passing array with result items\n            render(results);\n          }\n        });\n      },\n      on: {\n        change: function (value) {\n          if (value && value[value.length - 1]) {\n            console.log(value[value.length - 1])\n            self.setState({ associations: self.state.associations.concat({ title: value[value.length - 1].title, id: value[value.length - 1].id , a_type:  value[value.length - 1].a_type, kind: 'Morning'}) })\n          }\n        },\n      },\n    });\n\n    app.autocomplete.create({\n      openIn: 'popup', //open in page\n      openerEl: '#Afternoon-association', //link that opens autocomplete\n      multiple: true, //allow multiple values\n      valueProperty: 'id', //object's \"value\" property name\n      textProperty: 'title', //object's \"text\" property name\n      searchbarDisableText: dict.cancel,\n      popupCloseLinkText: dict.close,\n      notFoundText: dict.not_found,\n      limit: 50,\n      searchbarPlaceholder: dict.search,\n      //preloader: true, //enable preloader\n      source: function (query, render) {\n        var autocomplete = this;\n        var results = [];\n        if (query.length === 0) {\n          render(results);\n          return;\n        }\n        // Show Preloader\n       // autocomplete.preloaderShow();\n        // Do Ajax request to Autocomplete data\n        app.request({\n          url: conf.server +  '/time_sheets/search_ass',\n          method: 'GET',\n          dataType: 'json',\n          //send \"query\" to server. Useful in case you generate response dynamically\n          data: {\n            q: query\n          },\n          success: function (item) {\n            // Find matched items\n            for (var i = 0; i < item.data.length; i++) {\n              results.push(item.data[i]);\n            }\n            // Hide Preoloader\n            //autocomplete.preloaderHide();\n            // Render items by passing array with result items\n            render(results);\n          }\n        });\n      },\n      on: {\n        change: function (value) {\n          if (value && value[value.length - 1]) {\n            self.setState({ associations: self.state.associations.concat({ title: value[value.length - 1].title, id: value[value.length - 1].id ,  a_type:  value[value.length - 1].a_type, kind: 'Afternoon'}) })\n          }\n        },\n      },\n    });\n\n    app.autocomplete.create({\n      openIn: 'popup', //open in page\n      openerEl: '#Extra-association', //link that opens autocomplete\n      multiple: true, //allow multiple values\n      valueProperty: 'id', //object's \"value\" property name\n      textProperty: 'title', //object's \"text\" property name\n      searchbarDisableText: dict.cancel,\n      popupCloseLinkText: dict.close,\n      notFoundText: dict.not_found,\n      limit: 50,\n      searchbarPlaceholder: dict.search,\n      //preloader: true, //enable preloader\n      source: function (query, render) {\n        var autocomplete = this;\n        var results = [];\n        if (query.length === 0) {\n          render(results);\n          return;\n        }\n        // Show Preloader\n       // autocomplete.preloaderShow();\n        // Do Ajax request to Autocomplete data\n        app.request({\n          url: conf.server + '/time_sheets/search_ass',\n          method: 'GET',\n          dataType: 'json',\n          //send \"query\" to server. Useful in case you generate response dynamically\n          data: {\n            q: query\n          },\n          success: function (item) {\n            // Find matched items\n            for (var i = 0; i < item.data.length; i++) {\n              results.push(item.data[i]);\n            }\n            // Hide Preoloader\n            //autocomplete.preloaderHide();\n            // Render items by passing array with result items\n            render(results);\n          }\n        });\n      },\n      on: {\n        change: function (value) {\n          if (value && value[value.length - 1]) {\n            self.setState({ associations: self.state.associations.concat({ title: value[value.length - 1].title, id: value[value.length - 1].id ,  a_type:  value[value.length - 1].a_type, kind: 'Extra'}) })\n          }\n        },\n      },\n    });\n\n    app.autocomplete.create({\n      openIn: 'popup', //open in page\n      openerEl: '#time-sheet-involvements', //link that opens autocomplete\n      multiple: true, //allow multiple values\n      valueProperty: 'id', //object's \"value\" property name\n      textProperty: 'fullname', //object's \"text\" property name\n      searchbarDisableText: dict.cancel,\n      popupCloseLinkText: dict.close,\n      notFoundText: dict.not_found,\n      limit: 50,\n      searchbarPlaceholder: dict.search,\n      //preloader: true, //enable preloader\n      source: function (query, render) {\n        var autocomplete = this;\n        var results = [];\n        if (query.length === 0) {\n          render(results);\n          return;\n        }\n        // Show Preloader\n       // autocomplete.preloaderShow();\n        // Do Ajax request to Autocomplete data\n        app.request({\n          url: conf.server + '/profiles/search',\n          method: 'GET',\n          dataType: 'json',\n          //send \"query\" to server. Useful in case you generate response dynamically\n          data: {\n            q: query\n          },\n          success: function (item) {\n            // Find matched items\n            for (var i = 0; i < item.data.length; i++) {\n               results.push(item.data[i]);\n            }\n            // Hide Preoloader\n            //autocomplete.preloaderHide();\n            // Render items by passing array with result items\n            render(results);\n          }\n        });\n      },\n      on: {\n        change: function (value) {\n          if (value && value[value.length - 1]) {\n            self.setState({ involvements: self.state.involvements.concat({ fullname: value[value.length - 1].fullname, id: value[value.length - 1].id }) })\n          }\n        },\n      },\n    });\n  }\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  setInstance(){\n    const self = this;\n    this.$f7router.navigate('/time_sheets/');\n  }\n\n  pageAfterIn() {\n    this.loadCalender();\n    this.loadAssociation();\n  }\n\n\n  loadCalender() {\n    const self = this;\n    const app = self.$f7;\n    var today = new window.ODate();\n    var weekAgo = new window.ODate().setDate(today.getDate() - 7);  \n    app.calendar.create({\n      inputEl: '#sheet-date-calendar',\n      value: [new Date()],\n      closeOnSelect: true,\n      firstDay: 6,\n      weekendDays: [4, 5],\n      monthNames: ['فروردين', 'ارديبهشت', 'خرداد', 'تیر', 'مرداد', 'شهریور', 'مهر', 'آبان', 'آذر', 'دی', 'بهمن', 'اسفند'],\n      dayNames: ['یکشنبه', 'دوشنبه', 'سه شنبه', 'چهارشنبه', 'پنج‌شنبه', 'جمعه', 'شنبه'],\n      dayNamesShort: ['یک', 'دو', 'سه ', 'چهار', 'پنج‌', 'جمعه', 'شنبه'],\n      disabled: function (date) {\n        if (date > weekAgo && date < today) {\n            return false;\n        }\n        else {\n            return true;\n        }\n    },\n      on: {\n        closed: function (c) {\n          self.setState({ timeSheetDate: c.value[0].a });\n        }\n      }\n    });\n  }\n\n  removeAssociation(id, kind){\n    this.setState({\n      associations: this.state.associations.filter(function (association) {\n        return (association.id !== id || association.kind !== kind)\n      })\n    });\n  }\n\n  removeInvolvement(id){\n    this.setState({\n      involvements: this.state.involvements.filter(function (involvement) {\n        return involvement.id !== id\n      })\n    });\n  }\n\n\n\n\n  render() {\n    const {time_sheet, associations, involvements} = this.state;\n    return (\n      <Page onPageAfterIn={this.pageAfterIn.bind(this)}>\n        <Navbar title={dict.time_sheet_form} backLink={dict.back} />\n        <BlockTitle>{dict.time_sheet_form}</BlockTitle>\n        <TimeSheetForm \n          time_sheet={time_sheet} submit={this.submit}\n           editing={true} handleChange={this.handleChangeValue}\n           associations={associations} removeAssociation={this.removeAssociation}\n           involvements={involvements} removeInvolvement={this.removeInvolvement}\n           />\n      </Page>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport TimeSheetForm from \"../../containers/time_sheets/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\nimport { conf } from '../../conf';\n\nexport default class TimeSheetCreate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.loadCalender = this.loadCalender.bind(this);\n    this.loadAssociation = this.loadAssociation.bind(this);\n    this.removeAssociation = this.removeAssociation.bind(this);\n    this.removeInvolvement = this.removeInvolvement.bind(this);\n    this.getInstance = this.getInstance.bind(this);\n    \n    \n    \n    \n    \n    this.state = {\n      token: window.localStorage.getItem('token'),\n      morningReport: null,\n      afternoonReport: null,\n      extraReport: null,\n      id: null,\n      associations: [],\n      involvements: [],\n      time_sheet: null,\n      timeSheetDate:  new Date(),\n    }\n  }\n\n\n  componentWillMount() {\n    ModelStore.on(\"set_instance\", this.setInstance);\n    ModelStore.on(\"got_instance\", this.getInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  loadData() {\n    if (this.$f7route.params['timeSheetId']) {\n      MyActions.getInstance('time_sheets', this.$f7route.params['timeSheetId'], this.state.token);\n    }\n  }\n\n  submit(){\n    var data = {\n      id: this.state.id,\n      associations: this.state.associations,\n      morning_report: this.state.morningReport, afternoon_report: this.state.afternoonReport,\n      extra_report: this.state.extraReport, sheet_date: this.state.timeSheetDate,\n      involvements: this.state.involvements\n    }\n    MyActions.updateInstance('time_sheets', data, this.state.token);\n  }\n\n  getInstance(){\n    var time_sheet = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (time_sheet && klass === 'TimeSheet') {\n      this.setState({\n        id: time_sheet.id,\n        time_sheet: time_sheet,\n        timeSheetDate: time_sheet.date,\n        involvements: time_sheet.the_involvements,\n        associations: time_sheet.the_associations\n      }, () => this.loadAssociation());\n\n    }\n    console.log(time_sheet)\n  }\n\n  loadAssociation() {\n    const self = this;\n    const app = self.$f7;\n\n    app.autocomplete.create({\n      openIn: 'popup', //open in page\n      openerEl: '#Morning-association', //link that opens autocomplete\n      multiple: true, //allow multiple values\n      valueProperty: 'id', //object's \"value\" property name\n      textProperty: 'title', //object's \"text\" property name\n      searchbarDisableText: dict.cancel,\n      popupCloseLinkText: dict.close,\n      notFoundText: dict.not_found,\n      limit: 50,\n      searchbarPlaceholder: dict.search,\n      preloader: true, //enable preloader\n      source: function (query, render) {\n        var autocomplete = this;\n        var results = [];\n        if (query.length === 0) {\n          render(results);\n          return;\n        }\n        // Show Preloader\n        autocomplete.preloaderShow();\n        // Do Ajax request to Autocomplete data\n        app.request({\n          url:  conf.server + '/time_sheets/search_ass',\n          method: 'GET',\n          dataType: 'json',\n          //send \"query\" to server. Useful in case you generate response dynamically\n          data: {\n            q: query\n          },\n          success: function (item) {\n            // Find matched items\n            for (var i = 0; i < item.data.length; i++) {\n              results.push(item.data[i]);\n            }\n            // Hide Preoloader\n            autocomplete.preloaderHide();\n            // Render items by passing array with result items\n            render(results);\n          }\n        });\n      },\n      on: {\n        change: function (value) {\n          if (value && value[value.length - 1]) {\n            console.log(self.state.associations)\n            self.setState({ associations: self.state.associations.concat({ title: value[value.length - 1].title, id: value[value.length - 1].id , a_type:  value[value.length - 1].a_type, kind: 'Morning'}) })\n          }\n        },\n      },\n    });\n\n    app.autocomplete.create({\n      openIn: 'popup', //open in page\n      openerEl: '#Afternoon-association', //link that opens autocomplete\n      multiple: true, //allow multiple values\n      valueProperty: 'id', //object's \"value\" property name\n      textProperty: 'title', //object's \"text\" property name\n      searchbarDisableText: dict.cancel,\n      popupCloseLinkText: dict.close,\n      notFoundText: dict.not_found,\n      limit: 50,\n      searchbarPlaceholder: dict.search,\n      //preloader: true, //enable preloader\n      source: function (query, render) {\n        var autocomplete = this;\n        var results = [];\n        if (query.length === 0) {\n          render(results);\n          return;\n        }\n        // Show Preloader\n       // autocomplete.preloaderShow();\n        // Do Ajax request to Autocomplete data\n        app.request({\n          url: conf.server + '/time_sheets/search_ass',\n          method: 'GET',\n          dataType: 'json',\n          //send \"query\" to server. Useful in case you generate response dynamically\n          data: {\n            q: query\n          },\n          success: function (item) {\n            // Find matched items\n            for (var i = 0; i < item.data.length; i++) {\n              results.push(item.data[i]);\n            }\n            // Hide Preoloader\n            //autocomplete.preloaderHide();\n            // Render items by passing array with result items\n            render(results);\n          }\n        });\n      },\n      on: {\n        change: function (value) {\n          if (value && value[value.length - 1]) {\n            self.setState({ associations: self.state.associations.concat({ title: value[value.length - 1].title, id: value[value.length - 1].id ,  a_type:  value[value.length - 1].a_type, kind: 'Afternoon'}) })\n          }\n        },\n      },\n    });\n\n    app.autocomplete.create({\n      openIn: 'popup', //open in page\n      openerEl: '#Extra-association', //link that opens autocomplete\n      multiple: true, //allow multiple values\n      valueProperty: 'id', //object's \"value\" property name\n      textProperty: 'title', //object's \"text\" property name\n      searchbarDisableText: dict.cancel,\n      popupCloseLinkText: dict.close,\n      notFoundText: dict.not_found,\n      limit: 50,\n      searchbarPlaceholder: dict.search,\n      //preloader: true, //enable preloader\n      source: function (query, render) {\n        var autocomplete = this;\n        var results = [];\n        if (query.length === 0) {\n          render(results);\n          return;\n        }\n        // Show Preloader\n       // autocomplete.preloaderShow();\n        // Do Ajax request to Autocomplete data\n        app.request({\n          url: conf.server +'/time_sheets/search_ass',\n          method: 'GET',\n          dataType: 'json',\n          //send \"query\" to server. Useful in case you generate response dynamically\n          data: {\n            q: query\n          },\n          success: function (item) {\n            // Find matched items\n            for (var i = 0; i < item.data.length; i++) {\n              results.push(item.data[i]);\n            }\n            // Hide Preoloader\n            //autocomplete.preloaderHide();\n            // Render items by passing array with result items\n            render(results);\n          }\n        });\n      },\n      on: {\n        change: function (value) {\n          if (value && value[value.length - 1]) {\n            self.setState({ associations: self.state.associations.concat({ title: value[value.length - 1].title, id: value[value.length - 1].id ,  a_type:  value[value.length - 1].a_type, kind: 'Extra'}) })\n          }\n        },\n      },\n    });\n\n    app.autocomplete.create({\n      openIn: 'popup', //open in page\n      openerEl: '#time-sheet-involvements', //link that opens autocomplete\n      multiple: true, //allow multiple values\n      valueProperty: 'id', //object's \"value\" property name\n      textProperty: 'fullname', //object's \"text\" property name\n      searchbarDisableText: dict.cancel,\n      popupCloseLinkText: dict.close,\n      notFoundText: dict.not_found,\n      limit: 50,\n      searchbarPlaceholder: dict.search,\n      //preloader: true, //enable preloader\n      source: function (query, render) {\n        var autocomplete = this;\n        var results = [];\n        if (query.length === 0) {\n          render(results);\n          return;\n        }\n        // Show Preloader\n       // autocomplete.preloaderShow();\n        // Do Ajax request to Autocomplete data\n        app.request({\n          url: conf.server + '/profiles/search',\n          method: 'GET',\n          dataType: 'json',\n          //send \"query\" to server. Useful in case you generate response dynamically\n          data: {\n            q: query\n          },\n          success: function (item) {\n            // Find matched items\n            for (var i = 0; i < item.data.length; i++) {\n               results.push(item.data[i]);\n            }\n            // Hide Preoloader\n            //autocomplete.preloaderHide();\n            // Render items by passing array with result items\n            render(results);\n          }\n        });\n      },\n      on: {\n        change: function (value) {\n          if (value && value[value.length - 1]) {\n            self.setState({ involvements: self.state.involvements.concat({ fullname: value[value.length - 1].fullname, id: value[value.length - 1].id }) })\n          }\n        },\n      },\n    });\n  }\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  setInstance(){\n    const self = this;\n    this.$f7router.navigate('/time_sheets/');\n  }\n\n  pageAfterIn() {\n    this.loadCalender();\n    this.loadAssociation();\n  }\n\n\n  loadCalender() {\n    const self = this;\n    const app = self.$f7;\n\n    app.calendar.create({\n      inputEl: '#sheet-date-calendar',\n      value: [new Date()],\n      closeOnSelect: true,\n      firstDay: 6,\n      weekendDays: [4, 5],\n      monthNames: ['فروردين', 'ارديبهشت', 'خرداد', 'تیر', 'مرداد', 'شهریور', 'مهر', 'آبان', 'آذر', 'دی', 'بهمن', 'اسفند'],\n      dayNames: ['یکشنبه', 'دوشنبه', 'سه شنبه', 'چهارشنبه', 'پنج‌شنبه', 'جمعه', 'شنبه'],\n      dayNamesShort: ['یک', 'دو', 'سه ', 'چهار', 'پنج‌', 'جمعه', 'شنبه'],\n      on: {\n        closed: function (c) {\n          self.setState({ timeSheetDate: c.value[0].a });\n        }\n      }\n    });\n  }\n\n  removeAssociation(id, kind){\n    this.setState({\n      associations: this.state.associations.filter(function (association) {\n        return (association.id !== id || association.kind !== kind)\n      })\n    });\n  }\n\n  removeInvolvement(id){\n    this.setState({\n      involvements: this.state.involvements.filter(function (involvement) {\n        return involvement.id !== id\n      })\n    });\n  }\n\n\n\n\n  render() {\n    const {time_sheet, associations, involvements} = this.state;\n    return (\n      <Page onPageAfterIn={this.pageAfterIn.bind(this)}>\n        <Navbar title={dict.time_sheet_form} backLink={dict.back} />\n        <BlockTitle>{dict.time_sheet_form}</BlockTitle>\n        <TimeSheetForm \n          time_sheet={time_sheet} submit={this.submit}\n           editing={true} handleChange={this.handleChangeValue}\n           associations={associations} removeAssociation={this.removeAssociation}\n           involvements={involvements} removeInvolvement={this.removeInvolvement}\n           />\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { List, ListItem, Card } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport { Chart } from 'react-charts'\nimport { color } from \"d3\";\nimport TaskList from \"../tasks/list\"\nimport WorkList from \"../tasks/workList\"\nconst ProfileShow = (props) => {\n\n  if (props.profile) {\n    console.log(props)\n    return (\n      <React.Fragment>\n        <List className='fs-12'>\n          <ListItem\n            key={'profile-show' + props.profile.id}\n            title={props.profile.fullname}\n            after=''>\n            <img slot=\"media\" src={props.profile.avatar} width=\"27\" height=\"27\" />\n          </ListItem>\n\n        </List>\n        <Card>\n          <TaskList tasks={props.profile.the_tasks} header={dict.tasks} sortChange={props.sortChange} />\n        </Card>\n        <Card>\n          <WorkList works={props.profile.the_works} header={dict.works} sortChange={props.sortChange} />\n        </Card>\n      </React.Fragment>\n    )\n  } else {\n    return (null)\n  }\n}\nexport default ProfileShow;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Link,\n  Tabs,\n  Toolbar,\n  Tab,\n  Range,\n  Block,\n  Icon, Fab\n} from 'framework7-react';\nimport { dict } from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport ProfileShow from \"../../containers/profiles/show\"\n\nexport default class Layout extends Component {\n  constructor() {\n    super();\n    this.getInstance = this.getInstance.bind(this);\n    \n    this.state = {\n      token: window.localStorage.getItem('token'),\n      profile: null,\n      id: null,\n      actuals: null,\n      metas: null,\n      channels: null,\n    }\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n  }\n\n  componentDidMount() {\n    MyActions.getInstance('profiles', this.$f7route.params['profileId'], this.state.token);\n  }\n\n  getInstance() {\n    var profile = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (profile && klass === 'Profile') {\n      this.setState({\n        profile: profile,\n        id: profile.id,\n      });\n    }\n  }\n\n  fab() {\n    if (this.state.profile) {\n      return (\n        <Fab href={\"/profiles/\" + this.state.profile.id + \"/edit\"} target=\"#main-view\" position=\"left-bottom\" slot=\"fixed\" color=\"lime\">\n          <Icon ios=\"f7:edit\" aurora=\"f7:edit\" md=\"material:edit\"></Icon>\n          <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n        </Fab>\n      )\n    }\n  }\n\n\n  render() {\n    const { profile } = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.profiles} backLink={dict.back} />\n        {this.fab()}\n        <ProfileShow profile={profile} />\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { List,ListItem } from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\nimport Moment from 'react-moment';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\nimport ExpertiesList from \"./experties\";\n\nconst ProfileList = (props) => {\n\n  if (props.profiles) {\n    return (\n      <List mediaList>\n        {props.profiles.map((profile) =>\n          <ListItem\n          key={crypto.lib.WordArray.random(32)}\n          link={\"/profiles/\" + profile.id}\n          title={profile.fullname}\n          after=\"\"\n          subtitle=\"\"\n          text=\"\"\n          >\n                <img slot=\"media\" src={profile.avatar} width=\"40\" height=\"40\" />\n          </ListItem>\n        )}\n      </List>\n    )\n  } else {\n    return (<ul></ul>)\n  }\n}\nexport default ProfileList;\n","import React from \"react\";\nimport { Page, Navbar, Searchbar, BlockTitle, Subnavbar, Fab, Icon, Link } from 'framework7-react';\nimport ProfileList from \"./list\"\nimport { dict } from '../../Dict';\n\nconst ProfileIndex = (props) => {\n  return (\n    <Page>\n      <Navbar title={dict.profiles} backLink={dict.back} >\n        <Link panelOpen=\"right\">\n          <Icon f7=\"bars\"></Icon>\n        </Link>\n        <Subnavbar inner={false}>\n          <Searchbar\n            disableButtonText={dict.cancel}\n            placeholder={dict.search}\n            onChange={(e) => {\n              props.search({ query: e.target.value })\n            }}\n          ></Searchbar>\n        </Subnavbar>\n      </Navbar>\n      <BlockTitle></BlockTitle>\n      <Fab href=\"/profiles/new\" target=\"#main-view\" position=\"left-bottom\" slot=\"fixed\" color=\"deeporange\">\n        <Icon ios=\"f7:add\" aurora=\"f7:add\" md=\"material:add\"></Icon>\n        <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n      </Fab>\n      <ProfileList profiles={props.profiles} />\n\n    </Page>\n  )\n}\nexport default ProfileIndex;\n","import React from \"react\"\nimport { Page,Fab, Icon } from 'framework7-react';\nimport ModelStore from \"../../stores/ModelStore\";\nimport ProfileIndex from \"../../containers/profiles/index\"\nimport * as MyActions from \"../../actions/MyActions\";\nimport { dict} from '../../Dict';\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\n\nexport default class Layout extends React.Component {\n  constructor() {\n    super();\n    this.getList = this.getList.bind(this);\n    this.search = this.search.bind(this);\n    \n    this.state = {\n      token: window.localStorage.getItem('token'),\n      profiles: null,\n      query: null,\n    }\n  }\n  componentWillMount() {\n    ModelStore.on(\"got_list\", this.getList);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_list\", this.getList);\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  loadData(){\n    MyActions.getList('profiles', this.state.page, {}, this.state.token);\n  }\n\n  search(obj){\n    this.setState(obj, () => {\n      MyActions.getList('profiles/search', this.state.page, {q: this.state.query}, this.state.token);\n  });    \n  }\n\n  getList() {\n    var profiles = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    if (profiles && klass === 'Profile'){\n      this.setState({\n        profiles: profiles,\n      });\n    }\n  }\n\n  render() {\n    const {profiles} = this.state;\n    return(<ProfileIndex profiles={profiles} search={this.search}/>)\n  }\n}\n","import React from \"react\";\nimport { List, ListInput, CardFooter, Button, Card, Link, CardHeader, CardContent, Row } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport crypto from 'crypto-js';\nimport ExpertiesList from \"./experties\";\nimport ImageUploader from 'react-images-upload';\nconst ProfileForm = (props) => {\n  if (props.profile) {\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>{dict.profile_info}</CardHeader>\n          <CardContent>\n            <List >\n              <ListInput\n                label={dict.firstname}\n                type=\"text\"\n                placeholder='...'\n                defaultValue={props.name}\n                onInput={(e) => {\n                  props.handleChange({ name: e.target.value })\n                }}\n              />\n\n              <ListInput\n                label={dict.surename}\n                type=\"text\"\n                placeholder='...'\n                defaultValue={props.surename}\n                onInput={(e) => {\n                  props.handleChange({ surename: e.target.value })\n                }}\n              />\n            </List>\n          </CardContent>\n          <CardFooter>\n            <Link></Link>\n            <Link className=\"btn-notice\"></Link>\n            <Button className=\"col btn\" fill onClick={props.submit}>{dict.submit}</Button>\n          </CardFooter>\n        </Card>\n\n\n\n        <Card>\n          <CardHeader>\n            <img src={props.avatar} width=\"40\" height=\"40\"></img>\n          </CardHeader>\n          <ImageUploader\n            withIcon={true}\n            buttonText={dict.choose_image}\n            onChange={props.onDrop}\n            buttonClassName='upload-btn'\n            imgExtension={['.jpg', '.jpeg', '.png']}\n            maxFileSize={5242880}\n          />\n        </Card>\n\n\n      </React.Fragment>\n    )\n  } else {\n    return (null)\n  }\n\n}\nexport default ProfileForm;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport ProfileForm from \"../../containers/profiles/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\nexport default class ProfileCreate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.handleChangeValueFields = this.handleChangeValueFields.bind(this);\n    this.removeActual = this.removeActual.bind(this);\n    this.getInstance = this.getInstance.bind(this);\n    this.submitFields = this.submitFields.bind(this);\n    this.onDrop = this.onDrop.bind(this);    \n    this.getList = this.getList.bind(this);\n    \n    \n    this.getList = this.getList.bind(this);\n\n    this.state = {\n      profile: {},\n      metas: null,\n      token: window.localStorage.getItem('token'),\n      fields: [],\n      name: 'dd',\n      surename: '',\n      pictures: [],\n      avatar: null,\n    }\n  }\n\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.getInstance);\n    ModelStore.on(\"deleted_instance\", this.getInstance);\n    ModelStore.on(\"got_list\", this.getList);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.getInstance);\n    ModelStore.removeListener(\"deleted_instance\", this.getInstance);\n    ModelStore.removeListener(\"got_list\", this.getList);\n  }\n\n  componentDidMount(){\n    this.loadData();\n\n  }\n\n  loadData(){\n    MyActions.getList('metas', this.state.page);\n  }\n\n  onDrop(picture) {\n    console.log(picture[0])\n    MyActions.fileUpload('profiles', this.state.id, picture[0], this.state.token);\n  }\n\n\n  submit(){\n    var data = {id: this.state.id, name: this.state.name, surename: this.state.surename}\n    MyActions.updateInstance('profiles', data, this.state.token);\n  }\n\n  submitFields(){\n    var data = {meta_id: this.state.metaId, content: this.state.fields}\n    MyActions.setInstance('actuals', data, this.state.token);\n  }\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  handleChangeValueFields(key, value, metaId) {\n    var fields = this.state.fields\n    if (fields.length > 0) {\n      for (let i = 0; i < fields.length; i++) {\n        if (fields[i].fid && fields[i].fid === key) {\n          let newState = Object.assign({}, this.state);\n          newState.fields[i] = { fid: key, value: value, metaId: metaId }\n          this.setState(newState);\n        } else {\n          this.setState({ fields: this.state.fields.concat({ fid: key, value: value , metaId:metaId}) });\n        }\n      }\n    } else {\n      this.setState({ fields: this.state.fields.concat({ fid: key, value: value, metaId:metaId }) });\n    }\n  }\n\n  setInstance(){\n    const self = this;\n    this.$f7router.navigate('/profiles/');\n  }\n\n  getInstance() {\n    var profile = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (profile && klass === 'Profile') {\n      this.setState({\n        metas: profile.metas,\n        profile: profile\n      });\n    }\n  }\n\n\n  removeActual(uuid){\n    MyActions.removeInstance('actuals', {uuid: uuid});\n  }\n\n  getList() {\n    var metas = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    if (metas && klass === 'Meta'){\n      this.setState({\n        metas: metas,\n      });\n    }\n  }\n\n\n\n  render() {\n    const {profile, metas, name, avatar, surename} = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.profile_form} backLink={dict.back} />\n        <BlockTitle>{dict.profile_form}</BlockTitle>\n        <ProfileForm name={name} avatar={avatar} surename={surename} metas={metas} onDrop={this.onDrop} removeActual={this.removeActual} submitFields={this.submitFields} submit={this.submit} editing={true} handleChangeValueFields={this.handleChangeValueFields} handleChange={this.handleChangeValue}/>\n      </Page>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  BlockTitle,\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport ProfileForm from \"../../containers/profiles/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\nexport default class ProfileCreate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.getInstance = this.getInstance.bind(this);\n    this.onDrop = this.onDrop.bind(this);    \n    \n\n    \n\n    this.state = {\n      name: null,\n      surename: null,\n      token: window.localStorage.getItem('token'),\n      profile: null,\n      id: null, \n      pictures: [],\n      avatar: null,\n    }\n  }\n\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.setInstance);\n    ModelStore.on(\"file_posted\", this.getInstance);    \n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n    ModelStore.removeListener(\"file_posted\", this.getInstance);\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  loadData(){\n    if (this.$f7route.params['profileId']) {\n      MyActions.getInstance('profiles', this.$f7route.params['profileId'], this.state.token);\n    }\n  }\n\n  onDrop(picture) {\n    console.log(picture[0])\n    MyActions.fileUpload('profiles', this.state.id, picture[0], this.state.token);\n  }\n\n\n  submit(){\n    var data = {id: this.state.id, name: this.state.name, surename: this.state.surename}\n    MyActions.updateInstance('profiles', data, this.state.token);\n  }\n\n\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n\n\n  setInstance(){\n    const self = this;\n    this.$f7router.navigate('/profiles/');\n  }\n\n  getInstance() {\n    var profile = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (profile && klass === 'Profile') {\n      this.setState({\n        id: profile.id, \n        profile: profile,\n        name: profile.name,\n        surename : profile.surename,\n        avatar: profile.avatar,\n      });\n    }\n  }\n\n\n\n\n\n\n  render() {\n    const {profile, name, surename, avatar} = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.profile_form} backLink={dict.back} />\n        <BlockTitle>{dict.profile_form}</BlockTitle>\n        <ProfileForm profile={profile}\n          name={name} avatar={avatar} surename={surename} onDrop={this.onDrop}  \n         submit={this.submit} editing={true} \n         handleChange={this.handleChangeValue} \n         />\n      </Page>\n    );\n  }\n}\n\n","import React from \"react\";\nimport { List, BlockTitle, ListItem, Block, Row, Col, Button, Link } from 'framework7-react';\nimport { stateToHTML } from \"draft-js-export-html\";\nimport { EditorState, convertFromRaw } from \"draft-js\";\nimport { Editor } from 'react-draft-wysiwyg';\nimport { dict } from '../../Dict';\nimport Moment from 'react-moment';\nimport CommentForm from \"../comments/form\"\nimport CommentList from \"../comments/list\"\nimport 'moment-timezone';\nimport 'moment/locale/fa';\n\nconst ReportShow = (props) => {\n\n  function commentable(){\n    if (props.access.includes('view_reports')) {\n      return (\n        <CommentForm\n          model={props.task} submit={props.submitComment}\n          handleChange={props.handleChange} \n    \n         \n        />\n      )\n    }\n  }\n\n  function comments(){\n    if (props.comments) {\n     return( <CommentList\n      comments={props.comments} deleteCommentConfirm={props.deleteCommentConfirm}\n      loadMore={props.loadMore} />)\n    }\n  }\n  if (props.report && props.report.draft) {\n    const contentState = convertFromRaw(props.report.draft);\n    const editorState = EditorState.createWithContent(contentState);\n    function parent() {\n      if (props.report.the_work) {\n        return (<ListItem title={props.report.the_work.title} href={'/works/' + props.report.the_work.id}></ListItem>)\n      }\n      if (props.report.the_task) {\n        return (<ListItem title={props.report.the_task.title} href={'/tasks/' + props.report.the_task.id}></ListItem>)\n      }\n    }\n\n    function creation(t) {\n      var date = new Date(new window.ODate(t))\n      return (<Moment date={date} fromNow></Moment>)\n    }\n    return (\n      <React.Fragment>\n        <Block>\n          <Row>\n\n          </Row>\n        </Block>\n        <List simple-list>\n          {parent()}\n        </List>\n\n        <List simple-list>\n          <ListItem\n            key={'profile' + props.report.profile.id}\n            title={props.report.profile.fullname}\n            after=''>\n            <img slot=\"media\" src={props.report.profile.avatar} width=\"27\" height=\"27\" />\n          </ListItem>\n        </List>\n\n\n\n\n        <BlockTitle>{dict.title}</BlockTitle>\n        <List simple-list>\n          <ListItem>{props.report.title}</ListItem>\n        </List>\n\n        <BlockTitle>{dict.content}</BlockTitle>\n        <Editor editorState={editorState}\n          toolbar={{ options: [] }}\n          readOnly={true}\n        />\n        <List simple-list>\n          <ListItem title={creation(props.report.creation_date)}></ListItem>\n        </List>\n\n        <BlockTitle>{dict.attachments}</BlockTitle>\n        <List>\n          {props.report.attachments.map((attachment) =>\n            <li className=\"\">\n              <div className=\"item-content\">\n                <div className=\"item-inner\">\n                  <div className=\"item-title\">\n                    <a className=\"link external\" target=\"_blank\" href={attachment.link}>\n                      <i className=\"fa ml-5 fa-cloud-download\" aria-hidden=\"true\"></i>\n                      {attachment.filename}\n                    </a>\n                  </div>\n                </div>\n              </div>\n            </li>\n          )}\n        </List>\n\n        {commentable()}\n        {comments()}\n\n\n      </React.Fragment>\n    )\n  } else {\n    return (null)\n  }\n}\nexport default ReportShow;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  Link,\n  BlockTitle,\n  Icon, Fab\n} from 'framework7-react';\nimport { dict } from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport ReportShow from \"../../containers/reports/show\";\n\n\nexport default class Layout extends Component {\n  constructor() {\n    super();\n    this.getInstance = this.getInstance.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.getList = this.getList.bind(this);\n    this.submitComment = this.submitComment.bind(this);\n    this.deleteComment = this.deleteComment.bind(this);\n    this.deleteCommentConfirm = this.deleteCommentConfirm.bind(this);\n    \n    this.loadMore = this.loadMore.bind(this);\n\n\n\n\n    this.state = {\n      report: null,\n      id: null,\n      page: 1,\n      selectedChannel: null,\n      sheetOpened: false,\n      commentContent: '',\n      comments: null,\n      access: null,\n      token: window.localStorage.getItem('token'),\n\n    }\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.setInstance);\n    ModelStore.on(\"got_list\", this.getList);\n    ModelStore.on(\"deleted_instance\", this.getInstance);\n\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n    ModelStore.removeListener(\"got_list\", this.getList);\n    ModelStore.removeListener(\"deleted_instance\", this.getInstance);\n  }\n\n  componentDidMount() {\n    MyActions.getInstance('reports', this.$f7route.params['reportId'], this.state.token);\n  }\n\n  getInstance() {\n    var report = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (report && klass === 'Report') {\n      this.setState({\n        report: report,\n        id: report.id,\n        comments: report.the_comments,\n        access: report.user_access,\n      });\n    }\n    console.log(report)\n  }\n\n  getList() {\n\n  }\n\n  setInstance() {\n    var report = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (report && klass === 'Report') {\n      this.setState({\n        report: report,\n        comments: report.the_comments,\n        page: 1\n      });\n    }\n  }\n\n  loadMore() {\n    this.setState({ page: this.state.page + 1 }, () => {\n      MyActions.getInstance('reports', this.$f7route.params['reportId'], this.state.token, this.state.page);\n    });\n  }\n\n  fab() {\n    if (this.state.report) {\n      return (\n        <Fab href={\"/reports/\" + this.state.report.id + \"/edit\"} target=\"#main-view\" position=\"left-bottom\" slot=\"fixed\" color=\"lime\">\n          <Icon ios=\"f7:edit\" aurora=\"f7:edit\" md=\"material:edit\"></Icon>\n          <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n        </Fab>\n      )\n    }\n  }\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n\n\n  submitComment() {\n    var data = { commentable_type: 'Report', commentable_id: this.state.id, content: this.state.commentContent }\n    MyActions.setInstance('comments', data, this.state.token);\n  }\n\n\n  deleteCommentConfirm(id) {\n    const self = this;\n    const app = self.$f7;\n    app.dialog.confirm(dict.are_you_sure, dict.alert, () => self.deleteComment(id))\n  }\n\n  deleteComment(id) {\n    var data = { id: id }\n    MyActions.removeInstance('comments', data, this.state.token, this.state.page);\n  }\n\n  render() {\n    const { report, comments , access} = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.reports} >\n        <Link panelOpen=\"right\">\n          <Icon f7=\"bars\"></Icon>\n        </Link>\n      </Navbar>\n        <BlockTitle></BlockTitle>\n        {this.fab()}\n        <ReportShow \n          report={report} comments={comments} submitComment={this.submitComment}\n          deleteCommentConfirm={this.deleteCommentConfirm} submit={this.submit} \n          handleChange={this.handleChangeValue} loadMore={this.loadMore} \n          access={access}\n          />\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { Card, CardHeader, Link, CardContent, Row, Col} from 'framework7-react';\nimport crypto from 'crypto-js';\n\nimport { dict } from \"../../Dict\";\n\nconst ReportList = (props) => {\n  if (props.reports && props.reports.length > 0) {\n    return (\n      <React.Fragment>\n        <Row noGap>\n          {props.reports.map((report) =>\n            <Col width=\"100\" tabletWidth=\"33\" key={crypto.lib.WordArray.random(128/8)}> \n              <Card className=\"demo-facebook-card\">\n                <CardHeader className=\"no-border\">\n                <div className=\"demo-facebook-avatar\"><Link tooltip={report.profile.fullname} href={'/profiles/' + report.profile.id}><img src={report.profile.avatar} height=\"34\" /></Link></div>\n                  <div className=\"demo-facebook-name \">\n                    <div className=\"demo-facebook-profile \">\n                      <Link className=\"gray-color\" href={'/profiles/' + report.profile.id}>{report.profile.fullname.substring(0, 40)}</Link>\n                    </div>\n                    <Link tooltip={dict.view} className=\"gray-color\" href={'/reports/' + report.id}>{report.title.substring(0, 15) + '..'}</Link></div>\n                  <div className=\"demo-facebook-date\">\n                    \n                  </div>\n                </CardHeader>\n                <CardContent className='lightgray-color fs-12'>\n                  {report.content.substring(0, 150) + '...'}\n                  <div className=\"demo-facebook-more\">\n                    <Link className=\"gray-color\" href={'/reports/' + report.id}>\n                      {dict.view}\n                      <i className=\"va fa fa-arrow-left mr-2\"></i>\n                    </Link>\n                  </div>\n                </CardContent>\n              </Card>\n            </Col>\n          )}\n        </Row>\n        <Row noGap>\n          <Col></Col>\n          <Col className='center mb-20'>\n          <a className=\"gray-color\" onClick={() => props.loadMore()}>\n            {dict.more}\n          </a>\n          </Col>\n          <Col></Col>\n        </Row>\n      </React.Fragment>\n    )\n  } else {\n    return (<ul></ul>)\n  }\n}\nexport default ReportList;\n","import React from \"react\";\nimport { Page, Navbar, Subnavbar, Searchbar, BlockTitle, Link, Fab, Icon, Toolbar, Tabs, Tab, Block } from 'framework7-react';\nimport ReportList from \"./list\"\nimport { dict } from '../../Dict';\n\nconst ReportIndex = (props) => {\n  return (\n    <Page pageContent={false}>\n      <Navbar title={dict.reports} >\n        <Link panelOpen=\"right\">\n          <Icon f7=\"bars\"></Icon>\n        </Link>\n        <Subnavbar inner={false}>\n          <Searchbar\n            disableButtonText={dict.cancel}\n            placeholder={dict.search}\n            onChange={(e) => {\n              props.search({ query: e.target.value })\n            }}\n          ></Searchbar>\n        </Subnavbar>\n      </Navbar>\n      <Toolbar tabbar bottom>\n          <Link tabLink=\"#tab-1\" tabLinkActive><i className=\"va ml-5 fa fa-link\"></i></Link>\n          <Link tabLink=\"#tab-2\"><i className=\"va ml-5 fa fa-plug\"></i></Link>\n          <Link tabLink=\"#tab-3\"><i className=\"va ml-5 fa fa-user-o\"></i></Link>\n        </Toolbar>\n      <BlockTitle></BlockTitle>\n      <Fab href=\"/reports/new\" target=\"#main-view\" position=\"left-bottom\" slot=\"fixed\" color=\"deeporange\">\n        <Icon ios=\"f7:add\" aurora=\"f7:add\" md=\"material:add\"></Icon>\n        <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n      </Fab>\n      <Tabs swipeable>\n        <Tab id=\"tab-1\" className=\"page-content\" tabActive>\n          <Block>\n            <ReportList reports={props.reports} interaction={props.interaction} loadMore={props.loadMore} />\n          </Block>\n        </Tab>\n\n        <Tab id=\"tab-2\" className=\"page-content\" >\n          <Block>\n            <ReportList reports={props.reports} interaction={props.interaction} loadMore={props.loadMore} />\n          </Block>\n        </Tab>\n\n        <Tab id=\"tab-3\" className=\"page-content\" >\n          <Block>\n            <ReportList reports={props.reports} interaction={props.interaction} loadMore={props.loadMore} />\n          </Block>\n        </Tab>\n      </Tabs>\n    </Page>\n  )\n}\nexport default ReportIndex;\n","\nexport function loggedIn() {\n  console.log('>>>>>>>>>>>>>>>>>>>>>');\n    var token = window.localStorage.getItem('token');\n    if (token) {\n      return true\n    } else {\n      this.$f7router.navigate('/login/');\n    }\n\n}\n","import React from \"react\"\nimport { Page, Fab, Icon } from 'framework7-react';\nimport ModelStore from \"../../stores/ModelStore\";\nimport ReportIndex from \"../../containers/reports/index\"\nimport * as MyActions from \"../../actions/MyActions\";\nimport { loggedIn } from \"../../components/users/loggedIn.js\"\n\n\nexport default class Report extends React.Component {\n  constructor() {\n    super();\n    this.getList = this.getList.bind(this);\n    this.loggedIn = loggedIn.bind(this);\n    this.interaction = this.interaction.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.search = this.search.bind(this);\n    this.loadMore = this.loadMore.bind(this);\n\n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      reports: [],\n      query: null,\n      page: 1\n    }\n  }\n  componentWillMount() {\n    ModelStore.on(\"got_list\", this.getList);\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_list\", this.getList);\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n  }\n\n  componentDidMount() {\n    this.loggedIn();\n    this.loadData();\n  }\n\n  loadData() {\n    MyActions.getList('reports', this.state.page, {}, this.state.token);\n  }\n\n  search(obj) {\n    this.setState({ reports: [], page: 1 });\n    this.setState(obj, () => {\n      MyActions.getList('reports/search', this.state.page, { q: this.state.query });\n    });\n\n  }\n\n  setInstance() {\n    var report = ModelStore.getIntance()\n    if (report) {\n      this.setState({ reports: this.state.reports.map(el => (el.id === report.id ? Object.assign({}, el, report) : el)) });\n    }\n  }\n\n\n  loadMore() {\n    if (this.state.query && this.state.query.length > 0) {\n      this.setState({ page: this.state.page + 1 }, () => {\n        MyActions.getList('reports/search', this.state.page, {q: this.state.query }, this.state.token);\n      });\n    } else {\n      this.setState({ page: this.state.page + 1 }, () => {\n        MyActions.getList('reports', this.state.page, {}, this.state.token);\n      });\n    }\n  }\n\n  getList() {\n    var reports = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    if (reports.length > 0 && klass === 'Report') {\n      this.setState({\n        reports: this.state.reports.concat(reports),\n      });\n    }\n  }\n\n  interaction(interaction_type, interactionable_id, interactionable_type, source_type = null, source_id = null) {\n    var data = { interaction_type: interaction_type, interactionable_id: interactionable_id, interactionable_type: interactionable_type, source_type: source_type, source_id: source_id }\n    MyActions.setInstance('interactions', data, this.state.token);\n  }\n\n  render() {\n    const { reports } = this.state;\n    return (<ReportIndex interaction={this.interaction} loadMore={this.loadMore} reports={reports} search={this.search} />)\n  }\n}\n","import React from \"react\";\nimport { Card, CardContent, CardHeader } from 'framework7-react';\nimport 'react-dropzone-uploader/dist/styles.css'\nimport '../../css/upload.css'\nimport Dropzone from 'react-dropzone-uploader'\nimport { dict } from \"../../Dict\";\nimport { conf } from '../../conf';\nconst server= conf.server\n\nconst UploadForm = (props) => {\n  // specify upload params and url for your files\n  const getUploadParams = ({ meta }) => { return { fields:{'upload[title]':props.title, 'upload[uuid]': props.uuid}, url: server+'/uploads' } }\n  \n  // called every time a file's `status` changes\n  const handleChangeStatus = ({ meta, file }, status) => { console.log(status, meta, file) }\n  \n  // receives array of files that are done uploading when submit button is clicked\n  const handleSubmit = (files, allFiles) => {\n    console.log(files.map(f => f.meta))\n    allFiles.forEach(f => f.remove())\n  }\n\n  return (\n    <Card>\n      <CardHeader>{dict.attachment}</CardHeader>\n      <CardContent>\n    <Dropzone\n      getUploadParams={getUploadParams}\n      onChangeStatus={handleChangeStatus}\n      onSubmit={handleSubmit}\n      autoUpload={true}\n      submitButtonDisabled={true}\n      inputContent={dict.drag_or_browse}\n    />\n    </CardContent>\n    </Card>\n  )\n}\n\nexport default UploadForm;\n","import React from \"react\";\nimport { List, BlockTitle, ListInput, Link, CardFooter, Button, Card, CardHeader, Col } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport crypto from 'crypto-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport { EditorState, convertFromRaw } from \"draft-js\";\nimport UploadForm from \"../uploads/form\"\nimport fa from '../../js/fa.js';\n\nconst ReportForm = (props) => {\n\n  function deleteButton() {\n    if (props.editing) {\n      return (\n        <Col>\n          <Button className=\"col btn ml-5\" outline color='red' disabled={!props.editing} onClick={() => props.deleteReportConfirm()}>{dict.delete}</Button>\n        </Col>\n      )\n    }\n  }\n\n  function attachments() {\n    if (props.previous_attachments) {\n      return (\n        <React.Fragment>\n          <BlockTitle>{dict.previous_attachments}</BlockTitle>\n          <List>\n            {props.attachments.map((attachment) =>\n              <li className=\"\">\n                <div className=\"item-content\">\n                  <div className=\"item-inner\">\n                    <div className=\"item-title\">\n                      <a className=\"link\" onClick={() => props.removeAttachment(attachment.id)}>\n                        <i className=\"fa ml-5 fa-trash\" aria-hidden=\"true\"></i>\n                        {attachment.filename}\n                      </a>\n                    </div>\n                  </div>\n                </div>\n              </li>\n            )}\n          </List>\n        </React.Fragment>\n      )\n    }\n  }\n  if (props.report) {\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>{dict.new_report}</CardHeader>\n          <List >\n            <ListInput\n              label={dict.title + '*'}\n              type=\"text\"\n              placeholder='...'\n              maxlength='65'\n              defaultValue={props.title}\n              onInput={(e) => {\n                props.handleChange({ title: e.target.value })\n              }}\n            />\n            <Editor\n              editorState={props.editorState}\n              placeholder={dict.content}\n              localization={{\n                locale: 'fa',\n                translations: fa\n              }}\n              toolbar={{\n                options: ['inline', 'list', 'link'],\n                inline: { options: ['bold', 'italic', 'underline'] },\n                image: {\n                  uploadCallback: props.uploadImageCallBack,\n                  previewImage: true,\n                },\n              }}\n              onEditorStateChange={props.onEditorStateChange}\n            />\n          </List>\n\n          <CardFooter>\n          {deleteButton()}\n            <Link></Link>\n            <Link className=\"btn-notice\"></Link>\n            <Button className=\"col btn\" fill onClick={(e) => props.submit(e)} >{dict.submit}</Button>\n          </CardFooter>\n        </Card>\n        <UploadForm uploadableType='Report' uuid={props.uuid} />\n\n\n\n      </React.Fragment>\n    )\n  } else {\n    return (null)\n  }\n}\nexport default ReportForm;\n","import { conf } from '../../conf';\nexport function uploadImageCallBack(file) {\n  return new Promise(\n    (resolve, reject) => {\n      const xhr = new XMLHttpRequest(); // eslint-disable-line no-undef\n      xhr.open('POST', conf.server+'/uploads');\n      xhr.setRequestHeader('Authorization', 'Client-ID 8d26ccd12712fca');\n      const data = new FormData(); // eslint-disable-line no-undef\n      data.append('upload[image]', file);\n      xhr.send(data);\n      xhr.addEventListener('load', () => {\n        const response = JSON.parse(xhr.responseText);\n        resolve(response);\n      });\n      xhr.addEventListener('error', () => {\n        const error = JSON.parse(xhr.responseText);\n        reject(error);\n      });\n    },\n  );\n}\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon\n} from 'framework7-react';\nimport { dict } from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport ReportForm from \"../../containers/reports/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\nimport { EditorState, convertFromRaw, convertToRaw } from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport { uploadImageCallBack } from \"./uploader.js\";\nimport crypto from 'crypto-js';\n\nexport default class ReportCreate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.onEditorStateChange = this.onEditorStateChange.bind(this)\n    this.getList = this.getList.bind(this)\n    this.uploadImageCallBack = uploadImageCallBack.bind(this);\n\n\n    this.state = {\n      report: {},\n      editorState: EditorState.createEmpty(),\n      token: window.localStorage.getItem('token'),\n      title: null,\n      interaction: null,\n      uuid: crypto.enc.Base64.stringify(crypto.lib.WordArray.random(128/8)),\n      page: 0\n    }\n  }\n\n\n  componentWillMount() {\n    ModelStore.on(\"set_instance\", this.setInstance);\n    ModelStore.on(\"got_list\", this.getList);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n    ModelStore.removeListener(\"got_list\", this.getList);\n  }\n\n\n\n  submit() {\n    this.$$('.btn').hide();\n    this.$$('.btn-notice').text(dict.submitting);\n    \n  //  this.$$()\n    const blocks = convertToRaw(this.state.editorState.getCurrentContent()).blocks;\n    const value = blocks.map(block => (!block.text.trim() && '\\n') || block.text).join('\\n');\n    var taskId = null\n    var workId = null\n    if (this.$f7route.params['callerType'] == 'tasks'){\n      taskId = this.$f7route.params['callerId']\n    }\n    if (this.$f7route.params['callerType'] == 'works'){\n      workId = this.$f7route.params['callerId']\n    }\n    var data = { task_id: taskId, work_id: workId, uuid: this.state.uuid, title: this.state.title, content: value, draft: convertToRaw(this.state.editorState.getCurrentContent()) }\n    if (this.state.title) {\n      MyActions.setInstance('reports', data, this.state.token);\n    } else {\n      const self = this;\n      self.$f7.dialog.alert(dict.incomplete_data, dict.alert);\n    }\n  }\n\n  onEditorStateChange(editorState) {\n    this.setState({\n      editorState,\n    });\n  };\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  loadData() {\n    \n  }\n\n  componentDidUpdate(prev, prevstate) {\n  }\n\n  getList() {\n\n  }\n\n  setInstance() {\n    var report = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (report && klass === 'Report') { \n      this.$$('.btn').show();\n      this.$f7router.navigate('/reports/'+ report.id);\n    }\n    \n  }\n\n\n\n\n\n  render() {\n    const { report, editorState, uuid } = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.report_form}  backLink={dict.back} />\n        <ReportForm report={report} uuid={uuid} editorState={editorState} onEditorStateChange={this.onEditorStateChange} submit={this.submit} handleChange={this.handleChangeValue} uploadImageCallBack={this.uploadImageCallBack} />\n      </Page>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport ReportForm from \"../../containers/reports/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\nimport { EditorState, convertFromRaw, convertToRaw } from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport {uploadImageCallBack} from \"./uploader.js\"\nimport crypto from 'crypto-js';\n\nexport default class ReportUpdate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.getInstance = this.getInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.onEditorStateChange = this.onEditorStateChange.bind(this)\n    this.getList = this.getList.bind(this)\n    this.removeAttachment = this.removeAttachment.bind(this);\n    this.deleteInstance = this.deleteInstance.bind(this);\n    this.deleteReportConfirm = this.deleteReportConfirm.bind(this);\n    this.deleteReport = this.deleteReport.bind(this);\n    \n    \n\n    this.state = {\n      report: null,\n      editorState: EditorState.createEmpty(),\n      token: window.localStorage.getItem('token'),\n      uuid: crypto.enc.Base64.stringify(crypto.lib.WordArray.random(128/8)),\n      id: null,\n      title: null,\n      draft: null,\n      taskId:  null,\n      workId: null,\n      page: 0\n    }\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.setInstance);\n    ModelStore.on(\"got_list\", this.getList);\n    ModelStore.on(\"deleted_instance\", this.deleteInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n    ModelStore.removeListener(\"got_list\", this.getList);\n    ModelStore.removeListener(\"deleted_instance\", this.deleteInstance);\n  }\n\n  submit(){\n    const blocks = convertToRaw(this.state.editorState.getCurrentContent()).blocks;\n    const value = blocks.map(block => (!block.text.trim() && '\\n') || block.text).join('\\n');\n    var taskId = null\n    var workId = null\n    if (this.state.task){\n      taskId = this.state.task.id\n    }\n    if (this.state.work){\n      workId = this.state.work.id\n    }\n    var data = {\n      id: this.state.id, task_id: taskId, work_id: workId, \n      uuid: this.state.uuid, title: this.state.title, content: value, \n      draft: convertToRaw(this.state.editorState.getCurrentContent()) \n    }\n    MyActions.updateInstance('reports', data, this.state.token);\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  loadData(){\n    const f7: Framework7 = Framework7.instance;\n    f7.toast.show({ text: dict.receiving, closeTimeout: 2000, position: 'top'});\n    if (this.$f7route.params['reportId']) {\n      MyActions.getInstance('reports', this.$f7route.params['reportId'], this.state.token);\n    }\n  }\n\n  getList() {\n\n  }\n\n  getInstance(){\n    var report = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (report && klass === 'Report') { \n      const contentState = convertFromRaw(report.draft);\n      const editorState = EditorState.createWithContent(contentState);\n      this.setState({\n        report: report,\n        title: report.title,\n        id: report.id,\n        task: report.the_task,\n        work: report.the_work,\n        attachments: report.attachments,\n        editorState: editorState\n      });\n    }\n    console.log(report);\n  }\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  onEditorStateChange(editorState){\n      this.setState({\n      editorState,\n    });\n  };\n\n  removeAttachment(id){\n    this.setState({\n      attachments: this.state.attachments.filter(function (attachment) {\n        return attachment.id !== id\n      })\n    });\n    var data = { id: id }\n    MyActions.removeInstance('uploads', data, this.state.token, this.state.page);\n  }\n\n\n  setInstance() {\n    var report = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (report && klass === 'Report') { \n      this.$f7router.navigate('/reports/'+ report.id);\n    }\n    \n  }\n\n\n  deleteReportConfirm(){\n    const self = this;\n    const app = self.$f7;\n    app.dialog.confirm(dict.are_you_sure, dict.alert, self.deleteReport)\n  }\n\n  deleteReport(){\n    var data = { id: this.state.id}\n    MyActions.removeInstance('reports', data, this.state.token);\n  }\n\n  deleteInstance() {\n    if (this.state.task){\n      this.$f7router.navigate('/tasks/'+this.state.task.id);\n    }\n    if (this.state.work){\n      this.$f7router.navigate('/works/'+this.state.work.id);\n    }\n   \n  }\n\n\n\n\n  render() {\n    const { report, editorState, uuid, title, attachments} = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.report} backLink={dict.back} />\n        <BlockTitle>{dict.workflow_form}</BlockTitle>\n        <ReportForm \n        report={report} attachments={attachments} title={title} \n        uuid={uuid} editorState={editorState} editing={true} deleteReportConfirm={this.deleteReportConfirm}\n        onEditorStateChange={this.onEditorStateChange} submit={this.submit}  \n        handleChange={this.handleChangeValue} removeAttachment={this.removeAttachment}/>\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { Page, Navbar, List, BlockTitle, ListItem, Fab, Icon,Preloader, Block} from 'framework7-react';\nimport { dict} from '../../Dict';\n\n\nconst GroupShow = (props) => {\n  if (props.group){\n    return(\n      <React.Fragment>\n        <BlockTitle>{dict.title}</BlockTitle>\n        <List simple-list>\n          <ListItem>{props.group.title}</ListItem>\n        </List>\n\n        <List className='fs-11'>\n        {props.group.the_grouping.map((item) =>\n          <ListItem\n            key={'involvement' + item.profile.id}\n            title={item.profile.fullname}\n            after=''>\n            <img slot=\"media\" src={item.profile.avatar} width=\"27\" height=\"27\" />\n          </ListItem>\n        )}\n      </List>\n\n      </React.Fragment>\n    )\n  } else {\n    return(null)\n  }\n}\nexport default GroupShow;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon, Fab\n} from 'framework7-react';\nimport { dict } from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport GroupShow from \"../../containers/groups/show\"\n\nexport default class Layout extends Component {\n  constructor() {\n    super();\n    this.getInstance = this.getInstance.bind(this);\n    this.submit = this.submit.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n\n\n    \n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      group: null,\n      id: null,\n      user_id: null,\n    }\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.getInstance);\n    ModelStore.on(\"deleted_instance\", this.getInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.getInstance);\n    ModelStore.removeListener(\"deleted_instance\", this.getInstance);\n  }\n\n  componentDidMount() {\n    MyActions.getInstance('groups', this.$f7route.params['groupId'], this.state.token);\n  }\n\n  getInstance() {\n    var group = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (group && klass === 'Group') {\n      this.setState({\n        group: group,\n        id: group.id,\n      });\n    }\n    this.$$('.btn').show();\n  }\n\n\n  submit() {\n    this.$$('.btn').hide();\n    this.$$('.btn-notice').text(dict.submitting);\n    var data = { group_id: this.state.id, user_id: this.state.user_id }\n    MyActions.setInstance('users/assignments', data, this.state.token);\n  }\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  fab() {\n    if (this.state.group) {\n      return (\n        <Fab href={\"/groups/\" + this.state.group.id + \"/edit\"} target=\"#main-view\" position=\"left-bottom\" slot=\"fixed\" color=\"lime\">\n          <Icon ios=\"f7:edit\" aurora=\"f7:edit\" md=\"material:edit\"></Icon>\n          <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n        </Fab>\n      )\n    }\n  }\n\n\n  render() {\n    const { group } = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.groups} backLink={dict.back} />\n        <BlockTitle></BlockTitle>\n        {this.fab()}\n        <GroupShow \n          group={group}  submit={this.submit} \n          handleChange={this.handleChangeValue}\n        />\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { List, ListItem} from 'framework7-react';\nimport crypto from 'crypto-js';\n\nconst GroupList = (props) => {\n\n  if (props.groups) {\n    return (\n      <List mediaList>\n        {props.groups.map((group) =>\n          <ListItem\n            key={crypto.lib.WordArray.random(32)}\n            link={\"/groups/\" + group.id}\n            ignoreCache={true}\n            title={group.title}\n            after=\"\"\n            subtitle=\"\"\n            text=\"\"\n            ></ListItem>\n        )}\n      </List>\n    )} else {\n      return (<ul></ul>)\n    }\n  }\n  export default GroupList;\n","import React from \"react\";\nimport { Page, Navbar, List, BlockTitle, ListItem, Fab, Icon,Preloader, Block} from 'framework7-react';\nimport GroupList from \"./list\"\nimport { dict} from '../../Dict';\n\nconst GroupIndex = (props) => {\n  return(\n    <Page>\n      <Navbar title={dict.groups} backLink={dict.back} >\n      </Navbar>\n      <BlockTitle>{dict.list}</BlockTitle>\n      <Fab href=\"/groups/new\" target=\"#main-view\"  position=\"left-bottom\" slot=\"fixed\" color=\"deeporange\">\n        <Icon ios=\"f7:add\" aurora=\"f7:add\" md=\"material:add\"></Icon>\n        <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n      </Fab>\n      <GroupList groups={props.groups}/>\n    </Page>\n  )\n}\nexport default GroupIndex;\n","import React from \"react\"\nimport { Page,Fab, Icon } from 'framework7-react';\nimport ModelStore from \"../../stores/ModelStore\";\nimport GroupIndex from \"../../containers/groups/index\"\nimport * as MyActions from \"../../actions/MyActions\";\nimport { dict} from '../../Dict';\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\n\nexport default class Layout extends React.Component {\n  constructor() {\n    super();\n    this.getList = this.getList.bind(this);\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      groups: null,\n    }\n  }\n  componentWillMount() {\n    ModelStore.on(\"got_list\", this.getList);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_list\", this.getList);\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  loadData(){\n    const f7: Framework7 = Framework7.instance;\n    f7.toast.show({ text: dict.receiving, closeTimeout: 2000, position: 'top'});\n    MyActions.getList('groups', this.state.page, {}, this.state.token);\n  }\n\n  getList() {\n    var groups = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    if (groups && klass === 'Group'){\n      this.setState({\n        groups: groups,\n      });\n    }\n  }\n\n  render() {\n    const {groups} = this.state;\n    return(<GroupIndex groups={groups}/>)\n  }\n}\n","import React from \"react\";\nimport { List, ListItem, ListInput, Block, Row, Button, BlockTitle, Chip, Link } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport crypto from 'crypto-js';\n\n\nconst GroupForm = (props) => {\n  console.log(props)\n  function groupings() {\n    var chips = [\n      <div>\n        <a className='fs-11 ' href=\"#\" id='time-sheet-grouping'>\n          <div className=\"item-title fs-11\">\n            <i className=\"va-minus-2 ml-5 fa fa-user-plus\"></i>\n            {dict.profiles}:\n        </div>\n        </a>\n      </div>\n    ]\n    if (props.grouping) {\n      props.grouping.map((profile) => {\n        chips.push(<Chip text={profile.fullname} deleteable onClick={() => props.removeGrouping(profile.id)} />)\n      }\n      )\n    }\n    return chips\n  }\n  return (\n    <React.Fragment>\n      <BlockTitle>{dict.group}</BlockTitle>\n      <List >\n        <ListInput\n          label={dict.title}\n          type=\"text\"\n          placeholder='...'\n          defaultValue={props.title}\n          onInput={(e) => {\n            props.handleChange({ title: e.target.value })\n          }}\n        />\n        <ListItem title={groupings()}></ListItem>\n      </List>\n      \n\n      <Block strong>\n        <Row tag=\"p\">\n        <Link className=\"btn-notice\"></Link>\n          <Button className=\"col btn\" fill disabled={!props.editing} onClick={props.submit}>{dict.submit}</Button>\n        </Row>\n      </Block>\n    </React.Fragment>\n  )}\nexport default GroupForm;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport GroupForm from \"../../containers/groups/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\nimport { conf } from '../../conf';\n\nexport default class GroupCreate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.loadGrouping = this.loadGrouping.bind(this);\n    this.removeGrouping = this.removeGrouping.bind(this);\n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      group: {},\n      grouping: [],\n    }\n  }\n\n\n  componentWillMount() {\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n  }\n\n  submit(){\n    var data = {title: this.state.title, grouping: this.state.grouping}\n    MyActions.setInstance('groups', data, this.state.token);\n  }\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  setInstance(){\n    const self = this;\n    this.$f7router.navigate('/groups/');\n  }\n\n  removeGrouping(id){\n    this.setState({\n      grouping: this.state.grouping.filter(function (profile) {\n        return profile.id !== id\n      })\n    });\n  }\n\n  pageAfterIn() {\n    this.loadGrouping();\n  }\n\n\n  loadGrouping() {\n    const self = this;\n    const app = self.$f7;\n    app.autocomplete.create({\n      openIn: 'popup', //open in page\n      openerEl: '#time-sheet-grouping', //link that opens autocomplete\n      multiple: true, //allow multiple values\n      valueProperty: 'id', //object's \"value\" property name\n      textProperty: 'fullname', //object's \"text\" property name\n      searchbarDisableText: dict.cancel,\n      popupCloseLinkText: dict.close,\n      notFoundText: dict.not_found,\n      limit: 50,\n      searchbarPlaceholder: dict.search,\n      //preloader: true, //enable preloader\n      source: function (query, render) {\n        var autocomplete = this;\n        var results = [];\n        if (query.length === 0) {\n          render(results);\n          return;\n        }\n        // Show Preloader\n       // autocomplete.preloaderShow();\n        // Do Ajax request to Autocomplete data\n        app.request({\n          url: conf.server + '/profiles/search',\n          method: 'GET',\n          dataType: 'json',\n          //send \"query\" to server. Useful in case you generate response dynamically\n          data: {\n            q: query\n          },\n          success: function (item) {\n            // Find matched items\n            for (var i = 0; i < item.data.length; i++) {\n               results.push(item.data[i]);\n            }\n            // Hide Preoloader\n            //autocomplete.preloaderHide();\n            // Render items by passing array with result items\n            render(results);\n          }\n        });\n      },\n      on: {\n        change: function (value) {\n          if (value && value[value.length - 1]) {\n            self.setState({ grouping: self.state.grouping.concat({ fullname: value[value.length - 1].fullname, id: value[value.length - 1].id }) })\n          }\n        },\n      },\n    });\n  }\n\n\n\n  render() {\n    const {group, grouping} = this.state;\n    return (\n      <Page onPageAfterIn={this.pageAfterIn.bind(this)}>\n        <Navbar title={dict.group_form} backLink={dict.back} />\n        <BlockTitle>{dict.group_form}</BlockTitle>\n        <GroupForm \n        group={group} submit={this.submit} editing={true} grouping={grouping}\n        handleChange={this.handleChangeValue} removeGrouping={this.removeGrouping}\n        \n        />\n      </Page>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport GroupForm from \"../../containers/groups/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\nimport { conf } from '../../conf';\n\nexport default class GroupCreate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.loadGrouping = this.loadGrouping.bind(this);\n    this.removeGrouping = this.removeGrouping.bind(this);\n    this.getInstance = this.getInstance.bind(this);\n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      group: {},\n      title: null,\n      id: null,\n      grouping: [],\n    }\n  }\n\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n  }\n\n  componentDidMount() {\n    MyActions.getInstance('groups', this.$f7route.params['groupId'], this.state.token);\n  }\n\n  submit(){\n    var data = {id: this.state.id, title: this.state.title, grouping: this.state.grouping}\n    MyActions.updateInstance('groups', data, this.state.token);\n  }\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  setInstance(){\n    const self = this;\n    this.$f7router.navigate('/groups/');\n  }\n\n  removeGrouping(id){\n    this.setState({\n      grouping: this.state.grouping.filter(function (profile) {\n        return profile.id !== id\n      })\n    });\n  }\n\n  pageAfterIn() {\n    this.loadGrouping();\n  }\n\n  getInstance() {\n    var group = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (group && klass === 'Group') {\n      this.setState({\n        group: group,\n        id: group.id,\n        title: group.title,\n        grouping: group.tag_grouping\n      });\n    }\n  }\n\n\n  loadGrouping() {\n    const self = this;\n    const app = self.$f7;\n    app.autocomplete.create({\n      openIn: 'popup', //open in page\n      openerEl: '#time-sheet-grouping', //link that opens autocomplete\n      multiple: true, //allow multiple values\n      valueProperty: 'id', //object's \"value\" property name\n      textProperty: 'fullname', //object's \"text\" property name\n      searchbarDisableText: dict.cancel,\n      popupCloseLinkText: dict.close,\n      notFoundText: dict.not_found,\n      limit: 50,\n      searchbarPlaceholder: dict.search,\n      //preloader: true, //enable preloader\n      source: function (query, render) {\n        var autocomplete = this;\n        var results = [];\n        if (query.length === 0) {\n          render(results);\n          return;\n        }\n        // Show Preloader\n       // autocomplete.preloaderShow();\n        // Do Ajax request to Autocomplete data\n        app.request({\n          url: conf.server + '/profiles/search',\n          method: 'GET',\n          dataType: 'json',\n          //send \"query\" to server. Useful in case you generate response dynamically\n          data: {\n            q: query\n          },\n          success: function (item) {\n            // Find matched items\n            for (var i = 0; i < item.data.length; i++) {\n               results.push(item.data[i]);\n            }\n            // Hide Preoloader\n            //autocomplete.preloaderHide();\n            // Render items by passing array with result items\n            render(results);\n          }\n        });\n      },\n      on: {\n        change: function (value) {\n          if (value && value[value.length - 1]) {\n            self.setState({ grouping: self.state.grouping.concat({ fullname: value[value.length - 1].fullname, id: value[value.length - 1].id }) })\n          }\n        },\n      },\n    });\n  }\n\n\n\n  render() {\n    const {group, grouping, title, id} = this.state;\n    return (\n      <Page onPageAfterIn={this.pageAfterIn.bind(this)}>\n        <Navbar title={dict.group_form} backLink={dict.back} />\n        <BlockTitle>{dict.group_form}</BlockTitle>\n        <GroupForm \n        group={group} submit={this.submit} editing={true} grouping={grouping}\n        id={id} title={title}\n        handleChange={this.handleChangeValue} removeGrouping={this.removeGrouping}\n        \n        />\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { List, ListItem, Toggle, Block, Row, Button, Chip, Col } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport crypto from 'crypto-js';\n\n\nconst SettingForm = (props) => {\n  if (true) {\n    function setting(item) {\n      if (props.notification_setting && props.notification_setting[item]) {\n        return (true)\n      } else {\n        if (props.notification_setting && props.notification_setting[item] == false) {\n          return (false)\n        } else {\n          return (false)\n        }\n      }\n    }\n\n    function blockList() {\n      var chips = [\n        <div>\n          <a className='fs-11 ' href=\"#\" id='user-blocklist'>\n            <div className=\"item-title fs-11\">\n              <i className=\"va-minus-2 ml-5 fa fa-user-plus\"></i>\n              {dict.profiles}:\n          </div>\n          </a>\n        </div>\n      ]\n      if (props.blockList) {\n        props.blockList.map((profile) => {\n          chips.push(<Chip text={profile.fullname} deleteable onClick={() => props.removeBlocked(profile.id)} />)\n        }\n        )\n      }\n      return chips\n    }\n\n    return (\n      <React.Fragment>\n        <List form className='fs-11'>\n          <ListItem>\n            <span >{dict.private}</span>\n            <Toggle className='pd-5' onChange={(e) => props.changeSetting(e, '')} />\n            <span className='pd-10 fs-8'>{dict.if_someone_adds_you_youll_be_asked}</span>\n          </ListItem>\n        </List>\n\n        <List>\n          <ListItem title={dict.blocked_list}></ListItem>\n          <ListItem title={blockList()}></ListItem>\n        </List>\n\n        <div className=\"data-table card\">\n          <table className='fs-11'>\n            <thead>\n              <tr>\n                <td>{dict.notification_type}</td>\n                <td>{dict.mail_notification}</td>\n                <td>{dict.push_notification}</td>\n                <td>{dict.sms}</td>\n              </tr>\n            </thead>\n            <tbody>\n              {}\n              <tr>\n                <td className='fs-11'>{dict.add_involvement_to_tasks}</td>\n                <td><Toggle className='pd-5' checked={setting('add_involvement_to_tasks_email')} onChange={(e) => props.changeSetting(e, 'add_involvement_to_tasks_email')} /></td>\n                <td><Toggle className='pd-5' checked={setting('add_involvement_to_tasks_push')} onChange={(e) => props.changeSetting(e, 'add_involvement_to_tasks_push')} /></td>\n                <td><Toggle className='pd-5' checked={setting('add_involvement_to_tasks_sms')} onChange={(e) => props.changeSetting(e, 'add_involvement_to_tasks_sms')} /></td>\n              </tr>\n              <tr>\n                <td className='fs-11'>{dict.remove_involvement_from_tasks}</td>\n                <td><Toggle className='pd-5' checked={setting('remove_involvement_from_tasks_email')} onChange={(e) => props.changeSetting(e, 'remove_involvement_from_tasks_email')} /></td>\n                <td><Toggle className='pd-5' checked={setting('remove_involvement_from_tasks_push')} onChange={(e) => props.changeSetting(e, 'remove_involvement_from_tasks_push')} /></td>\n                <td><Toggle className='pd-5' checked={setting('remove_involvement_from_tasks_sms')} onChange={(e) => props.changeSetting(e, 'remove_involvement_from_tasks_sms')} /></td>\n              </tr>\n              <tr>\n                <td className='fs-11'>{dict.change_status_tasks}</td>\n                <td><Toggle className='pd-5' checked={setting('change_status_tasks_email')} onChange={(e) => props.changeSetting(e, 'change_status_tasks_email')} /></td>\n                <td><Toggle className='pd-5' checked={setting('change_status_tasks_push')} onChange={(e) => props.changeSetting(e, 'change_status_tasks_push')} /></td>\n                <td><Toggle className='pd-5' checked={setting('change_status_tasks_sms')} onChange={(e) => props.changeSetting(e, 'change_status_tasks_sms')} /></td>\n              </tr>\n              <tr>\n                <td className='fs-11'>{dict.add_works_to_tasks}</td>\n                <td><Toggle className='pd-5' checked={setting('add_works_to_tasks_email')} onChange={(e) => props.changeSetting(e, 'add_works_to_tasks_email')} /></td>\n                <td><Toggle className='pd-5' checked={setting('add_works_to_tasks_push')} onChange={(e) => props.changeSetting(e, 'add_works_to_tasks_push')} /></td>\n                <td><Toggle className='pd-5' checked={setting('add_works_to_tasks_sms')} onChange={(e) => props.changeSetting(e, 'add_works_to_tasks_sms')} /></td>\n              </tr>\n              <tr>\n                <td className='fs-11'>{dict.add_reports_to_tasks}</td>\n                <td><Toggle className='pd-5' checked={setting('add_reports_to_tasks_email')} onChange={(e) => props.changeSetting(e, 'add_reports_to_tasks_email')} /></td>\n                <td><Toggle className='pd-5' checked={setting('add_reports_to_tasks_push')} onChange={(e) => props.changeSetting(e, 'add_reports_to_tasks_push')} /></td>\n                <td><Toggle className='pd-5' checked={setting('add_reports_to_tasks_sms')} onChange={(e) => props.changeSetting(e, 'add_reports_to_tasks_sms')} /></td>\n              </tr>\n              <tr>\n                <td className='fs-11'>{dict.add_comments_to_tasks}</td>\n                <td><Toggle className='pd-5' checked={setting('add_comments_to_tasks_email')} onChange={(e) => props.changeSetting(e, 'add_comments_to_tasks_email')} /></td>\n                <td><Toggle className='pd-5' checked={setting('add_comments_to_tasks_push')} onChange={(e) => props.changeSetting(e, 'add_comments_to_tasks_push')} /></td>\n                <td><Toggle className='pd-5' checked={setting('add_comments_to_tasks_sms')} onChange={(e) => props.changeSetting(e, 'add_comments_to_tasks_sms')} /></td>\n              </tr>\n              <tr>\n                <td></td>\n                <td></td>\n                <td></td>\n                <td></td>\n              </tr>\n              <tr>\n                <td className='fs-11'>{dict.add_involvement_to_works}</td>\n                <td><Toggle className='pd-5' checked={setting('add_involvement_to_works_email')} onChange={(e) => props.changeSetting(e, 'add_involvement_to_works_email')} /></td>\n                <td><Toggle className='pd-5' checked={setting('add_involvement_to_works_push')} onChange={(e) => props.changeSetting(e, 'add_involvement_to_works_push')} /></td>\n                <td><Toggle className='pd-5' checked={setting('add_involvement_to_works_sms')} onChange={(e) => props.changeSetting(e, 'add_involvement_to_works_sms')} /></td>\n              </tr>\n              <tr>\n                <td className='fs-11'>{dict.remove_involvement_from_works}</td>\n                <td><Toggle className='pd-5' checked={setting('remove_involvement_from_works_email')} onChange={(e) => props.changeSetting(e, 'remove_involvement_from_works_email')} /></td>\n                <td><Toggle className='pd-5' checked={setting('remove_involvement_from_works_push')} onChange={(e) => props.changeSetting(e, 'remove_involvement_from_works_push')} /></td>\n                <td><Toggle className='pd-5' checked={setting('remove_involvement_from_works_sms')} onChange={(e) => props.changeSetting(e, 'remove_involvement_from_works_sms')} /></td>\n              </tr>\n              <tr>\n                <td className='fs-11'>{dict.change_status_works}</td>\n                <td><Toggle className='pd-5' checked={setting('change_status_works_email')} onChange={(e) => props.changeSetting(e, 'change_status_works_email')} /></td>\n                <td><Toggle className='pd-5' checked={setting('change_status_works_push')} onChange={(e) => props.changeSetting(e, 'change_status_works_push')} /></td>\n                <td><Toggle className='pd-5' checked={setting('change_status_works_sms')} onChange={(e) => props.changeSetting(e, 'change_status_works_sms')} /></td>\n              </tr>\n              <tr>\n                <td className='fs-11'>{dict.add_todos_to_works}</td>\n                <td><Toggle className='pd-5' checked={setting('add_todos_to_works_email')} onChange={(e) => props.changeSetting(e, 'add_todos_to_works_email')} /></td>\n                <td><Toggle className='pd-5' checked={setting('add_todos_to_works_push')} onChange={(e) => props.changeSetting(e, 'add_todos_to_works_push')} /></td>\n                <td><Toggle className='pd-5' checked={setting('add_todos_to_works_sms')} onChange={(e) => props.changeSetting(e, 'add_todos_to_works_sms')} /></td>\n              </tr>\n              <tr>\n                <td className='fs-11'>{dict.add_reports_to_works}</td>\n                <td><Toggle className='pd-5' checked={setting('add_reports_to_works_email')} onChange={(e) => props.changeSetting(e, 'add_reports_to_works_email')} /></td>\n                <td><Toggle className='pd-5' checked={setting('add_reports_to_works_push')} onChange={(e) => props.changeSetting(e, 'add_reports_to_works_push')} /></td>\n                <td><Toggle className='pd-5' checked={setting('add_reports_to_works_sms')} onChange={(e) => props.changeSetting(e, 'add_reports_to_works_sms')} /></td>\n              </tr>\n              <tr>\n                <td className='fs-11'>{dict.add_comments_to_works}</td>\n                <td><Toggle className='pd-5' checked={setting('add_comments_to_works_email')} onChange={(e) => props.changeSetting(e, 'add_comments_to_works_email')} /></td>\n                <td><Toggle className='pd-5' checked={setting('add_comments_to_works_push')} onChange={(e) => props.changeSetting(e, 'add_comments_to_works_push')} /></td>\n                <td><Toggle className='pd-5' checked={setting('add_comments_to_works_sms')} onChange={(e) => props.changeSetting(e, 'add_comments_to_works_sms')} /></td>\n              </tr>\n              <tr>\n                <td></td>\n                <td></td>\n                <td></td>\n                <td></td>\n              </tr>\n              <tr>\n                <td className='fs-11'>{dict.add_comments_to_reports}</td>\n                <td><Toggle className='pd-5' checked={setting('add_comments_to_reports_email')} onChange={(e) => props.changeSetting(e, 'add_comments_to_reports_email')} /></td>\n                <td><Toggle className='pd-5' checked={setting('add_comments_to_reports_push')} onChange={(e) => props.changeSetting(e, 'add_comments_to_reports_push')} /></td>\n                <td><Toggle className='pd-5' checked={setting('add_comments_to_reports_sms')} onChange={(e) => props.changeSetting(e, 'add_comments_to_reports_sms')} /></td>\n              </tr>\n              <tr>\n                <td></td>\n                <td></td>\n                <td></td>\n                <td></td>\n              </tr>\n              <tr>\n                <td className='fs-11'>{dict.add_involvement_to_todos}</td>\n                <td><Toggle className='pd-5' checked={setting('add_involvement_to_todos_email')} onChange={(e) => props.changeSetting(e, 'add_involvement_to_todos_email')} /></td>\n                <td><Toggle className='pd-5' checked={setting('add_involvement_to_todos_push')} onChange={(e) => props.changeSetting(e, 'add_involvement_to_todos_push')} /></td>\n                <td><Toggle className='pd-5' checked={setting('add_involvement_to_todos_sms')} onChange={(e) => props.changeSetting(e, 'add_involvement_to_todos_sms')} /></td>\n              </tr>\n              <tr>\n                <td className='fs-11'>{dict.remove_involvement_from_todos}</td>\n                <td><Toggle className='pd-5' checked={setting('remove_involvement_from_todos_email')} onChange={(e) => props.changeSetting(e, 'remove_involvement_from_todos_email')} /></td>\n                <td><Toggle className='pd-5' checked={setting('remove_involvement_from_todos_push')} onChange={(e) => props.changeSetting(e, 'remove_involvement_from_todos_push')} /></td>\n                <td><Toggle className='pd-5' checked={setting('remove_involvement_from_todos_sms')} onChange={(e) => props.changeSetting(e, 'remove_involvement_from_todos_sms')} /></td>\n              </tr>\n              <tr>\n                <td></td>\n                <td></td>\n                <td></td>\n                <td></td>\n              </tr>\n              <tr>\n                <td className='fs-11'>{dict.add_involvement_to_time_sheets}</td>\n                <td><Toggle className='pd-5' checked={setting('add_involvement_to_time_sheets_email')} onChange={(e) => props.changeSetting(e, 'add_involvement_to_time_sheets_email')} /></td>\n                <td><Toggle className='pd-5' checked={setting('add_involvement_to_time_sheets_push')} onChange={(e) => props.changeSetting(e, 'add_involvement_to_time_sheets_push')} /></td>\n                <td><Toggle className='pd-5' checked={setting('add_involvement_to_time_sheets_sms')} onChange={(e) => props.changeSetting(e, 'add_involvement_to_time_sheets_sms')} /></td>\n              </tr>\n              <tr>\n                <td className='fs-11'>{dict.remove_involvement_from_timesheets}</td>\n                <td><Toggle className='pd-5' checked={setting('remove_involvement_from_timesheets_email')} onChange={(e) => props.changeSetting(e, 'remove_involvement_from_timesheets_email')} /></td>\n                <td><Toggle className='pd-5' checked={setting('remove_involvement_from_timesheets_push')} onChange={(e) => props.changeSetting(e, 'remove_involvement_from_timesheets_push')} /></td>\n                <td><Toggle className='pd-5' checked={setting('remove_involvement_from_timesheets_sms')} onChange={(e) => props.changeSetting(e, 'remove_involvement_from_timesheets_sms')} /></td>\n              </tr>\n\n            </tbody>\n          </table>\n        </div>\n\n\n\n      </React.Fragment>\n    )\n  } else {\n    return (null)\n  }\n\n}\nexport default SettingForm;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  BlockTitle,\n} from 'framework7-react';\nimport { dict } from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport SettingForm from \"../../containers/settings/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\nimport { conf } from '../../conf';\n\nexport default class SettingCreate extends Component {\n  constructor() {\n    super();\n\n    this.getInstance = this.getInstance.bind(this);\n    this.changeSetting = this.changeSetting.bind(this);\n    this.loadBlockList = this.loadBlockList.bind(this);\n    this.removeBlocked = this.removeBlocked.bind(this);\n    \n\n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      setting: {},\n      title: null,\n      id: null,\n      setting: null,\n      notification_setting: null,\n      blockList: []\n    }\n  }\n\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  loadData() {\n    MyActions.getInstance('settings', 1, this.state.token);\n  }\n\n  pageAfterIn() {\n    this.loadBlockList();\n  }\n\n\n  loadBlockList() {\n    const self = this;\n    const app = self.$f7;\n    app.autocomplete.create({\n      openIn: 'popup', //open in page\n      openerEl: '#user-blocklist', //link that opens autocomplete\n      multiple: true, //allow multiple values\n      valueProperty: 'id', //object's \"value\" property name\n      textProperty: 'fullname', //object's \"text\" property name\n      searchbarDisableText: dict.cancel,\n      popupCloseLinkText: dict.close,\n      notFoundText: dict.not_found,\n      limit: 50,\n      searchbarPlaceholder: dict.search,\n      //preloader: true, //enable preloader\n      source: function (query, render) {\n        var autocomplete = this;\n        var results = [];\n        if (query.length === 0) {\n          render(results);\n          return;\n        }\n        // Show Preloader\n       // autocomplete.preloaderShow();\n        // Do Ajax request to Autocomplete data\n        app.request({\n          url: conf.server + '/profiles/search',\n          method: 'GET',\n          dataType: 'json',\n          //send \"query\" to server. Useful in case you generate response dynamically\n          data: {\n            q: query\n          },\n          success: function (item) {\n            // Find matched items\n            for (var i = 0; i < item.data.length; i++) {\n               results.push(item.data[i]);\n            }\n            // Hide Preoloader\n            //autocomplete.preloaderHide();\n            // Render items by passing array with result items\n            render(results);\n          }\n        });\n      },\n      on: {\n        change: function (value) {\n          if (value && value[value.length - 1]) {\n            self.setState({ blockList: self.state.blockList.concat({ fullname: value[value.length - 1].fullname, id: value[value.length - 1].id }) })\n            var data = {profile_id: value[value.length - 1].id }\n            MyActions.setInstance('settings/add_block', data, self.state.token)\n          }\n        },\n      },\n    });\n  }\n\n\n\n\n\n  getInstance() {\n    var setting = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (setting && klass === 'Setting') {\n      this.setState({\n        title: setting.title,\n        id: setting.id,\n        notification_setting: setting.notification_setting\n      });\n    } else {\n      this.setState({\n        notification_setting: []\n      });\n    }\n    \n  }\n\n  changeSetting(e, item) {\n    var data = { item: item }\n    if (e.target.checked) {\n      this.setState(prevState => {\n        let notification_setting = Object.assign({}, prevState.notification_setting);\n        notification_setting[item] = true;\n        return { notification_setting };\n      })\n      MyActions.setInstance('settings/add', data, this.state.token)\n    } else {\n      this.setState(prevState => {\n        let notification_setting = Object.assign({}, prevState.notification_setting);\n        notification_setting[item] = false;\n        return { notification_setting };\n      })\n      MyActions.setInstance('settings/remove', data, this.state.token);\n    }\n  }\n\n  removeBlocked(id){\n    this.setState({\n      blockList: this.state.blockList.filter(function (profile) {\n        return profile.id !== id\n      })\n    });\n    var data = {profile_id: id }\n    MyActions.setInstance('settings/remove_block', data, this.state.token)\n  }\n\n\n\n\n  render() {\n    const { notification_setting, title, blockList } = this.state;\n    return (\n      <Page onPageAfterIn={this.pageAfterIn.bind(this)}>\n        <Navbar title={dict.work_form} backLink={dict.back} />\n        <BlockTitle>{dict.work_form}</BlockTitle>\n        <SettingForm\n          notification_setting={notification_setting}\n          title={title} changeSetting={this.changeSetting} blockList={blockList}\n          submit={this.submit} editing={true} handleChange={this.handleChangeValue} \n          removeBlocked={this.removeBlocked}\n          />\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { Link, List, CardHeader, ListInput, CardContent, CardFooter, Button, Page, Card, Navbar, Icon } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport crypto from 'crypto-js';\n\nconst LoginForm = (props) => {\n  return (\n    <Page>\n      <Navbar title={dict.sign_up} >\n        <Link panelOpen=\"right\">\n          <Icon f7=\"bars\"></Icon>\n        </Link>\n      </Navbar>\n      <Card>\n        <CardHeader>{dict.login}</CardHeader>\n        <CardContent className='mh-auto'>\n          <List >\n            <ListInput\n              label={dict.email}\n              type=\"text\"\n              autofocus={true}\n              placeholder={dict.enter_your_email}\n              value={props.email}\n              onInput={(e) => {\n                props.handleChange({ email: e.target.value })\n              }}\n            />\n            {/*<ListInput\n              label={dict.password}\n              type=\"password\"\n              placeholder={dict.enter_your_password}\n              value={props.password}\n              onInput={(e) => {\n                props.handleChange({ password: e.target.value })\n              }}\n            />*/}\n          </List>\n        </CardContent>\n        <CardFooter>\n          <Link href=\"/sign_up/\" animate={false} ignoreCache={true}>{dict.you_can_sign_up} </Link>\n          <Button fill className='fs-11 external f-color-black bg-teal' href=\"https://auth.ut.ac.ir:8443/cas/login?service=https%3A%2F%2Ftavan.ut.ac.ir%2Fusers%2Fservice\"  animate={false} ignoreCache={true}>{dict.cas} </Button>\n          <Link className=\"btn-notice\"></Link>\n          <Button className=\"col btn\" fill onClick={props.submit}>{dict.login}</Button>\n        </CardFooter>\n      </Card>\n    </Page>\n  )\n}\nexport default LoginForm;\n","import React from 'react';\nimport {\n  Page,\n  Navbar,\n  NavLeft,\n  NavTitle,\n  NavRight,\n  Link,\n  Toolbar,\n  Block,\n  BlockTitle,\n  List,\n  ListItem,\n  Row,\n  Col,\n  Button, Icon, Fab,Searchbar, Subnavbar, LoginScreenTitle, ListInput, ListButton, BlockFooter\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport LoginForm from \"../../containers/users/Login\"\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\nexport default class extends React.Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      email: '',\n      password: '',\n    };\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n  }\n  componentDidMount(){\n    if(this.$f7route.params['token']) {\n      MyActions.setInstance('users/validate_token', {}, this.$f7route.params['token']);\n    }\n    if(this.state.token && this.state.token.length > 10){\n      MyActions.setInstance('users/validate_token', {}, this.state.token);\n    }\n  }\n\n  submit(){\n    var data = {email: this.state.email, password: this.state.password}\n    MyActions.setInstance('users/login', data);\n  }\n\n  setInstance(){\n    var klass = ModelStore.getKlass()\n    if (klass === 'Login') {\n      this.$f7router.navigate('/verification/'+this.state.email);\n    }\n    if (klass === 'Validate') {\n      this.$f7router.navigate('/tasks/');\n      window.location.reload()\n    }\n    console.log(klass)\n  }\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  render() {\n    const {username, password} = this.state;\n    return (\n      <LoginForm submit={this.submit} handleChange={this.handleChangeValue}/>\n    )\n  }\n\n}\n","import React from 'react';\nimport {\n  Page,\n  Navbar,\n  NavLeft,\n  NavTitle,\n  NavRight,\n  Link,\n  Toolbar,\n  Block,\n  BlockTitle,\n  List,\n  ListItem,\n  Row,\n  Col,\n  Button, Icon, Fab,Searchbar, Subnavbar, LoginScreenTitle, ListInput, ListButton, BlockFooter\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport LoginForm from \"../../containers/users/Login\"\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\nexport default class extends React.Component {\n  constructor() {\n    super();\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n\n    this.state = {\n      email: '',\n      password: '',\n    };\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n  }\n  componentDidMount(){\n    MyActions.setInstance('users/validate_token', {}, this.$f7route.params['token']);\n  }\n\n  setInstance() {\n    var user = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (klass === 'Validate') {\n      window.localStorage.setItem('token', user.token);\n      this.$f7router.navigate('/tasks/');\n      window.location.reload()\n    } else {\n      this.$f7router.navigate('/login_error/');\n      window.location.reload()\n    }\n  }\n\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  render() {\n    const {username, password} = this.state;\n    return (\n      <LoginForm submit={this.submit} handleChange={this.handleChangeValue}/>\n    )\n  }\n\n}\n","import React from \"react\";\nimport { Link, List, ListItem, ListInput, Navbar, Icon, Button, Page, LoginScreenTitle, ListButton, CardFooter, Card, CardHeader, CardContent } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport crypto from 'crypto-js';\n\nconst SignUpForm = (props) => {\n  return (\n    <Page>\n      <Navbar title={dict.sign_up} >\n        <Link panelOpen=\"right\">\n          <Icon f7=\"bars\"></Icon>\n        </Link>\n      </Navbar>\n      <Card>\n        <CardHeader>{dict.sign_up}</CardHeader>\n        <CardContent>\n          <List >\n            <ListInput\n              label={dict.firstname + ' *'}\n              placeholder={dict.enter_your_name}\n              type=\"text\"\n              name={crypto.lib.WordArray.random(32)}\n              onInput={(e) => {\n                props.handleChange({ name: e.target.value })\n              }}\n            />\n\n            <ListInput\n              label={dict.surename + ' *'}\n              placeholder={dict.enter_your_surename}\n              type=\"text\"\n              name={crypto.lib.WordArray.random(32)}\n              onInput={(e) => {\n                props.handleChange({ surename: e.target.value })\n              }}\n            />\n\n\n            <ListInput\n              label={' * ' + dict.email}\n              type=\"email\"\n              validate\n              placeholder={dict.enter_your_email}\n              className='ltr'\n              value={props.email}\n              onInput={(e) => {\n                props.handleChange({ email: e.target.value })\n              }}\n            />\n          {/*\n            <ListInput\n              label={dict.password + ' *'}\n              type=\"password\"\n              placeholder={dict.enter_your_password}\n              autocomplete='new-password'\n              name={crypto.lib.WordArray.random(32)}\n              value={props.password}\n              onInput={(e) => {\n                props.handleChange({ password: e.target.value })\n              }}\n            />\n            <ListInput\n              label={dict.password_confirmation + ' *'}\n              type=\"password\"\n              autocomplete='off'\n              placeholder={dict.enter_your_password_confirmation}\n              value={props.password}\n              onInput={(e) => {\n                props.handleChange({ password_confirmation: e.target.value })\n              }}\n            />*/}\n          </List>\n        </CardContent>\n        <CardFooter>\n          <Link href=\"/login/\">{dict.if_registered}{'\\u00A0'}{dict.you_can_login} </Link>\n          <Link className=\"btn-notice\"></Link>\n          <Button className=\"col btn\" fill onClick={props.submit}>{dict.sign_up}</Button>\n        </CardFooter>\n      </Card>\n    </Page>\n  )\n}\nexport default SignUpForm;\n","import React from 'react';\nimport {\n  Page,\n  Navbar,\n  NavLeft,\n  NavTitle,\n  NavRight,\n  Link,\n  Toolbar,\n  Block,\n  BlockTitle,\n  List,\n  ListItem,\n  Row,\n  Col,\n  Button, Icon, Fab, Searchbar, Subnavbar, LoginScreenTitle, ListInput, ListButton, BlockFooter\n} from 'framework7-react';\nimport { dict } from '../../Dict';\nimport SignUpForm from \"../../containers/users/SignUp\"\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\nexport default class extends React.Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n\n    this.state = {\n      email: '',\n      name: '',\n      surename: '',\n    };\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n  }\n\n  submit() {\n    this.$$('.btn').hide();\n    this.$$('.btn-notice').text(dict.submitting);\n    var data = { \n      email: this.state.email,\n       name: this.state.name, \n       surename: this.state.surename }\n    if (\n      (this.state.email && this.state.email.length > 0) &&\n      (this.state.name && this.state.name.length > 0) &&\n      (this.state.surename && this.state.surename.length > 0) \n      ) {\n      MyActions.setInstance('users/sign_up', data);\n    } else {\n      const self = this;\n      self.$f7.dialog.alert(dict.incomplete_data, dict.alert);\n    }\n  }\n\n  setInstance() {\n    var klass = ModelStore.getKlass()\n    if (klass === 'SignUp') {\n      this.$$('.btn').show();\n      this.$f7router.navigate('/verification/'+this.state.email);\n    }\n  }\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n    console.log(obj)\n  }\n\n  render() {\n    const { username, password } = this.state;\n    return (\n      <SignUpForm submit={this.submit} handleChange={this.handleChangeValue} />\n    )\n  }\n\n}\n","import React from \"react\";\nimport { Link, List, CardHeader, ListInput, CardContent, CardFooter, Button, Page, Card, Navbar, Icon } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport crypto from 'crypto-js';\n\nconst LoginForm = (props) => {\n  return (\n    <Page>\n      <Navbar title={dict.verification} >\n        <Link panelOpen=\"right\">\n          <Icon f7=\"bars\"></Icon>\n        </Link>\n      </Navbar>\n      <Card>\n        <CardHeader>{dict.login}</CardHeader>\n        <CardContent >\n          <List >\n          <ListInput\n              label={dict.email}\n              type=\"text\"\n              autofocus={true}\n              placeholder={dict.enter_your_email}\n              value={props.email}\n              onInput={(e) => {\n                props.handleChange({ email: e.target.value })\n              }}\n            />\n            <ListInput\n              label={dict.verification_code}\n              type=\"text\"\n              placeholder={dict.enter_verification_code}\n              onInput={(e) => {\n                props.handleChange({ verificationCode: e.target.value })\n              }}\n            />\n          </List>\n        </CardContent>\n        <CardFooter>\n          <Link href=\"/sign_up/\" animate={false} ignoreCache={true}>{dict.you_can_sign_up} </Link>\n          <Link className=\"btn-notice\"></Link>\n          <Button className=\"col btn\" fill onClick={props.submit}>{dict.login}</Button>\n        </CardFooter>\n      </Card>\n    </Page>\n  )\n}\nexport default LoginForm;\n","import React from 'react';\nimport {\n  Page,\n  Navbar,\n  NavLeft,\n  NavTitle,\n  NavRight,\n  Link,\n  Toolbar,\n  Block,\n  BlockTitle,\n  List,\n  ListItem,\n  Row,\n  Col,\n  Button, Icon, Fab,Searchbar, Subnavbar, LoginScreenTitle, ListInput, ListButton, BlockFooter\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport VerificationForm from \"../../containers/users/Verification\"\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\nexport default class extends React.Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n\n    this.state = {\n      verificationCode: '',\n      email: '',\n    };\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n  }\n\n  componentDidMount(){\n    this.setState({email: this.$f7route.params['email']})\n  }\n\n  submit(){\n    var data = {verification_code: this.state.verificationCode}\n    MyActions.setInstance('users/verify', data);\n  }\n\n  setInstance(){\n    var user = ModelStore.getIntance();\n    var klass = ModelStore.getKlass()\n    if (user && klass == 'Verify'){\n      window.localStorage.setItem('token', user.token);\n      this.$f7router.navigate('/tasks/');\n      window.location.reload()\n    }\n  }\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  render() {\n    const {username, email} = this.state;\n    return (\n      <VerificationForm submit={this.submit} email={email} handleChange={this.handleChangeValue}/>\n    )\n  }\n\n}\n","import React from \"react\";\nimport { List, ListItem, Link, Card, CardHeader, CardContent, CardFooter } from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\n\nconst NotificationList = (props) => {\n  if (props.notifications && props.notifications.length > 0) {\n    function profileLink(profile) {\n      return (<Link href='/profiles/'>{profile.fullname}</Link>)\n    }\n\n    function colorClass(notification) {\n      if (!notification.seen) {\n        return 'bg-blonde'\n      }\n    }\n    return (\n      <Card>\n        <CardHeader></CardHeader>\n        <CardContent>\n          <List mediaList>\n            {props.notifications.map((notification) =>\n              <ListItem\n                className={'fs-11 ' + colorClass(notification)}\n                key={crypto.lib.WordArray.random(32)}\n                link={'/' + notification.target_type + '/' + notification.target_id}\n                title={profileLink(notification.profile)}\n                text={notification.notification_text.title}\n              >\n                <img slot=\"media\" src={notification.profile.avatar} width=\"32\" height=\"32\" />\n              </ListItem>\n            )}\n          </List>\n        </CardContent>\n        <CardFooter></CardFooter>\n      </Card>\n    )\n  } else {\n    return (<ul></ul>)\n  }\n}\nexport default NotificationList;\n","import React from \"react\";\nimport { Page, Navbar, Subnavbar, Searchbar, BlockTitle, Link, Fab, Icon, Toolbar, Tabs, Tab, Block } from 'framework7-react';\nimport NotificationList from \"./list\"\nimport { dict } from '../../Dict';\n\nconst NotificationIndex = (props) => {\n  return (\n    <Page>\n      <Navbar title={dict.notifications} >\n        <Link panelOpen=\"right\">\n          <Icon f7=\"bars\"></Icon>\n        </Link>\n      </Navbar>\n\n      <NotificationList notifications={props.notifications} loadMore={props.loadMore} />\n\n    </Page>\n  )\n}\nexport default NotificationIndex;\n","import HomePage from './components/home/index.jsx';\nimport NotFoundPage from './containers/layouts/NotFoundPage';\nimport PanelRightPage from './containers/layouts/PanelRightPage';\n\n\n\nimport RoleShow from './components/roles/show';\nimport RoleIndex from './components/roles/index';\nimport RoleCreate from './components/roles/create';\nimport RoleUpdate from './components/roles/update';\n\n\nimport TagShow from './components/tags/show';\nimport TagIndex from './components/tags/index';\nimport TagCreate from './components/tags/create';\nimport TagUpdate from './components/tags/update';\n\nimport StatusShow from './components/statuses/show';\nimport StatusIndex from './components/statuses/index';\nimport StatusCreate from './components/statuses/create';\nimport StatusUpdate from './components/statuses/update';\n\nimport TaskShow from './components/tasks/show';\nimport TaskIndex from './components/tasks/index';\nimport TaskCreate from './components/tasks/create';\nimport TaskUpdate from './components/tasks/update';\n\nimport WorkShow from './components/works/show';\nimport WorkIndex from './components/works/index';\nimport WorkCreate from './components/works/create';\nimport WorkUpdate from './components/works/update';\n\nimport TodoCreate from './components/todos/create';\nimport TodoUpdate from './components/todos/update';\n\nimport TimeSheetShow from './components/time_sheets/show';\nimport TimeSheetIndex from './components/time_sheets/index';\nimport TimeSheetCreate from './components/time_sheets/create';\nimport TimeSheetUpdate from './components/time_sheets/update';\n\n\nimport ProfileShow from './components/profiles/show';\nimport ProfileIndex from './components/profiles/index';\nimport ProfileCreate from './components/profiles/create';\nimport ProfileUpdate from './components/profiles/update';\n\nimport ReportShow from './components/reports/show';\nimport ReportIndex from './components/reports/index';\nimport ReportCreate from './components/reports/create';\nimport ReportUpdate from './components/reports/update';\n\nimport GroupShow from './components/groups/show';\nimport GroupIndex from './components/groups/index';\nimport GroupCreate from './components/groups/create';\nimport GroupUpdate from './components/groups/update';\n\nimport SettingUpdate from './components/settings/update';\n\nimport Login from './components/users/Login';\nimport LoginJwt from './components/users/LoginJwt';\nimport SignUp from './components/users/SignUp';\nimport Verification from './components/users/Verification';\nimport NotificationIndex from './components/notifications/index';\n\n\nexport default [\n  {\n    path: '/',\n    component: HomePage,\n  },\n  {\n    path: '/login/',\n    component: Login,\n  },\n  {\n    path: '/sign_up/',\n    component: SignUp,\n  },\n  {\n    path: '/verification/:email',\n    component: Verification,\n  },\n  {\n    path: '/login_jwt/:token',\n    component: LoginJwt,\n  },\n  {\n    path: '/panel-right/',\n    component: PanelRightPage,\n  },\n\n  {\n    path: '/notifications/',\n    component: NotificationIndex,\n  },\n\n\n  {\n    path: '/roles/',\n    component: RoleIndex,\n  },\n  {\n    path: '/roles/:roleId/edit',\n    component: RoleUpdate,\n  },\n  {\n    path: '/roles/new',\n    component: RoleCreate,\n  },\n  {\n    path: '/roles/:roleId',\n    component: RoleShow,\n  },\n\n  {\n    path: '/settings/',\n    component: SettingUpdate,\n  },\n\n  {\n    path: '/groups/',\n    component: GroupIndex,\n  },\n  {\n    path: '/groups/:groupId/edit',\n    component: GroupUpdate,\n  },\n  {\n    path: '/groups/new',\n    component: GroupCreate,\n  },\n  {\n    path: '/groups/:groupId',\n    component: GroupShow,\n  },\n\n\n  {\n    path: '/statuses/',\n    component: StatusIndex,\n  },\n  {\n    path: '/statuses/:statusId/edit',\n    component: StatusUpdate,\n  },\n  {\n    path: '/statuses/new',\n    component: StatusCreate,\n  },\n  {\n    path: '/statuses/:statusId',\n    component: StatusShow,\n  },\n\n\n  {\n    path: '/tasks/',\n    component: TaskIndex,\n  },\n  {\n    path: '/tasks/:taskId/edit',\n    component: TaskUpdate,\n  },\n  {\n    path: '/tasks/new',\n    component: TaskCreate,\n  },\n  {\n    path: '/tasks/:taskId',\n    component: TaskShow,\n  },\n\n\n  {\n    path: '/tags/',\n    component: TagIndex,\n  },\n  {\n    path: '/tags/:tagId/edit',\n    component: TagUpdate,\n  },\n  {\n    path: '/tags/new',\n    component: TagCreate,\n  },\n  {\n    path: '/tags/:tagId',\n    component: TagShow,\n  },\n\n\n\n  {\n    path: '/time_sheets/',\n    component: TimeSheetIndex,\n  },\n  {\n    path: '/time_sheets/:timeSheetId/edit',\n    component: TimeSheetUpdate,\n  },\n  {\n    path: '/time_sheets/new',\n    component: TimeSheetCreate,\n  },\n  {\n    path: '/time_sheets/:timeSheetId',\n    component: TimeSheetShow,\n  },\n\n\n  {\n    path: '/reports/',\n    component: ReportIndex,\n  },\n  {\n    path: '/reports/:reportId/edit',\n    component: ReportUpdate,\n  },\n  {\n    path: '/reports/new/:callerType/:callerId',\n    component: ReportCreate,\n  },\n  {\n    path: '/reports/:reportId',\n    component: ReportShow,\n  },\n\n  {\n    path: '/works/',\n    component: WorkIndex,\n  },\n  {\n    path: '/works/:workId/edit',\n    component: WorkUpdate,\n  },\n  {\n    path: '/works/new/:taskId',\n    component: WorkCreate,\n  },\n  {\n    path: '/works/:workId',\n    component: WorkShow,\n  },\n\n  {\n    path: '/todos/:todoId/edit',\n    component: TodoUpdate,\n  },\n  {\n    path: '/todos/new/:workId',\n    component: TodoCreate,\n  },\n\n  {\n    path: '/profiles/',\n    component: ProfileIndex,\n  },\n  {\n    path: '/profiles/:profileId/edit',\n    component: ProfileUpdate,\n  },\n  {\n    path: '/profiles/new',\n    component: ProfileCreate,\n  },\n  {\n    path: '/profiles/:profileId',\n    component: ProfileShow,\n  },\n  {\n    path: '(.*)',\n    component: NotFoundPage,\n  },\n];\n","import React from \"react\"\nimport { Page, Fab, Icon } from 'framework7-react';\nimport ModelStore from \"../../stores/ModelStore\";\nimport NotificationIndex from \"../../containers/notifications/index\"\nimport * as MyActions from \"../../actions/MyActions\";\nimport { loggedIn } from \"../../components/users/loggedIn.js\"\n\n\nexport default class Notification extends React.Component {\n  constructor() {\n    super();\n    this.getList = this.getList.bind(this);\n    this.loggedIn = loggedIn.bind(this);\n    this.interaction = this.interaction.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.search = this.search.bind(this);\n    this.loadMore = this.loadMore.bind(this);\n\n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      notifications: [],\n      query: null,\n      page: 1\n    }\n  }\n  componentWillMount() {\n    ModelStore.on(\"got_list\", this.getList);\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_list\", this.getList);\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n  }\n\n  componentDidMount() {\n\n    this.loggedIn();\n    this.loadData();\n  }\n\n  loadData() {\n    MyActions.getList('notifications', this.state.page, {}, this.state.token);\n  }\n\n  search(obj) {\n    this.setState({ notifications: [], page: 1 });\n    this.setState(obj, () => {\n      MyActions.getList('notifications/search', this.state.page, { q: this.state.query });\n    });\n\n  }\n\n  loadMore() {\n    if (this.state.query && this.state.query.length > 0) {\n      this.setState({ page: this.state.page + 1 }, () => {\n        MyActions.getList('notifications/search', this.state.page, {q: this.state.query }, this.state.token);\n      });\n    } else {\n      this.setState({ page: this.state.page + 1 }, () => {\n        MyActions.getList('notifications', this.state.page, {}, this.state.token);\n      });\n    }\n  }\n\n\n\n  setInstance() {\n    var notification = ModelStore.getIntance()\n    if (notification) {\n      this.setState({ notifications: this.state.notifications.map(el => (el.id === notification.id ? Object.assign({}, el, notification) : el)) });\n    }\n  }\n\n  getList() {\n    var notifications = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    if (notifications.length > 0 && klass === 'Notification') {\n      this.setState({\n        notifications: this.state.notifications.concat(notifications),\n      });\n    }\n    var data = {}\n    MyActions.setInstance('notifications', data, this.state.token);\n  }\n\n  interaction(interaction_type, interactionable_id, interactionable_type, source_type = null, source_id = null) {\n    var data = { interaction_type: interaction_type, interactionable_id: interactionable_id, interactionable_type: interactionable_type, source_type: source_type, source_id: source_id }\n    MyActions.setInstance('interactions', data, this.state.token);\n  }\n\n  render() {\n    const { notifications } = this.state;\n    return (<NotificationIndex interaction={this.interaction} loadMore={this.loadMore} notifications={notifications} search={this.search} />)\n  }\n}\n","import React from 'react';\nimport { Page, Navbar, Block } from 'framework7-react';\n\nexport default () => (\n  <Page>\n    <Navbar title=\"Not found\" backLink=\"Back\" />\n    <Block strong>\n      <p>Sorry</p>\n      <p>Requested content not found.</p>\n    </Block>\n  </Page>\n);\n","import React, { Component } from 'react';\nimport {\n  App,\n  Panel,\n  View,\n  Statusbar,\n} from 'framework7-react';\nimport ModelStore from \"../stores/ModelStore\";\nimport * as MyActions from \"../actions/MyActions\";\nimport { messaging } from \"../init-fcm.js\";\n\n\nimport routes from '../routes';\n\nexport default class extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n    }\n  }\n  async componentDidMount() {\n    const self = this;      \n    const app = self.$f7;\n\n    if (messaging) {\n      messaging.requestPermission()\n        .then(async function () {\n          const token = await messaging.getToken();\n          var data = { token: token }\n          if (self.state.token && self.state.token.length > 10) {\n            MyActions.setInstance('devices', data, self.state.token);\n          }\n        })\n        .catch(function (err) {\n          console.log(\"Unable to get permission to notify.\", err);\n        });\n    }\n    navigator.serviceWorker.addEventListener(\"message\", (message) => {\n\n      app.notification.create({\n        icon: '',\n\n        title: message.data.firebaseMessaging.payload.notification.title,\n        titleRightText: '',\n        cssClass: 'notification',\n        subtitle: message.data.firebaseMessaging.payload.notification.body,\n        closeTimeout: 5000,\n      }).open();\n    });\n\n\n  }\n  // Framework7 parameters here\n\n  render() {\n    const f7params = {\n      id: 'io.framework7.testapp', // App bundle ID\n      name: 'Framework7', // App name\n      theme: 'aurora', // Automatic theme detection\n      panel: {\n        rightBreakpoint: 960,\n      },\n      view: {\n        //ignoreCache: true,\n        //reloadCurrent: true\n      },\n      // App routes\n      routes,\n    };\n\n    const server = React.createContext('http://localhost:3001/v1/');\n    return (\n      <App params={f7params}>\n        {/* Statusbar */}\n        <Statusbar />\n\n        {/* Left Panel */}\n        <Panel left cover themeDark>\n          <View url=\"/panel-left/\" />\n        </Panel>\n\n        {/* Right Panel */}\n        <Panel right reveal themeDark>\n          <View url=\"/panel-right/\" />\n        </Panel>\n\n        {/* Main View */}\n        <View id=\"main-view\" url=\"/app\" pushState={true} main className=\"safe-areas\" />\n\n      </App>\n    );\n  }\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// Import Framework7\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\n// Import Framework7-React plugin\nimport Framework7React from 'framework7-react';\n\n// Import main App component\nimport App from './components/App.jsx';\n\n// Framework7 styles\nimport 'framework7/css/framework7.bundle.rtl.min.css';\n\n// Icons\nimport './css/icons.css';\n\n// Custom app styles\nimport './css/app.css';\nimport './css/editor.css';\nimport './css/font-awesome.min.css';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\n\n\nimport * as serviceWorker from './serviceWorker';\n\nif (\"serviceWorker\" in navigator) {\n  navigator.serviceWorker\n    .register(\"./firebase-messaging-sw.js\")\n    .then(function(registration) {\n      console.log(\"Registration successful, scope is:\", registration.scope);\n    })\n    .catch(function(err) {\n      console.log(\"Service worker registration failed, error:\", err);\n    });\n}\n// Init Framework7-React plugin\nFramework7.use(Framework7React);\n\n// Mount React App\nReactDOM.render(React.createElement(App),\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}