{"version":3,"sources":["js/fa.js","dispatcher.js","stores/ModelStore.js","conf.jsx","actions/MyActions.js","init-fcm.js","Dict.jsx","containers/layouts/PanelRightPage.jsx","containers/users/options.jsx","containers/assignments/form.jsx","containers/assignments/list.jsx","containers/access_controls/form.jsx","containers/access_controls/list.jsx","containers/roles/show.jsx","components/roles/show.jsx","containers/roles/list.jsx","containers/roles/index.jsx","components/roles/index.jsx","containers/roles/form.jsx","components/roles/create.jsx","components/roles/update.jsx","containers/tags/show.jsx","components/tags/show.jsx","containers/tags/list.jsx","containers/tags/index.jsx","components/tags/index.jsx","containers/tags/form.jsx","components/tags/create.jsx","components/tags/update.jsx","containers/statuses/show.jsx","components/statuses/show.jsx","containers/statuses/list.jsx","containers/statuses/index.jsx","components/statuses/index.jsx","containers/statuses/form.jsx","components/statuses/create.jsx","components/statuses/update.jsx","containers/tasks/involvementList.jsx","containers/profiles/simpleList.jsx","containers/tasks/involvements.jsx","containers/statuses/simpleList.jsx","containers/tasks/status.jsx","containers/tasks/works.jsx","containers/tasks/reports.jsx","containers/comments/form.jsx","containers/comments/list.jsx","containers/tasks/show.jsx","components/tasks/show.jsx","containers/tasks/list.jsx","containers/tasks/workList.jsx","containers/tasks/index.jsx","components/tasks/index.jsx","containers/tasks/form.jsx","components/tasks/create.jsx","components/tasks/update.jsx","containers/works/involvementList.jsx","containers/works/involvements.jsx","containers/works/status.jsx","containers/works/reports.jsx","containers/todos/todosInvolvementList.jsx","containers/todos/form.jsx","containers/todos/list.jsx","containers/works/show.jsx","components/works/show.jsx","containers/works/list.jsx","containers/works/index.jsx","components/works/index.jsx","containers/works/form.jsx","components/works/create.jsx","components/works/update.jsx","components/todos/create.jsx","components/todos/update.jsx","containers/time_sheets/show.jsx","components/time_sheets/show.jsx","containers/time_sheets/list.jsx","containers/time_sheets/index.jsx","components/time_sheets/index.jsx","containers/time_sheets/form.jsx","components/time_sheets/create.jsx","components/time_sheets/update.jsx","containers/profiles/show.jsx","components/profiles/show.jsx","containers/profiles/list.jsx","containers/profiles/index.jsx","components/profiles/index.jsx","containers/profiles/form.jsx","components/profiles/create.jsx","components/profiles/update.jsx","containers/reports/show.jsx","components/reports/show.jsx","containers/reports/list.jsx","containers/reports/index.jsx","components/users/loggedIn.js","components/reports/index.jsx","containers/uploads/form.jsx","containers/reports/form.jsx","components/reports/uploader.js","components/reports/create.jsx","components/reports/update.jsx","containers/groups/show.jsx","components/groups/show.jsx","containers/groups/list.jsx","containers/groups/index.jsx","components/groups/index.jsx","containers/groups/form.jsx","components/groups/create.jsx","components/groups/update.jsx","containers/settings/form.jsx","components/settings/update.jsx","containers/users/Login.jsx","components/users/Login.jsx","components/users/LoginJwt.jsx","containers/users/SignUp.jsx","components/users/SignUp.jsx","containers/users/Verification.jsx","components/users/Verification.jsx","containers/notifications/list.jsx","containers/notifications/index.jsx","routes.js","containers/layouts/HomePage.jsx","components/notifications/index.jsx","containers/layouts/NotFoundPage.jsx","components/App.jsx","serviceWorker.js","index.js"],"names":["module","exports","Dispatcher","modelStore","list","multipleList","instance","klass","this","i","len","data","length","push","emit","console","log","action","type","listModel","listMultipleModel","showIntance","deleteIntance","setIntance","postFile","EventEmitter","dispatcher","register","handleActions","bind","conf","server","getList","model","page","params","token","queryString","Object","keys","map","key","join","axios","get","headers","then","response","dispatch","catch","error","fileUpload","id","file","url","formData","FormData","append","config","put","getInstance","removeInstance","setInstance","post","updateInstance","initializedFirebaseApp","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","messaging","isSupported","usePublicVapidKey","dict","PanelRightPage","logout","check_ability","state","window","localStorage","getItem","ability","setState","removeItem","location","replace","ModelStore","on","removeListener","MyActions","user","getIntance","getKlass","the_ability","a","link","icon","result","ab","title","value","ignoreCache","view","panelClose","className","Fragment","dashboard","tasks","time_sheets","reloadCurrent","notifications","user_settings","privacy","profile","onClick","settings","login","tavan","logged_in","Component","UserOptions","props","options","users","email","AssignmentForm","assignment_form","inset","smartSelect","name","onChange","e","handleChange","user_id","target","strong","tag","fill","submit","UserList","body","crypto","lib","WordArray","random","color","removeRole","ios","aurora","md","AccessControlForm","access_control_form","label","item","placeholder","onInput","abilityTitle","defaultValue","abilityValue","true","false","addAbility","AbilityList","removeAbility","access_control_list","RoleShow","role","simple-list","assignedUsers","Layout","handleChangeValue","$f7route","$$","show","hide","text","submitting","role_id","ability_title","ability_value","obj","href","position","slot","roles","backLink","back","fab","RoleList","mediaList","after","subtitle","RoleIndex","loadData","Framework7","toast","receiving","closeTimeout","React","RoleForm","defaultRole","isDefaultRole","radio","checked","NonDefault","JSON","parse","Default","disabled","editing","RoleCreate","default_role","$f7router","navigate","role_form","DocumentUpdate","TagShow","confirmed","editable","tag_id","tags","TagList","TagIndex","TagForm","isConfirmed","isConfirmedTag","confirmable","not_confirmed","confirm","TagCreate","tag_form","StatusShow","status","style","backgroundColor","the_color","status_id","statuses","StatusList","StatusIndex","StatusForm","class","aria-hidden","readonly","StatusCreate","loadPalette","self","$f7","colorPicker","create","inputEl","targetEl","targetElSetBackgroundColor","modules","openIn","hex","closed","c","onPageAfterIn","pageAfterIn","status_form","confiremd","ParticipantList","involvements","option","involvement","selected","addLink","removeProfile","remove","removeLink","data-open-in","changeRole","select","fullname","src","avatar","width","height","SimpleList","profiles","addProfile","add","Partcipants","task","coworkers","the_involvements","accordionList","accordionItem","simpleList","groups","group","addGroup","outline","search","floatingLabel","clearButton","searchProfile","query","addStatus","Statuses","add_stauts","searchStatus","Works","chip","work","deadline_alert","comment_alert","report_alert","priority","details","works","new","disableButtonText","cancel","inline","Reports","creation","t","date","Date","ODate","fromNow","reports","report","creation_date","content","CommentForm","comment_form","comment","maxlength","resizable","commentContent","CommentList","items","editLink","deleteCommentConfirm","comments","created_at","time","locale","ago","noGap","loadMore","more","TaskShow","access","segment","includes","submitComment","archived","tabletWidth","archive_note","arr","the_tags","is_public","public","private","discussions","removeTask","deleteComment","the_comments","user_access","task_id","q","profileId","profile_id","statusId","commentable_type","commentable_id","dialog","are_you_sure","alert","group_id","backLinkForce","panelOpen","f7","TaskList","alerts","header","sortChange","by_title","by_events","sort_by","sort","WorkList","TaskIndex","your_tasks","your_newest_works","order","TaskForm","isPublic","isPublicTask","select_appropriate_title","required","write_appropriate_description","chips","deleteable","removeTag","checkbox","write_archive_note","archiveNote","archive","deleteTaskConfirm","delete","deleteButton","TaskCreate","loadTags","deadline","start","startTime","deadlineTime","privateTask","app","autocomplete","openerEl","multiple","valueProperty","textProperty","searchbarDisableText","popupCloseLinkText","close","notFoundText","not_found","limit","searchbarPlaceholder","preloader","source","render","results","preloaderShow","request","method","dataType","success","indexOf","preloaderHide","change","concat","incomplete_data","filter","task_form","deleteTask","deleteInstance","defaultTask","default_task","selectedMode","InvolvementList","TodosInvolvementsList","lt","todo","check","todos","todoChecked","deleteTodoConfirm","addInvolvements","TodoForm","involvementChecked","workInvolvement","flag","workInvolvements","involvementCheck","TodoList","todo_list","WorkShow","start_date","start_date_j","deadline_date_j","removeWork","deleteTodo","the_todos","work_id","is_done","deadline_date","WorkIndex","WorkForm","privateWork","normal","high","urgent","select_a_date","start_time","select_a_time","deadline_time","deleteWorkConfirm","WorkCreate","loadCalender","loadTime","picker","rotateEffect","cols","values","split","textAlign","calendar","closeOnSelect","firstDay","weekendDays","monthNames","dayNames","dayNamesShort","work_form","deleteWork","defaultWork","default_work","TodoCreate","removeInvolvement","setInvolvements","work_involvements","TimeSheetShow","association","kind","associations","time_sheet","the_associations","a_type","sheet_date","jdate","morning_report","afternoon_report","extra_report","time_sheet_id","TimeSheetList","TimeSheetIndex","related_time_sheets","sent_to_me","mine_time_sheets","sent_by_me","getMutipleList","page_mine","page_related","p","mine","related","TimeSheetForm","removeAssociation","write_appropriate_details","morningReport","afternoonReport","extraReport","recipients","TimeSheetCreate","loadAssociation","timeSheetDate","today","weekAgo","setDate","getDate","time_sheet_form","ProfileShow","the_tasks","the_works","actuals","metas","channels","ProfileList","ProfileIndex","inner","ProfileForm","profile_info","firstname","surename","withIcon","buttonText","choose_image","onDrop","buttonClassName","imgExtension","maxFileSize","ProfileCreate","handleChangeValueFields","removeActual","submitFields","fields","pictures","picture","meta_id","metaId","fid","newState","assign","uuid","profile_form","ReportShow","draft","contentState","convertFromRaw","editorState","EditorState","createWithContent","the_work","the_task","toolbar","readOnly","attachments","attachment","filename","removeComment","selectedChannel","sheetOpened","report_id","interaction","ReportList","tooltip","substring","ReportIndex","pageContent","tabbar","bottom","tabLink","tabLinkActive","swipeable","tabActive","loggedIn","Report","el","interaction_type","interactionable_id","interactionable_type","source_type","source_id","UploadForm","getUploadParams","meta","onChangeStatus","onSubmit","files","allFiles","f","forEach","autoUpload","submitButtonDisabled","inputContent","drag_or_browse","ReportForm","new_report","localization","translations","fa","image","uploadCallback","uploadImageCallBack","previewImage","onEditorStateChange","uploadableType","Promise","resolve","reject","xhr","XMLHttpRequest","open","setRequestHeader","send","addEventListener","responseText","ReportCreate","createEmpty","enc","Base64","stringify","convertToRaw","getCurrentContent","blocks","block","trim","taskId","workId","prev","prevstate","report_form","ReportUpdate","removeAttachment","workflow_form","GroupShow","the_grouping","GroupList","GroupIndex","GroupForm","grouping","removeGrouping","groupings","GroupCreate","loadGrouping","group_form","tag_grouping","SettingForm","setting","notification_setting","form","changeSetting","if_someone_adds_you_youll_be_asked","blocked_list","blockList","removeBlocked","notification_type","mail_notification","push_notification","sms","add_involvement_to_tasks","remove_involvement_from_tasks","change_status_tasks","add_works_to_tasks","add_reports_to_tasks","add_comments_to_tasks","add_involvement_to_works","remove_involvement_from_works","change_status_works","add_todos_to_works","add_reports_to_works","add_comments_to_works","add_involvement_to_todos","remove_involvement_from_todos","add_involvement_to_time_sheets","remove_involvement_from_timesheets","SettingCreate","loadBlockList","prevState","LoginForm","sign_up","autofocus","enter_your_email","animate","you_can_sign_up","cas","password","reload","username","Login","setItem","SignUpForm","enter_your_name","enter_your_surename","validate","if_registered","you_can_login","SignUp","verification","verification_code","enter_verification_code","verificationCode","Verification","NotificationList","colorClass","notification","seen","target_type","target_id","notification_text","NotificationIndex","path","component","LoginJwt","RoleUpdate","SettingUpdate","GroupUpdate","StatusUpdate","TaskUpdate","TagUpdate","TimeSheetUpdate","WorkUpdate","TodoUpdate","ProfileUpdate","requestPermission","getToken","err","navigator","serviceWorker","message","firebaseMessaging","payload","titleRightText","cssClass","f7params","theme","panel","rightBreakpoint","routes","createContext","left","cover","themeDark","right","reveal","pushState","main","Boolean","hostname","match","registration","scope","use","Framework7React","ReactDOM","createElement","App","document","getElementById"],"mappings":"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","file":"static/js/main.dd9ed3e4.chunk.js","sourcesContent":["module.exports = {\n\n  // Generic\n  'generic.add': 'افزودن',\n  'generic.cancel': 'لغو',\n\n  // BlockType\n  'components.controls.blocktype.h1': 'H1',\n  'components.controls.blocktype.h2': 'H2',\n  'components.controls.blocktype.h3': 'H3',\n  'components.controls.blocktype.h4': 'H4',\n  'components.controls.blocktype.h5': 'H5',\n  'components.controls.blocktype.h6': 'H6',\n  'components.controls.blocktype.blockquote': 'Blockquote',\n  'components.controls.blocktype.code': 'Code',\n  'components.controls.blocktype.blocktype': 'Block Type',\n  'components.controls.blocktype.normal': 'Normal',\n\n  // Color Picker\n  'components.controls.colorpicker.colorpicker': 'Color Picker',\n  'components.controls.colorpicker.text': 'Text',\n  'components.controls.colorpicker.background': 'Highlight',\n\n  // Embedded\n  'components.controls.embedded.embedded': 'Embedded',\n  'components.controls.embedded.embeddedlink': 'Embedded Link',\n  'components.controls.embedded.enterlink': 'Enter link',\n\n  // Emoji\n  'components.controls.emoji.emoji': 'Emoji',\n\n  // FontFamily\n  'components.controls.fontfamily.fontfamily': 'Font',\n\n  // FontSize\n  'components.controls.fontsize.fontsize': 'Font Size',\n\n  // History\n  'components.controls.history.history': 'History',\n  'components.controls.history.undo': 'Undo',\n  'components.controls.history.redo': 'Redo',\n\n  // Image\n  'components.controls.image.image': 'عکس',\n  'components.controls.image.fileUpload': 'بارگذاری',\n  'components.controls.image.byURL': 'پیوند',\n  'components.controls.image.dropFileText': 'اینجا را کلیک کنید ',\n\n  // Inline\n  'components.controls.inline.bold': 'Bold',\n  'components.controls.inline.italic': 'Italic',\n  'components.controls.inline.underline': 'Underline',\n  'components.controls.inline.strikethrough': 'Strikethrough',\n  'components.controls.inline.monospace': 'Monospace',\n  'components.controls.inline.superscript': 'Superscript',\n  'components.controls.inline.subscript': 'Subscript',\n\n  // Link\n  'components.controls.link.linkTitle': 'عنوان پیوند',\n  'components.controls.link.linkTarget': 'آدرس',\n  'components.controls.link.linkTargetOption': 'در پنجره جدید باز کن',\n  'components.controls.link.link': 'پیوند',\n  'components.controls.link.unlink': 'لغو پیوند',\n\n  // List\n  'components.controls.list.list': 'List',\n  'components.controls.list.unordered': 'Unordered',\n  'components.controls.list.ordered': 'Ordered',\n  'components.controls.list.indent': 'Indent',\n  'components.controls.list.outdent': 'Outdent',\n\n  // Remove\n  'components.controls.remove.remove': 'Remove',\n\n  // TextAlign\n  'components.controls.textalign.textalign': 'Text Align',\n  'components.controls.textalign.left': 'Left',\n  'components.controls.textalign.center': 'Center',\n  'components.controls.textalign.right': 'Right',\n  'components.controls.textalign.justify': 'Justify',\n};\n","import { Dispatcher } from \"flux\";\n\nexport default new Dispatcher;\n","import { EventEmitter } from \"events\";\n\nimport dispatcher from \"../dispatcher\";\n\nclass ModelStore extends EventEmitter {\n  constructor() {\n    super()\n    this.list = [];\n    this.multipleList = [];\n    this.instance = null;\n    this.klass= null;\n  }\n\n  listModel(list){\n    this.list = [];\n    this.klass = list.klass\n    for (var i = 0, len = list.data.length; i < len; ++i) {\n      this.list.push(list.data[i]);\n      if (i === len - 1 ) {\n        this.emit(\"got_list\");\n      }\n    }\n    if(list.data.length == 0){\n      this.emit(\"got_list\");\n    }\n\n  }\n\n  listMultipleModel(list){\n    this.multipleList = list.data;\n    this.klass = list.klass\n    this.emit(\"got_multiple_list\");\n  }\n\n  showIntance(instance){\n    this.klass = instance.klass\n    this.instance = instance.data\n    this.emit(\"got_instance\");\n  }\n\n  setIntance(instance){\n    this.klass = instance.klass\n    this.instance = instance.data\n    this.emit(\"set_instance\");\n  }\n\n\n  deleteIntance(instance){\n    this.klass = instance.klass\n    this.instance = instance.data\n    this.emit(\"deleted_instance\");\n  }\n\n  postFile(instance){\n    console.log(instance)\n    this.klass = instance.klass\n    this.instance = instance.data\n    this.emit(\"file_posted\");\n  }\n\n  getIntance() {\n    return this.instance\n  }\n\n  getList(){\n    return this.list\n  }\n\n  getMutipleList(){\n    return this.multipleList\n  }\n\n  getListnKlass(){\n    return [this.list, this.klass]\n  }\n\n  getKlass(){\n    return this.klass\n  }\n\n  handleActions(action) {\n    switch(action.type) {\n      case \"LIST_MODEL_SUCCESS\": {\n        this.listModel(action.list);\n        break;\n      }\n      case \"MULTIPLE_LIST_MODEL_SUCCESS\": {\n        this.listMultipleModel(action.list);\n        break;\n      }\n      case \"GET_INSTANCE_SUCCESS\": {\n        this.showIntance(action.instance);\n        break;\n      }\n      case \"DELETE_INSTANCE_SUCCESS\": {\n        this.deleteIntance(action.instance);\n        break;\n      }\n      case \"SET_INSTANCE_SUCCESS\": {\n        this.setIntance(action.instance);\n        break;\n      }\n      case \"POST_FILE_SUCCESS\": {\n        this.postFile(action.instance);\n        break;\n      }\n\n      \n    }\n  }\n}\n\n\nconst modelStore = new ModelStore;\ndispatcher.register(modelStore.handleActions.bind(modelStore));\n\nexport default modelStore;\n","export const conf = { \n'server' : '/v1'\n};","import dispatcher from \"../dispatcher\";\nimport axios, {put} from 'axios';\nimport { conf } from '../conf';\n\nconst server= conf.server;\nconsole.log(server)\n//const server='http://localhost:3001/v1';\n//const server='/v1';\n//const server='http://95.156.255.115/api';\n\n\nexport function getList(model, page=1, params={}, token) {\n  var queryString = Object.keys(params).map(key => key + '=' + params[key]).join('&');\n  axios.get(server + '/'+ model +'?page='+page+'&'+queryString, { headers: {'Content-Type': 'application/json', 'Authorization': \"bearer \" + token } })\n  .then(function (response) {\n    dispatcher.dispatch({\n      type: \"LIST_MODEL_SUCCESS\",\n      list: response.data,\n    });\n  })\n  .catch(function (error) {\n    console.log(error);\n  });\n}\n\nexport function getMultipleList(model, page=1, params={}, token) {\n  var queryString = Object.keys(params).map(key => key + '=' + params[key]).join('&');\n  axios.get(server + '/'+ model +'?page='+page+'&'+queryString, { headers: {'Content-Type': 'application/json', 'Authorization': \"bearer \" + token } })\n  .then(function (response) {\n    dispatcher.dispatch({\n      type: \"MULTIPLE_LIST_MODEL_SUCCESS\",\n      list: response.data,\n    });\n  })\n  .catch(function (error) {\n    console.log(error);\n  });\n}\n\nexport function fileUpload(model, id , file, token){\n  const url = server + '/'+ model +'/'+id;\n  const formData = new FormData();\n  formData.append('profile[avatar]',file)\n  formData.append('profile[id]',id)\n  const config = {\n      headers: {\n          'content-type': 'multipart/form-data',\n          'Authorization': \"bearer \" + token \n      }\n  }\n  put(url, formData,config).then(function (response) {\n    dispatcher.dispatch({\n      type: \"POST_FILE_SUCCESS\",\n      instance: response.data,\n    });\n  })\n  .catch(function (error) {\n    console.log(error);\n  });\n}\n\nexport function getInstance(model, id, token) {\n  axios.get(server + '/'+ model +'/'+id, { headers: {'Content-Type': 'application/json', 'Authorization': \"bearer \" + token } })\n  .then(function (response) {\n    dispatcher.dispatch({\n      type: \"GET_INSTANCE_SUCCESS\",\n      instance: response.data,\n    });\n  })\n  .catch(function (error) {\n    console.log(error);\n  });\n}\n\nexport function removeInstance(model, params={}, token ) {\n  var queryString = Object.keys(params).map(key => key + '=' + params[key]).join('&');\n  axios.get(server + '/'+ model +'/delete?'+queryString, { headers: {'Content-Type': 'application/json', 'Authorization': \"bearer \" + token } })\n  .then(function (response) {\n    dispatcher.dispatch({\n      type: \"DELETE_INSTANCE_SUCCESS\",\n      instance: response.data,\n    });\n  })\n  .catch(function (error) {\n    console.log(error);\n  });\n}\n\nexport function setInstance(model, data, token) {\n  axios.post(server + '/'+ model +'/', data, { headers: {'Content-Type': 'application/json', 'Authorization': \"bearer \" + token } })\n  .then(function (response) {\n    dispatcher.dispatch({\n      type: \"SET_INSTANCE_SUCCESS\",\n      instance: response.data,\n    });\n  })\n  .catch(function (error) {\n    console.log(error);\n  });\n}\n\nexport function updateInstance(model, data, token) {\n  axios.put(server + '/'+ model +'/'+data.id, data, { headers: {'Content-Type': 'application/json', 'Authorization': \"bearer \" + token } })\n  .then(function (response) {\n    dispatcher.dispatch({\n      type: \"SET_INSTANCE_SUCCESS\",\n      instance: response.data,\n    });\n  })\n  .catch(function (error) {\n    console.log(error);\n  });\n}\n","import * as firebase from \"firebase/app\";\nimport \"firebase/messaging\";\nconst initializedFirebaseApp = firebase.initializeApp({\n    apiKey: \"AIzaSyAbQ1NDkKB_E_SbfgHY3w-esVWhjwj9DeE\",\n    authDomain: \"tavan-e768d.firebaseapp.com\",\n    databaseURL: \"https://tavan-e768d.firebaseio.com\",\n    projectId: \"tavan-e768d\",\n    storageBucket: \"tavan-e768d.appspot.com\",\n    messagingSenderId: \"498708095861\",\n    appId: \"1:498708095861:web:00428b1330b24e1eece93c\",\n    measurementId: \"G-55DLXZ4VZY\"\n \n});\n//const messaging = initializedFirebaseApp.messaging();\nvar messaging = null;\nif (firebase.messaging.isSupported()){\n  messaging = initializedFirebaseApp.messaging();\n  messaging.usePublicVapidKey(\n    // Project Settings => Cloud Messaging => Web Push certificates\n    \"BGtSQdySGVQOeOwFha6rSVdmtfIUo_V33Eq-RTRb5kUNLvvwM7AVGCLtChjnGlD50fudRx8D4Aw-7br71Qfefrc\"\n  );\n  \n} else {\n \n}\nexport { messaging }; ","export const dict = {\n  'home' : 'خانه',\n  'name' : 'نام و نام خانوادگی ',\n  'login' : 'ورود',\n  'username' :  'نام کاربری ',\n  'password' : 'رمز عبور ',\n  'password_confirmation': 'تکرار رمز عبور',\n  'mobile' : 'شماره موبایل ',\n  'error': 'خطا',\n  'sign_in' : 'ورود ',\n  'sign_up' : 'ثبت نام',\n  'back' : 'بازگشت',\n  'signed_up_already': 'تا کنون ثبت نام نکرده اید؟',\n  'new_advert': 'درج آگهی ',\n  'title': 'عنوان',\n  'abstract': 'چکیده',\n  'content': 'متن',\n  'submit': 'ثبت ',\n  'upload_from_gallery': 'انتخاب از گالری',\n  'welcome': 'خوش آمدید',\n  'sign_out': 'خروج',\n  'phone_number': 'شماره تلفن',\n  'telegram_channel': 'کانال تلگرام',\n  'instagram_page': 'صفحه اینستاگرام',\n  'address': 'آدرس ',\n  'email': 'ایمیل ',\n  'contact_information':'اطلاعات تماس ',\n  'search': 'جستجو ',\n  'cancel' : 'انصراف',\n  'view': 'نمایش',\n  'edit': 'ویرایش',\n  'delete': 'حذف',\n  'adverts_nes': 'عنوان، متن و شماره تلفن اجباری است',\n  'my_pins': ' نشان شده‌ها ',\n  'pin' : 'نشان کن',\n  'pinned': 'نشان شده',\n  'message_to_seller': 'ارسال پیام',\n  'messages': 'پیام ها ',\n  'send_message': 'پیام خود را بنویسید',\n  'province': 'استان',\n  'city': 'شهر',\n  'website': 'وبسایت',\n  'call': 'تماس بگیرید',\n  'ago': ' قبل',\n  'all_above': 'همه ی موارد فوق',\n  'no_result': 'موردی یافت نشد ',\n  'category': 'دسته بندی ',\n  'leg':'مسیر',\n  'date':'تاریخ',\n  'time': 'زمان',\n  'numberOfPassngers': 'تعداد مسافران ',\n  'surename': 'نام خانوادگی',\n  'fathername':'نام پدر',\n  'ssn':'کدملی',\n  'birthplace':'محل تولد',\n  'pass_no': 'شماره گذرنامه',\n  'birthdate': 'تاریخ تولد',\n  'place_of_birth': 'محل تولد',\n  'required_fields': 'فیلدهای اجباری',\n  'en_father_name': 'نام پدر لاتین',\n  'en_name': 'نام لاتین',\n  'en_surename': 'نام خانوادگی لاتین ',\n  'passport_no': 'شماره گذرنامه',\n  'final_confirm' : 'تایید نهایی ',\n  'document_form': 'فرم اسناد ',\n  'save': 'ذخیره',\n  'documents':'اسناد ',\n  'type' : 'نوع',\n  'string': 'متن کوتاه',\n  'text': 'متن بلند',\n  'select': 'گزینه',\n  'multiSelect': 'چند گزینه',\n  'table': 'جدول',\n  'date':'تاریخ',\n  'refundable': 'قابل اعاده',\n  'yes':'بله',\n  'no':'خیر',\n  'commentable':'قابل نظردهی',\n  'end_point':'نقطه پایان',\n  'start_point':'نقطه شروع',\n  'votable':'رای گیری',\n  'publishable':'قابل انتشار',\n  'field_name': 'نام فیلد',\n  'add': 'افزودن ',\n  'remove': 'حذف',\n  'auxiliary_tables': 'جداول کمکی',\n  'create_by':'ایجاد شده توسط',\n  'list': 'لیست',\n  'workflows': 'گردش کارها',\n  'auxiliary_records': 'مقادیر کمکی',\n  'basic_table': 'جدول پایه',\n  'relation_table': 'جدول رابطه',\n  'auxiliary_table_form': 'فرم جدول کمکی ' ,\n  'Basic': 'پایه',\n  'Relation': 'رابطه ',\n  'Divan': 'دیوان',\n  'workflow_form':'فرم گردش کار',\n  'submitting':'در حال ارسال ... ',\n  'settings':'تنظیمات',\n  'receiving':'در حال دریافت ...',\n  'workflow_tables': 'جداول کمکی گردش کار ',\n  'auxiliary_table': 'جدول کمکی',\n  'workflow':'گردش کار',\n  'actions' : 'عملیات',\n  'roles': 'نقش ها',\n  'divan': 'دیوان',\n  'enter_your_email': 'ایمیل خود را وارد کنید',\n  'enter_your_password': 'رمز عبور را وارد کنید ',\n  'enter_your_password_confirmation': 'رمز عبور را تکرار کنید ',\n  'profiles': 'افراد ',\n  'firstname': 'نام',\n  'if_registered': 'اگر قبلا ثبت نام کرده اید',\n  'you_can_login':'وارد شوید ',\n  'if_not_registered': 'اگر ثبت نام نکرده اید',\n  'you_can_sign_up':'ثبت نام کنید',\n  'new_assignment': 'اعطای نقش جدید',\n  'posts': 'پست ها',\n  'bookmark': 'نشان',\n  'like':'علاقه',\n  'follow':'دنبال',\n  'share':'اشتراک',\n  'social_acts':'عملگرهای اجتماعی ',\n  'channels': 'کانال ها',\n  'close': 'بستن',\n  'channel':'کانال ',\n  'details': 'شرح',\n  'Shoa': 'شعاع ',\n  'role': 'نقش',\n  'Default': 'پیش فرض',\n  'NonDefault':'غیر پیش فرض ',\n  'value': ' مقدار',\n  'true': 'مثبت',\n  'false': 'منفی',\n  'access_control_list':'لیست کنترل دسترسی',\n  'access_control_form':'فرم کنترل دسترسی',\n  'assignment_form':'فرم اعطای نقش',\n  'comment_form': 'نظر بدهید',\n  'post_form': 'فرم پست',\n  'metas':'پیش جداول',\n  'shoa': 'شعاع',\n  'form' : 'ورود اطلاعات',\n  'choose_image': 'انتخاب عکس',\n  'logout': 'خروج',\n  'more': 'بیشتر ...',\n  'social': 'اجتماعی',\n  'courses':'دروس',\n  'discussions':'گفتگو ها',\n  'exams':'آزمون ها ',\n  'public':'عمومی',\n  'private':'خصوصی ',\n  'course_type':'نوع درس',\n  'select_appropriate_title': 'عنوانی مناسب انتخاب کنید',\n  'write_appropriate_description':'شرحی از اهداف و روش ها بنویسید',\n  'description':'شرح ',\n  'drag_or_browse': 'فایل مورد نظر را اینجا بیاندازید یا کلیک کنید',\n  'attachment' : 'فایل های پیوست',\n  'tasks': 'وظایف',\n  'start_date': 'تاریخ شروع',\n  'deadline' : 'مهلت نهایی',\n  'select_a_date' : 'یک تاریخ انتخاب کنید',\n  'incomplete_data': 'همه ی موارد را تکمیل کنید',\n  'alert': 'هشدار',\n  'deadline_time': 'ساعت',\n  'start_time':'ساعت',\n  'select_a_time':'انتخاب ساعت',\n  'coworkers': 'همکاران',\n  'works': 'کارها ',\n  'dashboard':'میزکار',\n  'tavan':'توان',\n  'statuses': 'وضعیت ها',\n  'status' : 'وضعیت',\n  'add_stauts': 'تغییر وضعیت',\n  'select' : 'انتخاب',\n  'new': 'جدید',\n  'task' : 'وظیفه',\n  'attachments': 'پیوست ها',\n  'reports': 'اسناد و گزارشات',\n  'tags':'برچسب ها',\n  'new_tag': 'برچسب جدید ',\n  'recent_tasks': 'وظایف اخیر',\n  'public_tasks': 'وظایف عمومی',\n  'sort_by' : 'مرتب سازی',\n  'by_title':'عنوان',\n  'by_events':'رخداد',\n  'deadline_near': 'مهلت نهایی نزدیک',\n  'new_report': 'گزارش جدید',\n  'new_comments': 'گفتگوی جدید',\n  'Admin':'مدیر',\n  'Colleague':'همکار',\n  'Observer':'ناظر',\n  'Creator':'سازنده',\n  'verification_code':'کد احراز',\n  'enter_verification_code':  'کد احراز را وارد کنید',\n  'your_tasks':'وظایف مرتبط با شما',\n  'your_newest_works':'جدیدترین کارهای مرتبط با شما',\n  'todo_list': 'تقسیم بندی کار',\n  'todo_participants': 'افراد',\n  'new_todo_participants': 'افراد جدید',\n  'not_found': 'چیزی یافت نشد',\n  'are_you_sure': 'مطمئن هستید؟',\n  'Confirmer': 'تایید کننده',\n  'time_sheets': 'کارنما',\n  'morning_report':'گزارش پیش از ظهر',\n  'afternoon_report':'گزارش بعد از ظهر',\n  'extra_report':'گزارش اضافه کاری',\n  'write_appropriate_details':'شرحی کامل بنویسید',\n  'associations':'مرتبط با',\n  'sheet_date':'تاریخ جدول',\n  'recipients':'دریافت کنندگان',\n  'sent_by_me': 'ارسال شده ها',\n  'sent_to_me':'دریافت شده ها',\n  'priority':'لولویت',\n  'normal':'عادی',\n  'high':'فوری',\n  'urgent':'بسیار فوری',\n  'archived': 'آرشیو شده',\n  'write_archive_note' : 'متن جمع بندی به منظور آرشیو سازی بنویسید',\n  'user_groups': 'گروه بندی کاربران',\n  'user_settings': 'تنظیمات شخصی',\n  'add_involvement_to_tasks':'افزودن همکاران به وظایف',\n  'remove_involvement_from_tasks':'حذف همکاران از وظایف',\n  'change_status_tasks':'تغییر وضعیت وظایف',\n  'add_works_to_tasks':'افزودن کار به وظایف',\n  'add_reports_to_tasks':'افزودن گزارش به وظایف',\n  'add_comments_to_tasks':'افزودن نظر به وظایف',\n  'add_involvement_to_works':'افزودن همکاران به کارها',\n  'remove_involvement_from_works':'حذف همکاران از کارها',\n  'change_status_works':'تغییر وضعیت کارها',\n  'add_todos_to_works':'افزودن تقسیم کار به کارها',\n  'add_reports_to_works':'افزودن گزارش به کارها',\n  'add_comments_to_works':'افزودن نظر به کارها',\n  'add_involvement_to_todos':'افزودن همکار به تقسیم کار',\n  'remove_involvement_from_todos':'حذف همکار از تقسیم کار',\n  'add_involvement_to_time_sheets':'افزودن گیرنده به کارنما',\n  'remove_involvement_from_timesheets':'حذف گیرنده از کارنما',\n  'notification_type':'شیوه اطلاع رسانی',\n  'mail_notification':'ایمیل',\n  'push_notification':'آگاهسازی وب',\n  'sms':'پیامک',\n  'if_someone_adds_you_youll_be_asked': 'چنانچه کسی شما را به یک فعالیت بیافزاید شما باید تایید کنید.',\n  'previous_attachments':'پیوست های قبلا آپلود شده',\n  'cas': 'احراز هویت مرکزی' ,\n  'profile': 'پروفایل',\n  'groups' : 'گروهبندی همکاران',\n  'confirmed':'تایید شده',\n  'not_confirmed': 'تایید نشده',\n  'blocked_list': 'کاربران مسدود شده',\n  'notifications': 'اطلاع رسانی',\n  'privacy':'حریم خصوصی'\n}\n","import React, { Component } from 'react';\nimport { Menu, MenuItem, MenuDropdown, MenuDropdownItem, Page, Navbar, Block, BlockTitle, List, ListItem, FabButton, FabButtons, Fab, Icon } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\n\nexport default class PanelRightPage extends Component {\n  constructor() {\n    super();\n    this.logout = this.logout.bind(this);\n    this.getInstance = this.getInstance.bind(this);\n    this.check_ability = this.check_ability.bind(this);\n\n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      ability: null,\n    }\n  }\n\n  logout() {\n    this.setState({ token: null });\n    window.localStorage.removeItem('token');\n    window.location.replace('/')\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n  }\n\n  componentDidMount() {\n    if (this.state.token && this.state.token.length > 10) {\n      MyActions.getInstance('users', 'role', this.state.token);\n    }\n  }\n\n  getInstance() {\n    var user = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (user && klass === 'UserRole') {\n      console.log(user)\n      this.setState({\n        ability: user.the_ability\n      });\n    }\n\n  }\n\n  check_ability(a, link, icon) {\n    var result = []\n    if (this.state.ability) {\n      this.state.ability.map((ab) => {\n        if (ab.title === a && ab.value) {\n          result.push(\n            <ListItem link={\"/\" + link + \"/\"} ignoreCache={true} key={'panel' + link} view=\"#main-view\" panelClose>\n              <i className={\"va ml-5 fa fa-\" + icon}></i>\n              <span>{dict[link]}</span>\n            </ListItem>\n          )\n        }\n      })\n    }\n    return result\n  }\n\n  logged_in(token) {\n    if (token) {\n      return (\n        <React.Fragment>\n          <BlockTitle> <i className=\"va ml-5 fa fa-tachometer\"></i>{dict.dashboard}</BlockTitle>\n          <List className='fs-13'>\n            <ListItem link=\"/tasks/\" view=\"#main-view\" panelClose>\n              <i className=\"va ml-5 fa fa-tasks\"></i>\n              <span>{dict.tasks}</span>\n            </ListItem>\n\n            <ListItem link=\"/time_sheets/\" view=\"#main-view\" panelClose>\n              <i className=\"va ml-5 fa fa-file-excel-o\"></i>\n              <span>{dict.time_sheets}</span>\n            </ListItem>\n\n\n            <ListItem link=\"/notifications/\" ignoreCache={false} reloadCurrent={false} view=\"#main-view\" panelClose>\n              <i className=\"va ml-5 fa fa-circle-o-notch\"></i>\n              <span>{dict.notifications}</span>\n            </ListItem>\n          </List>\n\n          <BlockTitle><i className=\"va ml-5 fa fa-cogs\"></i>{dict.user_settings}</BlockTitle>\n          <List>\n            <ListItem link=\"/settings/\" ignoreCache={true} view=\"#main-view\" panelClose>\n              <i className=\"va ml-5 fa fa-user-secret\"></i>\n              <span>{dict.privacy}</span>\n            </ListItem>\n            <ListItem link=\"/profiles/\" view=\"#main-view\" panelClose>\n              <i className=\"va ml-5 fa fa-user-circle-o\"></i>\n              <span>{dict.profile}</span>\n            </ListItem>\n            <ListItem view=\"#main-view\" panelClose onClick={this.logout}>\n              <i className=\"va ml-5 fa fa-power-off\"></i>\n              <span>{dict.logout}</span>\n            </ListItem>\n          </List>\n\n\n          <BlockTitle> <i className=\"va ml-5 fa fa-cog\"></i>{dict.settings}</BlockTitle>\n          <List className='fs-13'>\n            {this.check_ability('change_role', \"roles\", \"shield\")}\n\n            {this.check_ability('change_statuses', \"statuses\", \"circle-o\")}\n\n            {this.check_ability('add_tags', \"tags\", \"tags\")}\n\n            {this.check_ability('change_groups', \"groups\", \"bullseye\")}\n          </List>\n        </React.Fragment>\n      )\n    } else {\n      return (\n        <React.Fragment>\n          <BlockTitle>{dict.user_settings}</BlockTitle>\n          <List>\n            <ListItem link=\"/login/\" title={dict.login} view=\"#main-view\" panelClose></ListItem>\n          </List>\n        </React.Fragment>\n      )\n    }\n  }\n\n  render() {\n    const { token } = this.state;\n    return (\n      <Page >\n        <Navbar title={dict.tavan} />\n        {this.logged_in(token)}\n      </Page>\n    );\n  }\n}","import React from \"react\";\nimport { List, ListItem, Button, Icon} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport crypto from 'crypto-js';\nconst UserOptions = (props) => {\n  var options = [<option value=''></option>]\n  if(props.users){\n    for (let i = 0; i < props.users.length; i++) {\n      options.push(\n        <option value={props.users[i].id}>\n          {props.users[i].email}\n        </option>\n      )\n    }\n\n  }\n  return options\n\n}\nexport default UserOptions;\n","import React from \"react\";\nimport { List, ListItem, BlockTitle, Block, Row, Button,Link } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport UserOptions from \"../users/options\";\n\nconst AssignmentForm = (props) => {\n  return (\n    <React.Fragment>\n      <BlockTitle>{dict.assignment_form}</BlockTitle>\n      <List inset>\n        <ListItem\n          title={dict.email}\n          smartSelect\n        >\n          <select name=\"content\"\n            onChange={(e) => { props.handleChange({ user_id: e.target.value }) }}>\n            <UserOptions users={props.users} />\n          </select>\n        </ListItem>\n      </List>\n      <Block strong inset>\n        <Row tag=\"p\">\n          <Link className=\"btn-notice\"></Link>\n          <Button className=\"col btn\" fill onClick={props.submit}>{dict.submit}</Button>\n        </Row>\n      </Block>\n    </React.Fragment>\n  )\n}\nexport default AssignmentForm;\n","  \nimport React from \"react\";\nimport { List, ListItem, Button, Icon} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport crypto from 'crypto-js';\nconst UserList = (props) => {\n    var body = []\n  if(props.users){\n\n    \n    for (let i = 0; i < props.users.length; i++) {\n        var td = []\n        body.push(<tr key={crypto.lib.WordArray.random(32)}>\n        <td key={crypto.lib.WordArray.random(32)}>{props.users[i].id}</td>\n        <td key={crypto.lib.WordArray.random(32)}>{props.users[i].email}</td>\n        <td className=\"checkbox-cell\" key={crypto.lib.WordArray.random(32)}>\n            <Button color='gray' onClick={() => props.removeRole(props.users[i].id)}>\n              <Icon ios=\"f7:trash\" aurora=\"f7:trash\" md=\"material:trash\"></Icon>\n            </Button>\n          </td>\n        </tr>)\n    }\n\n  return(\n    <div className=\"data-table card\">\n      <table>\n        <thead>\n          <tr>\n            <td>ID</td>\n            <td>Email</td>\n          </tr>\n        </thead>\n\n        <tbody>\n          {body}\n        </tbody>\n      </table>\n    </div>\n\n  )\n}\nelse {\n  return(null)\n}\n}\nexport default UserList;","import React from \"react\";\nimport { List, Link, ListInput, Block, Row, Button, BlockTitle } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport crypto from 'crypto-js';\nimport UserOptions from \"../users/options\";\n\nconst AccessControlForm = (props) => {\n    return (\n        <React.Fragment>\n            <BlockTitle>{dict.access_control_form}</BlockTitle>\n            <List  inset>\n                <ListInput\n                    label={dict.item}\n                    type=\"text\"\n                    placeholder='...'\n                    onInput={(e) => {\n                        props.handleChange({ abilityTitle: e.target.value })\n                    }}\n                />\n                <ListInput\n                    label={dict.value}\n                    type=\"select\"\n                    defaultValue={true}\n                    placeholder=\"Please choose...\"\n                    onChange={(e) => {\n                        props.handleChange({ abilityValue: e.target.value })\n                    }}\n                >\n                    <option value={true}>{dict.true}</option>\n                    <option value={false}>{dict.false}</option>\n                </ListInput>\n            </List>\n            <Block strong inset>\n                <Row tag=\"p\">\n                 <Link className=\"btn-notice\"></Link>\n                    <Button className=\"col btn\" fill onClick={props.addAbility}>{dict.submit}</Button>\n                </Row>\n            </Block>\n        </React.Fragment>\n    )\n}\nexport default AccessControlForm;\n","\nimport React from \"react\";\nimport { List, ListItem, Button, Icon, BlockTitle } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport crypto from 'crypto-js';\nconst AbilityList = (props) => {\n    var body = []\n    if (props.ability) {\n\n\n        for (let i = 0; i < props.ability.length; i++) {\n            var td = []\n            body.push(<tr key={crypto.lib.WordArray.random(32)}>\n                <td key={crypto.lib.WordArray.random(32)}>{props.ability[i].title}</td>\n                <td key={crypto.lib.WordArray.random(32)}>{dict[props.ability[i].value]}</td>\n                <td className=\"checkbox-cell\" key={crypto.lib.WordArray.random(32)}>\n                    <Button color='gray' onClick={() => props.removeAbility(props.ability[i].title)}>\n                        <Icon ios=\"f7:trash\" aurora=\"f7:trash\" md=\"material:trash\"></Icon>\n                    </Button>\n                </td>\n            </tr>)\n        }\n\n        return (\n            <React.Fragment>\n            <BlockTitle>{dict.access_control_list}</BlockTitle>\n            <div className=\"data-table card\">\n                <table>\n                    <thead>\n                        <tr>\n                            <td>{dict.title}</td>\n                            <td>{dict.value}</td>\n                        </tr>\n                    </thead>\n\n                    <tbody>\n                        {body}\n                    </tbody>\n                </table>\n            </div>\n            </React.Fragment>\n\n        )\n    }\n    else {\n        return (null)\n    }\n}\nexport default AbilityList;","import React from \"react\";\nimport { Page, Navbar, List, BlockTitle, ListItem, Fab, Icon,Preloader, Block} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport AssignmentForm from \"../assignments/form\";\nimport AssignmentList from \"../assignments/list\";\n\nimport AccessControlForm from \"../access_controls/form\";\nimport AccessControlList from \"../access_controls/list\";\n\nconst RoleShow = (props) => {\n  if (props.role){\n    return(\n      <React.Fragment>\n        <BlockTitle>{dict.title}</BlockTitle>\n        <List simple-list>\n          <ListItem>{props.role.title}</ListItem>\n        </List>\n\n        <AccessControlList  ability={props.ability} removeAbility={props.removeAbility}/>\n        <AccessControlForm  addAbility={props.addAbility} handleChange={props.handleChange} />\n        \n\n        <AssignmentList users={props.assignedUsers} removeRole={props.removeRole} />\n        <AssignmentForm users={props.users}  submit={props.submit} handleChange={props.handleChange}/>\n\n        \n      </React.Fragment>\n    )\n  } else {\n    return(null)\n  }\n}\nexport default RoleShow;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon, Fab\n} from 'framework7-react';\nimport { dict } from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport RoleShow from \"../../containers/roles/show\"\n\nexport default class Layout extends Component {\n  constructor() {\n    super();\n    this.getInstance = this.getInstance.bind(this);\n    this.getList = this.getList.bind(this);\n    this.submit = this.submit.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.removeRole = this.removeRole.bind(this);\n    this.addAbility = this.addAbility.bind(this);\n    this.removeAbility = this.removeAbility.bind(this);\n\n    \n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      role: null,\n      id: null,\n      users: null,\n      assignedUsers: null,\n      user_id: null,\n      abilityTitle: '',\n      abilityValue: true,\n      ability: null,\n    }\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.getInstance);\n    ModelStore.on(\"got_list\", this.getList);\n    ModelStore.on(\"deleted_instance\", this.getInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.getInstance);\n    ModelStore.removeListener(\"got_list\", this.getList);\n    ModelStore.removeListener(\"deleted_instance\", this.getInstance);\n  }\n\n  componentDidMount() {\n    MyActions.getInstance('roles', this.$f7route.params['roleId'], this.state.token);\n    MyActions.getList('users', this.state.page, {}, this.state.token);\n  }\n\n  getInstance() {\n    var role = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (role && klass === 'Role') {\n      this.setState({\n        role: role,\n        id: role.id,\n        assignedUsers: role.users,\n        ability: role.ability\n      });\n    }\n    this.$$('.btn').show();\n  }\n\n  getList() {\n    var users = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    if (users && klass === 'User') {\n      this.setState({\n        users: users,\n      });\n    }\n  }\n\n  submit() {\n    this.$$('.btn').hide();\n    this.$$('.btn-notice').text(dict.submitting);\n    var data = { role_id: this.state.id, user_id: this.state.user_id }\n    MyActions.setInstance('users/assignments', data, this.state.token);\n  }\n\n  addAbility() {\n    var data = { id: this.state.id, ability_title: this.state.abilityTitle, ability_value: this.state.abilityValue}\n    MyActions.setInstance('roles/abilities', data, this.state.token);\n  }\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  fab() {\n    if (this.state.role) {\n      return (\n        <Fab href={\"/roles/\" + this.state.role.id + \"/edit\"} target=\"#main-view\" position=\"left-bottom\" slot=\"fixed\" color=\"lime\">\n          <Icon ios=\"f7:edit\" aurora=\"f7:edit\" md=\"material:edit\"></Icon>\n          <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n        </Fab>\n      )\n    }\n  }\n\n  removeRole(user_id) {\n    MyActions.removeInstance('users/assignments', { user_id: user_id, role_id: this.state.id }, this.state.token);\n  }\n\n  removeAbility(title){\n    MyActions.removeInstance('roles/abilities', { id: this.state.id, title: title }, this.state.token);\n  }\n\n  render() {\n    const { role, users, assignedUsers, ability } = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.roles} backLink={dict.back} />\n        <BlockTitle></BlockTitle>\n        {this.fab()}\n        <RoleShow role={role} users={users} ability={ability} removeAbility={this.removeAbility} assignedUsers={assignedUsers} addAbility={this.addAbility} removeRole={this.removeRole} submit={this.submit} handleChange={this.handleChangeValue} />\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { List, ListItem} from 'framework7-react';\nimport crypto from 'crypto-js';\n\nconst RoleList = (props) => {\n\n  if (props.roles) {\n    return (\n      <List mediaList>\n        {props.roles.map((role) =>\n          <ListItem\n            key={crypto.lib.WordArray.random(32)}\n            link={\"/roles/\" + role.id}\n            ignoreCache={true}\n            title={role.title}\n            after=\"\"\n            subtitle=\"\"\n            text=\"\"\n            ></ListItem>\n        )}\n      </List>\n    )} else {\n      return (<ul></ul>)\n    }\n  }\n  export default RoleList;\n","import React from \"react\";\nimport { Page, Navbar, List, BlockTitle, ListItem, Fab, Icon,Preloader, Block} from 'framework7-react';\nimport RoleList from \"./list\"\nimport { dict} from '../../Dict';\n\nconst RoleIndex = (props) => {\n  return(\n    <Page>\n      <Navbar title={dict.roles} backLink={dict.back} >\n      </Navbar>\n      <BlockTitle>{dict.list}</BlockTitle>\n      <Fab href=\"/roles/new\" target=\"#main-view\"  position=\"left-bottom\" slot=\"fixed\" color=\"deeporange\">\n        <Icon ios=\"f7:add\" aurora=\"f7:add\" md=\"material:add\"></Icon>\n        <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n      </Fab>\n      <RoleList roles={props.roles}/>\n    </Page>\n  )\n}\nexport default RoleIndex;\n","import React from \"react\"\nimport { Page,Fab, Icon } from 'framework7-react';\nimport ModelStore from \"../../stores/ModelStore\";\nimport RoleIndex from \"../../containers/roles/index\"\nimport * as MyActions from \"../../actions/MyActions\";\nimport { dict} from '../../Dict';\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\n\nexport default class Layout extends React.Component {\n  constructor() {\n    super();\n    this.getList = this.getList.bind(this);\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      roles: null,\n    }\n  }\n  componentWillMount() {\n    ModelStore.on(\"got_list\", this.getList);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_list\", this.getList);\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  loadData(){\n    const f7: Framework7 = Framework7.instance;\n    f7.toast.show({ text: dict.receiving, closeTimeout: 2000, position: 'top'});\n    MyActions.getList('roles', this.state.page, {}, this.state.token);\n  }\n\n  getList() {\n    var roles = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    if (roles && klass === 'Role'){\n      this.setState({\n        roles: roles,\n      });\n    }\n  }\n\n  render() {\n    const {roles} = this.state;\n    return(<RoleIndex roles={roles}/>)\n  }\n}\n","import React from \"react\";\nimport { List, ListItem, ListInput, Block, Row, Button, BlockTitle,Link } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport crypto from 'crypto-js';\n\n\nconst RoleForm = (props) => {\n  if (props.defaultRole) {\n    var isDefaultRole = true;\n  } else {\n    var isDefaultRole = false\n  }\n  \n  return (\n    <React.Fragment>\n      <BlockTitle>{dict.role}</BlockTitle>\n      <List >\n        <ListInput\n          label={dict.title}\n          key='role-title'\n          type=\"text\"\n          placeholder='...'\n          defaultValue={props.role.title}\n          onInput={(e) => {\n            props.handleChange({ title: e.target.value })\n          }}\n        />\n        <ListItem radio value={false} checked={!isDefaultRole} name=\"defaultRole\" title={dict.NonDefault}\n          onChange={(e) => {\n            console.log(e)\n            props.handleChange({ defaultRole: JSON.parse(e.target.value) })\n          }}>\n        </ListItem>\n        <ListItem radio value={true} checked={isDefaultRole} name=\"defaultRole\" title={dict.Default}\n          onChange={(e) => {\n            console.log(e)\n            props.handleChange({ defaultRole: JSON.parse(e.target.value) });\n          }}>\n        </ListItem>\n      </List>\n\n      <Block strong>\n        <Row tag=\"p\">\n        <Link className=\"btn-notice\"></Link>\n          <Button className=\"col btn\" fill disabled={!props.editing} onClick={props.submit}>{dict.submit}</Button>\n        </Row>\n      </Block>\n    </React.Fragment>\n  )\n}\nexport default RoleForm;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport RoleForm from \"../../containers/roles/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\nexport default class RoleCreate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      role: {},\n      defaultRole: true,\n    }\n  }\n\n\n  componentWillMount() {\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n  }\n\n  submit(){\n    var data = {title: this.state.title, default_role: this.state.defaultRole}\n    MyActions.setInstance('roles', data, this.state.token);\n  }\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  setInstance(){\n    const self = this;\n    this.$f7router.navigate('/roles/');\n  }\n\n\n\n  render() {\n    const {role, defaultRole} = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.role_form} backLink={dict.back} />\n        <BlockTitle>{dict.role_form}</BlockTitle>\n        <RoleForm role={role} defaultRole={defaultRole} submit={this.submit} editing={true} handleChange={this.handleChangeValue}/>\n      </Page>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport RoleForm from \"../../containers/roles/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\n\nexport default class DocumentUpdate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.getInstance = this.getInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n\n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      role : {},\n      defaultRole: null,\n    }\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n\n  }\n\n\n  submit(){\n    var data = {id:this.state.id, title: this.state.title, default_role: this.state.defaultRole}\n    MyActions.updateInstance('roles', data,  this.state.token);\n  }\n  componentDidMount(){\n    this.loadData();\n  }\n\n  loadData(){\n    const f7: Framework7 = Framework7.instance;\n    f7.toast.show({ text: dict.receiving, closeTimeout: 2000, position: 'top'});\n    if (this.$f7route.params['roleId']) {\n      MyActions.getInstance('roles', this.$f7route.params['roleId'],  this.state.token);\n    }\n  }\n\n\n  getInstance(){\n    var role = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (role && klass === 'Role'){\n      this.setState({\n        title: role.title,\n        id: role.id,\n        role: role,\n        defaultRole: role.default_role\n      });\n    }\n  }\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n\n  setInstance(){\n    const self = this;\n    this.$f7router.navigate('/roles/');\n  }\n\n\n  render() {\n        const {role, defaultRole} = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.role_form} backLink={dict.back} />\n        <BlockTitle>{dict.role_form}</BlockTitle>\n        <RoleForm role={role} defaultRole={defaultRole} submit={this.submit} editing={true} handleChange={this.handleChangeValue}/>\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { Page, Navbar, List, BlockTitle, ListItem, Fab, Icon,Preloader, Block} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport AssignmentForm from \"../assignments/form\";\nimport AssignmentList from \"../assignments/list\";\n\nimport AccessControlForm from \"../access_controls/form\";\nimport AccessControlList from \"../access_controls/list\";\n\nconst TagShow = (props) => {\n  if (props.tag){\n    return(\n      <React.Fragment>\n        <BlockTitle>{dict.title}</BlockTitle>\n        <List simple-list>\n          <ListItem>{props.tag.title}</ListItem>\n        </List>\n\n        <BlockTitle>{dict.confirmed}</BlockTitle>\n        <List simple-list>\n          <ListItem>{dict[props.tag.confirmed]}</ListItem>\n        </List>\n\n        \n      </React.Fragment>\n    )\n  } else {\n    return(null)\n  }\n}\nexport default TagShow;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon, Fab\n} from 'framework7-react';\nimport { dict } from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport TagShow from \"../../containers/tags/show\"\n\nexport default class Layout extends Component {\n  constructor() {\n    super();\n    this.getInstance = this.getInstance.bind(this);\n    this.submit = this.submit.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      tag: null,\n      id: null,\n      users: null,\n      user_id: null,\n      editable: false,\n    }\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.getInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.getInstance);\n  }\n\n  componentDidMount() {\n    MyActions.getInstance('tags', this.$f7route.params['tagId'], this.state.token);\n  }\n\n  getInstance() {\n    var tag = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (tag && klass === 'Tag') {\n      this.setState({\n        tag: tag,\n        id: tag.id,\n        assignedUsers: tag.users,\n        ability: tag.ability,\n        editable: tag.editable\n      });\n    }\n    this.$$('.btn').show();\n  }\n\n\n  submit() {\n    this.$$('.btn').hide();\n    this.$$('.btn-notice').text(dict.submitting);\n    var data = { tag_id: this.state.id, user_id: this.state.user_id }\n    MyActions.setInstance('users/assignments', data, this.state.token);\n  }\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  fab() {\n    if (this.state.tag && this.state.editable) {\n      return (\n        <Fab href={\"/tags/\" + this.state.tag.id + \"/edit\"} target=\"#main-view\" position=\"left-bottom\" slot=\"fixed\" color=\"lime\">\n          <Icon ios=\"f7:edit\" aurora=\"f7:edit\" md=\"material:edit\"></Icon>\n          <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n        </Fab>\n      )\n    }\n  }\n\n\n  render() {\n    const { tag, editable} = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.tags} backLink={dict.back} />\n        <BlockTitle></BlockTitle>\n        {this.fab()}\n        <TagShow \n          tag={tag} editable={editable} \n           submit={this.submit} handleChange={this.handleChangeValue} />\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { List, ListItem} from 'framework7-react';\nimport crypto from 'crypto-js';\n\nconst TagList = (props) => {\n\n  if (props.tags) {\n    return (\n      <List mediaList>\n        {props.tags.map((tag) =>\n          <ListItem\n            key={crypto.lib.WordArray.random(32)}\n            link={\"/tags/\" + tag.id}\n            ignoreCache={true}\n            title={tag.title}\n            after=\"\"\n            subtitle=\"\"\n            text=\"\"\n            ></ListItem>\n        )}\n      </List>\n    )} else {\n      return (<ul></ul>)\n    }\n  }\n  export default TagList;\n","import React from \"react\";\nimport { Page, Navbar, List, BlockTitle, ListItem, Fab, Icon,Preloader, Block} from 'framework7-react';\nimport TagList from \"./list\"\nimport { dict} from '../../Dict';\n\nconst TagIndex = (props) => {\n  return(\n    <Page>\n      <Navbar title={dict.tags} backLink={dict.back} >\n      </Navbar>\n      <BlockTitle>{dict.list}</BlockTitle>\n      <Fab href=\"/tags/new\" target=\"#main-view\"  position=\"left-bottom\" slot=\"fixed\" color=\"deeporange\">\n        <Icon ios=\"f7:add\" aurora=\"f7:add\" md=\"material:add\"></Icon>\n        <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n      </Fab>\n      <TagList tags={props.tags}/>\n    </Page>\n  )\n}\nexport default TagIndex;\n","import React from \"react\"\nimport { Page,Fab, Icon } from 'framework7-react';\nimport ModelStore from \"../../stores/ModelStore\";\nimport TagIndex from \"../../containers/tags/index\"\nimport * as MyActions from \"../../actions/MyActions\";\nimport { dict} from '../../Dict';\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\n\nexport default class Layout extends React.Component {\n  constructor() {\n    super();\n    this.getList = this.getList.bind(this);\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      tags: null,\n    }\n  }\n  componentWillMount() {\n    ModelStore.on(\"got_list\", this.getList);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_list\", this.getList);\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  loadData(){\n    const f7: Framework7 = Framework7.instance;\n    f7.toast.show({ text: dict.receiving, closeTimeout: 2000, position: 'top'});\n    MyActions.getList('tags', this.state.page, {}, this.state.token);\n  }\n\n  getList() {\n    var tags = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    if (tags && klass === 'Tag'){\n      this.setState({\n        tags: tags,\n      });\n    }\n  }\n\n  render() {\n    const {tags} = this.state;\n    return(<TagIndex tags={tags}/>)\n  }\n}\n","import React from \"react\";\nimport { List, ListItem, ListInput, Block, Row, Button, BlockTitle, Link } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport crypto from 'crypto-js';\n\n\nconst TagForm = (props) => {\n\n  if (props.isConfirmed) {\n    var isConfirmedTag = true;\n  } else {\n    var isConfirmedTag = false\n  }\n\n  function confirm() {\n    if (props.confirmable) {\n      return (\n        <List>\n          <ListItem radio value={false} checked={!isConfirmedTag} name=\"selectedMode\" title={dict.not_confirmed}\n            onChange={(e) => {\n              props.handleChange({ isConfirmed: JSON.parse(e.target.value) });\n            }}>\n          </ListItem>\n          <ListItem radio value={true} checked={isConfirmedTag} name=\"selectedMode\" title={dict.confirmed}\n            onChange={(e) => {\n              props.handleChange({ isConfirmed: JSON.parse(e.target.value) })\n            }}>\n          </ListItem>\n        </List>\n      )\n    }\n\n  }\n  return (\n    <React.Fragment>\n      <BlockTitle>{dict.tag}</BlockTitle>\n      <List >\n        <ListInput\n          label={dict.title}\n          type=\"text\"\n          placeholder='...'\n          defaultValue={props.tag.title}\n          onInput={(e) => {\n            props.handleChange({ title: e.target.value })\n          }}\n        />\n      </List>\n      {confirm()}\n\n      <Block strong>\n        <Row tag=\"p\">\n        <Link className=\"btn-notice\"></Link>\n          <Button className=\"col btn\" fill disabled={!props.editing} onClick={props.submit}>{dict.submit}</Button>\n        </Row>\n      </Block>\n    </React.Fragment>\n  )\n}\nexport default TagForm;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport TagForm from \"../../containers/tags/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\nexport default class TagCreate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      tag: {},\n      isConfirmed: false,\n      confirmable: false,\n    }\n  }\n\n\n  componentWillMount() {\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n  }\n\n  submit(){\n    var data = {title: this.state.title, confirmed: this.state.isConfirmed}\n    MyActions.setInstance('tags', data, this.state.token);\n  }\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  setInstance(){\n    const self = this;\n    this.$f7router.navigate('/tags/');\n  }\n\n\n\n  render() {\n    const {tag, isConfirmed, confirmable} = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.tag_form} backLink={dict.back} />\n        <BlockTitle>{dict.tag_form}</BlockTitle>\n        <TagForm \n          tag={tag} submit={this.submit} editing={true} confirmable={confirmable}\n          handleChange={this.handleChangeValue} isConfirmed={isConfirmed}\n          />\n      </Page>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport TagForm from \"../../containers/tags/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\n\nexport default class DocumentUpdate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.getInstance = this.getInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n\n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      tag : {},\n      isConfirmed: false,\n      confirmable: false,\n    }\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n\n  }\n\n\n  submit(){\n    var data = {\n      id:this.state.id, title: this.state.title, \n      confirmed: this.state.isConfirmed}\n    MyActions.updateInstance('tags', data,  this.state.token);\n  }\n  componentDidMount(){\n    this.loadData();\n  }\n\n  loadData(){\n    const f7: Framework7 = Framework7.instance;\n    f7.toast.show({ text: dict.receiving, closeTimeout: 2000, position: 'top'});\n    if (this.$f7route.params['tagId']) {\n      MyActions.getInstance('tags', this.$f7route.params['tagId'],  this.state.token);\n    }\n  }\n\n\n  getInstance(){\n    var tag = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (tag && klass === 'Tag'){\n      this.setState({\n        title: tag.title,\n        id: tag.id,\n        tag: tag,\n        isConfirmed: tag.confirmed,\n        confirmable: tag.confirmable\n      });\n    }\n  }\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n\n  setInstance(){\n    const self = this;\n    this.$f7router.navigate('/tags/');\n  }\n\n\n  render() {\n        const {tag, isConfirmed, confirmable} = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.tag_form} backLink={dict.back} />\n        <BlockTitle>{dict.tag_form}</BlockTitle>\n        <TagForm \n          tag={tag} isConfirmed={isConfirmed} submit={this.submit} confirmable={confirmable}\n          editing={true} handleChange={this.handleChangeValue}/>\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { Page, Navbar, List, BlockTitle, ListItem, Fab, Icon,Preloader, Block} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport AssignmentForm from \"../assignments/form\";\nimport AssignmentList from \"../assignments/list\";\n\nimport AccessControlForm from \"../access_controls/form\";\nimport AccessControlList from \"../access_controls/list\";\n\nconst StatusShow = (props) => {\n  if (props.status){\n    return(\n      <React.Fragment>\n        <BlockTitle>{dict.title}</BlockTitle>\n        <List simple-list>\n          <ListItem>{props.status.title}</ListItem>\n        </List>\n        <BlockTitle>{dict.confirmed}</BlockTitle>\n        <List simple-list>\n          <ListItem>{dict[props.status.confirmed]}</ListItem>\n        </List>\n\n        <List simple-list>\n          <ListItem style={{backgroundColor: props.status.the_color}}>{props.status.the_color}</ListItem>\n        </List>\n\n        \n      </React.Fragment>\n    )\n  } else {\n    return(null)\n  }\n}\nexport default StatusShow;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon, Fab\n} from 'framework7-react';\nimport { dict } from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport StatusShow from \"../../containers/statuses/show\"\n\nexport default class Layout extends Component {\n  constructor() {\n    super();\n    this.getInstance = this.getInstance.bind(this);\n    this.submit = this.submit.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);    \n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      status: null,\n      id: null,\n      editable: false,\n    }\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.getInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.getInstance);\n  }\n\n  componentDidMount() {\n    MyActions.getInstance('statuses', this.$f7route.params['statusId'], this.state.token);\n  }\n\n  getInstance() {\n    var status = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (status && klass === 'Status') {\n      this.setState({\n        status: status,\n        id: status.id,\n        editable: status.editable,\n      });\n    }\n    this.$$('.btn').show();\n  }\n\n\n  submit() {\n    this.$$('.btn').hide();\n    this.$$('.btn-notice').text(dict.submitting);\n    var data = { status_id: this.state.id, user_id: this.state.user_id }\n    MyActions.setInstance('users/assignments', data, this.state.token);\n  }\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  fab() {\n    if (this.state.status && this.state.editable) {\n      return (\n        <Fab href={\"/statuses/\" + this.state.status.id + \"/edit\"} target=\"#main-view\" position=\"left-bottom\" slot=\"fixed\" color=\"lime\">\n          <Icon ios=\"f7:edit\" aurora=\"f7:edit\" md=\"material:edit\"></Icon>\n          <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n        </Fab>\n      )\n    }\n  }\n\n  render() {\n    const { status, editable } = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.statuses} backLink={dict.back} />\n        <BlockTitle></BlockTitle>\n        {this.fab()}\n        <StatusShow status={status} editable={editable} \n          submit={this.submit} handleChange={this.handleChangeValue} />\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { List, ListItem} from 'framework7-react';\nimport crypto from 'crypto-js';\n\nconst StatusList = (props) => {\n\n  if (props.statuses) {\n    return (\n      <List mediaList>\n        {props.statuses.map((status) =>\n          <ListItem\n            key={crypto.lib.WordArray.random(32)}\n            link={\"/statuses/\" + status.id}\n            ignoreCache={true}\n            title={status.title}\n            after=\"\"\n            subtitle=\"\"\n            text=\"\"\n            ></ListItem>\n        )}\n      </List>\n    )} else {\n      return (<ul></ul>)\n    }\n  }\n  export default StatusList;\n","import React from \"react\";\nimport { Page, Navbar, List, BlockTitle, ListItem, Fab, Icon,Preloader, Block} from 'framework7-react';\nimport StatusList from \"./list\"\nimport { dict} from '../../Dict';\n\nconst StatusIndex = (props) => {\n  return(\n    <Page>\n      <Navbar title={dict.statuses} backLink={dict.back} >\n      </Navbar>\n      <BlockTitle>{dict.list}</BlockTitle>\n      <Fab href=\"/statuses/new\" target=\"#main-view\"  position=\"left-bottom\" slot=\"fixed\" color=\"deeporange\">\n        <Icon ios=\"f7:add\" aurora=\"f7:add\" md=\"material:add\"></Icon>\n        <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n      </Fab>\n      <StatusList statuses={props.statuses}/>\n    </Page>\n  )\n}\nexport default StatusIndex;\n","import React from \"react\"\nimport { Page,Fab, Icon } from 'framework7-react';\nimport ModelStore from \"../../stores/ModelStore\";\nimport StatusIndex from \"../../containers/statuses/index\"\nimport * as MyActions from \"../../actions/MyActions\";\nimport { dict} from '../../Dict';\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\n\nexport default class Layout extends React.Component {\n  constructor() {\n    super();\n    this.getList = this.getList.bind(this);\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      statuses: null,\n    }\n  }\n  componentWillMount() {\n    ModelStore.on(\"got_list\", this.getList);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_list\", this.getList);\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  loadData(){\n    const f7: Framework7 = Framework7.instance;\n    f7.toast.show({ text: dict.receiving, closeTimeout: 2000, position: 'top'});\n    MyActions.getList('statuses', this.state.page, {}, this.state.token);\n  }\n\n  getList() {\n    var statuses = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    if (statuses && klass === 'Status'){\n      this.setState({\n        statuses: statuses,\n      });\n    }\n  }\n\n  render() {\n    const {statuses} = this.state;\n    return(<StatusIndex statuses={statuses}/>)\n  }\n}\n","import React from \"react\";\nimport { List, ListItem, ListInput, Block, Row, Button, BlockTitle, Link } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport crypto from 'crypto-js';\n\n\nconst StatusForm = (props) => {\n  if (props.status) {\n    if (props.isConfirmed) {\n      var isConfirmedTag = true;\n    } else {\n      var isConfirmedTag = false\n    }\n    function confirm() {\n      if (props.confirmable) {\n        return (\n          <List>\n            <ListItem radio value={false} checked={!isConfirmedTag} name=\"selectedMode\" title={dict.not_confirmed}\n              onChange={(e) => {\n                props.handleChange({ isConfirmed: JSON.parse(e.target.value) });\n              }}>\n            </ListItem>\n            <ListItem radio value={true} checked={isConfirmedTag} name=\"selectedMode\" title={dict.confirmed}\n              onChange={(e) => {\n                props.handleChange({ isConfirmed: JSON.parse(e.target.value) })\n              }}>\n            </ListItem>\n          </List>\n        )\n      }\n\n    }\n    return (\n      <React.Fragment>\n        <BlockTitle>{dict.status}</BlockTitle>\n        <List >\n          <ListInput\n            label={dict.title}\n            type=\"text\"\n            placeholder='...'\n            defaultValue={props.title}\n            onInput={(e) => {\n              props.handleChange({ title: e.target.value })\n            }}\n          />\n        </List>\n\n        {confirm()}\n\n        <div className=\"list \">\n          <ul>\n            <li>\n              <div className=\"item-content item-input\">\n                <div className=\"item-media\">\n                  <i class=\"fa fa-2x fa-circle-o demo-list-icon\" aria-hidden=\"true\" id=\"demo-color-picker-spectrum-value\"></i>\n                </div>\n                <div className=\"item-inner\">\n                  <div className=\"item-input-wrap\">\n                    <input type=\"text\" placeholder=\"Color\" value={props.color} readonly=\"readonly\" id=\"demo-color-picker-spectrum\" />\n                  </div>\n                </div>\n              </div>\n            </li>\n          </ul>\n        </div>\n\n        <Block strong>\n          <Row tag=\"p\">\n          <Link className=\"btn-notice\"></Link>\n            <Button className=\"col btn\" fill disabled={!props.editing} onClick={props.submit}>{dict.submit}</Button>\n          </Row>\n        </Block>\n      </React.Fragment>\n    )\n  } else {\n    return (null)\n  }\n\n}\nexport default StatusForm;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport StatusForm from \"../../containers/statuses/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\nexport default class StatusCreate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      status: {},\n      title: '',\n      color: '',\n      isConfirmed: false,\n    }\n  }\n\n\n  componentWillMount() {\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n  }\n\n\n  pageAfterIn() {\n    this.loadPalette();\n  }\n\n  loadPalette() {\n    const self = this;\n    const app = self.$f7;\n    app.colorPicker.create({\n      inputEl: '#demo-color-picker-spectrum',\n      targetEl: '#demo-color-picker-spectrum-value',\n      targetElSetBackgroundColor: true,\n      modules: ['sb-spectrum', 'hue-slider'],\n      openIn: 'popover',\n      value: {\n        hex: '#ff0000',\n      },\n      on: {\n        closed: function (c) {\n          self.setState({ color: c.value.hex });\n        }\n      }\n    });\n  }\n\n  submit(){\n    var data = {title: this.state.title, color: this.state.color, confirmed: this.state.isConfirmed}\n    MyActions.setInstance('statuses', data, this.state.token);\n  }\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  setInstance(){\n    const self = this;\n    this.$f7router.navigate('/statuses/');\n  }\n\n\n\n  render() {\n    const {status, isConfirmed} = this.state;\n    return (\n      <Page onPageAfterIn={this.pageAfterIn.bind(this)}>\n        <Navbar title={dict.status_form} backLink={dict.back} />\n        <BlockTitle>{dict.status_form}</BlockTitle>\n        <StatusForm \n        status={status} submit={this.submit} isConfirmed={isConfirmed}\n        editing={true} handleChange={this.handleChangeValue}\n        />\n      </Page>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport StatusForm from \"../../containers/statuses/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\n\nexport default class DocumentUpdate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.getInstance = this.getInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.loadPalette = this.loadPalette.bind(this);\n\n    \n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      status : {},\n      title: null,\n      id: '',\n      color: '#fff',\n      isConfirmed: false,\n      confirmable: false,\n    }\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  pageAfterIn() {\n    this.loadPalette();\n  }\n\n  loadPalette() {\n    \n    const self = this;\n    const app = self.$f7;\n\n    app.colorPicker.create({\n      inputEl: '#demo-color-picker-spectrum',\n      targetEl: '#demo-color-picker-spectrum-value',\n      targetElSetBackgroundColor: true,\n      modules: ['sb-spectrum', 'hue-slider'],\n      openIn: 'popover',\n      value: {\n        hex: this.state.color,\n      },\n      on: {\n        closed: function (c) {\n          self.setState({ color: c.value.hex });\n        }\n      }\n    });\n  }\n\n\n  submit(){\n    var data = {id:this.state.id, title: this.state.title, color: this.state.color, confirmed: this.state.isConfirmed}\n    MyActions.updateInstance('statuses', data,  this.state.token);\n  }\n\n  loadData(){\n    const f7: Framework7 = Framework7.instance;\n    f7.toast.show({ text: dict.receiving, closeTimeout: 2000, position: 'top'});\n    if (this.$f7route.params['statusId']) {\n      MyActions.getInstance('statuses', this.$f7route.params['statusId'],  this.state.token);\n    }\n  }\n\n\n  getInstance(){\n    var status = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (status && klass === 'Status'){\n      this.setState({\n        title: status.title,\n        id: status.id,\n        color: status.the_color,\n        status: status,\n        isConfirmed: status.confiremd,\n        confirmable: status.confirmable,\n      }, () => this.loadPalette());\n    } \n    console.log(status)\n  }\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n\n  setInstance(){\n    const self = this;\n    this.$f7router.navigate('/statuses/');\n  }\n\n\n  render() {\n        const {status, title, color, isConfirmed, confirmable} = this.state;\n    return (\n      <Page onPageAfterIn={this.pageAfterIn.bind(this)}>\n        <Navbar title={dict.status_form} backLink={dict.back} />\n        <BlockTitle>{dict.status_form}</BlockTitle>\n        <StatusForm \n        status={status} title={title} color={color} isConfirmed={isConfirmed}\n        submit={this.submit} editing={true} handleChange={this.handleChangeValue}\n        confirmable={confirmable}\n        />\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { List, ListItem, Link } from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\nimport Moment from 'react-moment';\nimport JDate from 'jalali-date';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\n\nconst ParticipantList = (props) => {\n  function removeLink(involvement){\n    if (involvement.role !== 'Creator' && props.editable){\n      return(<Link className=\"mt-4\" onClick={() => props.removeProfile(involvement.profile.id)}>{dict.remove}</Link>)\n    }\n  }\n\n  if (props.involvements) {\n    function select(involvement) {\n      if ( props.editable) {\n        return (\n          <select name=\"role\" onChange={(e) => { props.changeRole(involvement.profile.id, e.target.value) }}>\n            {option('Admin', involvement)}\n            {option('Confirmer', involvement)}\n            {option('Colleague', involvement)}\n            {option('Observer', involvement)}\n          </select>\n        )\n      }\n    }\n    function option(role, involvement) {\n      var selected = false\n      if (involvement.role == role) {\n        selected = true\n      }\n      return (<option value={role} selected={selected}>{dict[role]}</option>)\n    }\n    function addLink(involvement) {\n      if (props.removeProfile) {\n        return (\n          <div className='inline'>\n           {removeLink(involvement)}\n            <a className=\" fs-10 smart-select smart-select-init\" data-open-in=\"popover\">\n              {select(involvement)}\n              <div className=\"item-content\">\n                <div className=\"item-inner bg-w-after\">\n                  <div className=\"item-title\">{dict.role}</div>\n                  <div className=\"item-after mt-2\">{dict[involvement.role]}</div>\n                </div>\n              </div>\n            </a>\n          </div>\n        )\n      }\n    }\n    return (\n      <List className='fs-11'>\n        {props.involvements.map((involvement) =>\n          <ListItem\n            key={involvement.profile.id}\n            title={involvement.profile.fullname}\n            after={addLink(involvement)}>\n            <img slot=\"media\" src={involvement.profile.avatar} width=\"27\" height=\"27\" />\n          </ListItem>\n        )}\n      </List>\n    )\n  } else {\n    return (<ul></ul>)\n  }\n}\nexport default ParticipantList;\n","import React from \"react\";\nimport { List, ListItem, Link} from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\nimport Moment from 'react-moment';\nimport JDate from 'jalali-date';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\n\nconst SimpleList = (props) => {\n  if (props.profiles) {\n    function addLink(profile){\n        if (props.addProfile){\n            return(<Link onClick={()=> props.addProfile(profile.id)}>{dict.add}</Link>)\n        } \n        if (props.removeProfile){\n            return(<Link onClick={()=> props.removeProfile(profile.id)}>{dict.remove}</Link>)\n        } \n    }\n    return (\n      <List>\n        {props.profiles.map((profile) =>\n          <ListItem\n          title={profile.fullname}\n          subtitle=\"...\"\n          after={addLink(profile)}>\n          <img slot=\"media\" src={profile.avatar} width=\"27\" height=\"27\"/>\n          </ListItem>\n        )}\n      </List>\n    )\n  } else {\n    return (<ul></ul>)\n  }\n}\nexport default SimpleList;\n","import React from \"react\";\nimport { Toggle, AccordionContent, Card, CardHeader, CardContent, List, ListItem, CardFooter, ListInput, Col } from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\nimport Moment from 'react-moment';\nimport JDate from 'jalali-date';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\nimport InvolvementList from \"./involvementList\";\nimport SimpleList from \"../profiles/simpleList\";\n\nconst Partcipants = (props) => {\n    function editable() {\n        if (props.editable) {\n            return (\n                <List accordionList className='w-100'>\n                    <ListItem accordionItem className='fs-10' title={\"+ \" + dict.add}>\n                        <AccordionContent>\n                            <List simpleList>\n                                {props.task.groups.map((group) =>\n                                    <ListItem>\n                                        <span>{group.title}</span>\n                                        <Toggle onChange={(e) => props.addGroup(e,group.id)}/>\n                                    </ListItem>\n                                )}\n                            </List>\n                            <List >\n                                <ListInput\n                                    outline\n                                    label={dict.search}\n                                    floatingLabel\n                                    type=\"text\"\n                                    placeholder=\"\"\n                                    clearButton\n                                    onInput={(e) => {\n                                        props.searchProfile({ query: e.target.value })\n                                    }}\n                                />\n                            </List>\n                            <SimpleList profiles={props.profiles} addProfile={props.addProfile} />\n                        </AccordionContent>\n                    </ListItem>\n                </List>\n            )\n        }\n    }\n    if (props.task) {\n        return (\n            <Card>\n                <CardHeader>\n                    {dict.coworkers}\n                </CardHeader>\n                <CardContent>\n                    <List>\n                        <InvolvementList\n                            involvements={props.task.the_involvements} removeProfile={props.removeProfile}\n                            changeRole={props.changeRole} editable={props.editable}\n                        />\n                    </List>\n                </CardContent>\n                <CardFooter>\n                    {editable()}\n                </CardFooter>\n            </Card>\n        )\n    } else {\n        return (<ul></ul>)\n    }\n}\nexport default Partcipants;\n","import React from \"react\";\nimport { List, ListItem, Link, Icon, Chip } from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\nimport Moment from 'react-moment';\nimport JDate from 'jalali-date';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\n\nconst SimpleList = (props) => {\n  if (props.statuses) {\n    function addLink(status) {\n      if (props.addStatus) {\n        return (<Link onClick={() => props.addStatus(status.id)}>{dict.select}</Link>)\n      }\n    }\n    return (\n      <List>\n        {props.statuses.map((status) =>\n          <ListItem\n            title={\n              <div className=\"chip\" >\n                <div className=\"chip-media\" style={{ backgroundColor: status.the_color }} >\n                  <i className=\"icon f7-icons if-not-md\">plus_circle</i>\n                  <i className=\"icon material-icons md-only\"></i>\n                </div>\n                <div className=\"chip-label\">{status.title}</div>\n              </div>}\n            after={addLink(status)}\n          />\n        )}\n      </List>\n    )\n  } else {\n    return (<ul></ul>)\n  }\n}\nexport default SimpleList;\n","import React from \"react\";\nimport { Block, AccordionContent, Icon, Chip, CardContent, List, ListItem, CardFooter, ListInput, Col } from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\nimport Moment from 'react-moment';\nimport JDate from 'jalali-date';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\nimport SimpleList from \"../statuses/simpleList\";\n\nconst Statuses = (props) => {\n    function chip(status){\n        if(status) {\n            return(\n                <div>\n                <div className=\"chip\" >\n                    <div className=\"chip-media\" style={{ backgroundColor: status.color }} >\n                        <i className=\"icon f7-icons if-not-md\">plus_circle</i>\n                        <i className=\"icon material-icons md-only\"></i>\n                    </div>\n                    <div className=\"chip-label\">{status.title}</div>\n                </div>\n            </div>\n            )\n        } else {\n        return(<div>{dict.add_stauts}</div>)\n        }\n    }\n    function editable() {\n        if (props.editable) {\n            return (\n                <AccordionContent>\n                <List >\n                    <ListInput\n                        outline\n                        label={dict.search}\n                        floatingLabel\n                        type=\"text\"\n                        placeholder=\"\"\n                        clearButton\n                        onInput={(e) => {\n                            props.searchStatus({ query: e.target.value })\n                        }}\n                    />\n                </List>\n                <SimpleList statuses={props.statuses} addStatus={props.addStatus} />\n            </AccordionContent>)\n        }\n    }\n    if (props.task) {\n        \n        return (\n            <List accordionList className='w-100'>\n                <ListItem accordionItem className='fs-10'\n                    title={chip(props.task.status)}\n                >\n                {editable()}\n                </ListItem>\n            </List>\n        )\n    } else {\n        return (<ul></ul>)\n    }\n}\nexport default Statuses;\n","import React from \"react\";\nimport { Searchbar, Card, CardHeader, Link, CardContent, List, ListItem, CardFooter, Row, Col } from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\nimport Moment from 'react-moment';\nimport JDate from 'jalali-date';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\n\nconst Works = (props) => {\n\n    function chip(work) {\n        var result = []\n\n        if (work.deadline_alert) {\n            result.push(\n                <span className='color-red ml-5'>\n                    <i class=\"fa fa-bell-o\" aria-hidden=\"true\"></i>\n                </span>\n            )\n        }\n\n        if (work.comment_alert) {\n            result.push(\n                <span className='color-green ml-5'>\n                    <i class=\"fa fa-comments-o \" aria-hidden=\"true\"></i>\n                </span>\n            )\n        }\n        if (work.report_alert) {\n            result.push(\n                <span className='color-blue ml-5'>\n                    <i class=\"fa fa-file-text-o \" aria-hidden=\"true\"></i>\n                </span>\n            )\n        }\n        if (work.status) {\n            result.push(\n\n                <div className=\"chip\" key={'work-status-chip' + work.id }>\n                    <div className=\"chip-media\" style={{ backgroundColor: work.status.color }} >\n                        <i className=\"icon f7-icons if-not-md\">plus_circle</i>\n                        <i className=\"icon material-icons md-only\"></i>\n                    </div>\n                    <div className=\"chip-label\">{work.status.title}</div>\n                </div>\n            )\n\n        } else {\n            result.push(<span className='mr-5'>{dict.add_stauts}</span>)\n        }\n        return (result)\n    }\n\n    function editable() {\n        if (props.editable) {\n            return (<Link href={'/works/new/' + props.task.id}><i className=\"ml-5 fa fa-plus\"></i> {dict.new}</Link>)\n        }\n    }\n\n    function title(work){        \n        return(<span>{work.title}</span>)\n    }\n\n    function text(work) {\n        var result = []\n        if (work.priority === 'high'){\n            result.push(<span className='va-2 fs-8 bg-yellow ml-10'>{dict[work.priority]}</span> )\n        }\n        if (work.priority === 'urgent'){\n            result.push(<span className='va-2 fs-8 bg-orange ml-10'>{dict[work.priority]}</span> )\n        }\n        result.push(<span  className='pd-5'>{work.details}</span>)\n        return(result)\n    }\n\n    if (props.task) {\n        return (\n            <Card>\n                <CardHeader>\n                    {dict.works}\n                    {editable()}\n                </CardHeader>\n                <CardContent>\n                    <List mediaList >\n                        {props.task.works.map((work) =>\n                            <ListItem\n                                key={'work'+work.id}\n                                className='fs-11 work-media'\n                                link={\"/works/\" + work.id}\n                                title={title(work)}\n                                after={chip(work)}\n                                text={text(work)}\n                            >\n                            </ListItem>\n                        )}\n                    </List>\n                </CardContent>\n                <CardFooter>\n\n                    <Searchbar\n                        className='p-static fs-10'\n                        disableButtonText={dict.cancel}\n                        placeholder={dict.search}\n                        inline={true}\n                    ></Searchbar>\n\n                </CardFooter>\n            </Card>\n        )\n    } else {\n        return (<ul></ul>)\n    }\n}\nexport default Works;\n","import React from \"react\";\nimport { Searchbar, Card, CardHeader, Link, CardContent, List, ListItem, CardFooter, ListInput, Col } from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\nimport Moment from 'react-moment';\nimport JDate from 'jalali-date';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\n\nconst Reports = (props) => {\n    if (props.task) {\n        function creation(t) {\n            var date = new Date(new window.ODate(t))\n            return (<Moment date={date} fromNow></Moment>)\n        }\n        function editable() {\n            if (props.editable) {\n                return (<Link href={'/reports/new/tasks/' + props.task.id}><i className=\"ml-5 fa fa-plus\"></i> {dict.new}</Link>)\n            }\n        }\n        return (\n            <Card>\n                <CardHeader>\n                    {dict.reports}\n                    {editable()}\n                </CardHeader>\n                <CardContent>\n                    <List mediaList >\n                        {props.task.reports.map((report) =>\n                            <ListItem\n                                key={'report' + report.id}\n                                className='fs-11 work-media'\n                                link={\"/reports/\" + report.id}\n                                title={report.title}\n                                after={creation(report.creation_date)}\n                                text={report.content}\n                            >\n                            </ListItem>\n                        )}\n                    </List>\n                </CardContent>\n                <CardFooter>\n                    <Searchbar\n                        className='p-static fs-10'\n                        disableButtonText={dict.cancel}\n                        placeholder={dict.search}\n                        inline={true}\n                    ></Searchbar>\n                </CardFooter>\n            </Card>\n        )\n    } else {\n        return (<ul></ul>)\n    }\n}\nexport default Reports;\n","import React from \"react\";\nimport { List, ListInput, BlockTitle, Block, Link, Button, Card, CardHeader, CardFooter } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport InputTrigger from 'react-input-trigger';\n\n\nconst CommentForm = (props) => {\n  return (\n    <Card>\n      <CardHeader>{dict.comment_form}</CardHeader>\n     <List >\n        <ListInput\n          label={dict.comment}\n          id=\"cm-form\"\n          type=\"textarea\"\n          placeholder='...'\n          maxlength='300'\n          resizable\n          clearButton={true}\n          onInput={(e) => {\n            props.handleChange({ commentContent: e.target.value })\n          }}\n        />\n        </List>\n      <CardFooter>\n        <Link></Link>\n        <Link className=\"btn-notice\"></Link>\n        <Button className=\"col btn\" fill onClick={props.submit}>{dict.submit}</Button>\n      </CardFooter>\n    </Card>\n  )\n}\nexport default CommentForm;\n","import React from \"react\";\nimport { List, ListItem, BlockTitle, Row, Link, Col } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport Moment from 'react-moment';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\n\nconst CommentList = (props) => {\n    var items = []\n    function editLink(comment) {\n        if (comment.editable) {\n            return (\n                <Link onClick={() => props.deleteCommentConfirm(comment.id)}>\n                    <i className=\"va ml-5 fa fa-trash\"></i>\n                </Link>\n            )\n        }\n    }\n    if (props.comments) {\n\n        for (let i = 0; i < props.comments.length; i++) {\n            var date = new Date(new window.ODate(props.comments[i].created_at))\n            var time =\n                <React.Fragment>\n                    {editLink(props.comments[i])}\n                    <Moment locale=\"fa\" fromNow ago>{date}</Moment>\n                    {dict.ago}\n                </React.Fragment>\n            items.push(\n                <ListItem\n                    key={'comment' + props.comments[i].id}\n                    className='fs-10'\n                    text={time}\n                    title={props.comments[i].profile.fullname + ':'}\n                    subtitle={props.comments[i].content}\n                >\n                    <img slot=\"media\" src={props.comments[i].profile.avatar} width=\"44\" height=\"44\" />\n                </ListItem>\n\n\n\n            )\n        }\n\n        return (\n            <React.Fragment>\n                <BlockTitle>{dict.comments}</BlockTitle>\n                <List mediaList inset>\n                    {items}\n                </List>\n                <Row noGap>\n                    <Col></Col>\n                    <Col className='center'>\n                        <a className=\"gray-color\" onClick={() => props.loadMore()}>\n                            {dict.more}\n                        </a>\n                    </Col>\n                    <Col></Col>\n                </Row>\n                <BlockTitle></BlockTitle>\n            </React.Fragment>\n        )\n    }\n    else {\n        return (<BlockTitle></BlockTitle>)\n    }\n}\nexport default CommentList;","import React from \"react\";\nimport { Block, AccordionContent, Card, Row, Col, CardHeader, CardContent, List, ListItem, Chip, Icon, CardFooter, BlockTitle, Link } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport Involvements from './involvements';\nimport Statuses from \"./status\";\nimport Works from \"./works\";\nimport Reports from \"./reports\";\nimport CommentForm from \"../comments/form\"\nimport CommentList from \"../comments/list\"\nimport 'moment-timezone';\nimport 'moment/locale/fa';\n\n\nconst TaskShow = (props) => {\n  if (props.task && props.access) {\n    function tags() {\n      var arr = []\n      props.task.the_tags.map((tag) =>\n        arr.push(<Chip key={'task-tag' + tag.id} text={tag.title} />)\n      )\n      return (arr)\n    }\n\n    function archived(){\n      if(props.task.archived){\n        return(\n          <Row>\n          <Col width='100' tabletWidth='100'>\n          <Card className='fs-11 card-orange'>\n            <CardContent>\n            <i class=\"ml-2 fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>\n            {dict.archived} <br/>\n            {props.task.archive_note}\n            </CardContent>\n            \n          </Card>\n          </Col>\n        </Row>\n        )\n      }\n\n    }\n\n    function isPublic() {\n      if (props.task.is_public) {\n        return (dict.public)\n      } else {\n        return (dict.private)\n      }\n    }\n\n    function access(segment) {\n      if (segment === 'statuses') {\n        var editable = false\n        if (props.access.includes('statuses')) {\n          editable = true\n        }\n        return (\n          <Statuses\n            task={props.task} searchStatus={props.searchStatus} editable={editable}\n            statuses={props.statuses} addStatus={props.addStatus}\n          />)\n      }\n\n      if (segment === 'involvements') {\n        var editable = false\n        if (props.access.includes('involvements')) {\n          editable = true\n        }\n        return (\n          <Involvements\n            task={props.task} searchProfile={props.searchProfile}\n            removeProfile={props.removeProfile} addProfile={props.addProfile}\n            profiles={props.profiles} changeRole={props.changeRole}\n            editable={editable} addGroup={props.addGroup}\n          />)\n      }\n\n\n      if (segment === 'works') {\n        var editable = false\n        if (props.access.includes('works')) {\n          editable = true\n        }\n        return (<Works task={props.task} editable={editable} ></Works>)\n      }\n\n      if (segment === 'reports') {\n        var editable = false\n        if (props.access.includes('reports')) {\n          editable = true\n        }\n        return (<Reports task={props.task} editable={editable} ></Reports>)\n      }\n\n      if (segment === 'comments') {\n        if (props.access.includes('comments')) {\n          return (\n            <CommentForm\n              model={props.task} submit={props.submitComment}\n              handleChange={props.handleChange} \n        \n             \n            />\n          )\n        }\n      }\n\n      if (segment === 'edit') {\n        if (props.access.includes('edit')) {\n          return (<Link href={'/tasks/' + props.task.id + '/edit'}><i className=\"ml-5 fa fa-cog\"></i></Link>)\n        }\n      }\n\n      if (segment === 'view') {\n        if (props.access.includes('view')) {\n          return (\n            <React.Fragment>\n              {archived()}\n              <Row>\n                <Col width='100' tabletWidth='50'>\n                  <Card>\n                    <CardHeader>\n                      {props.task.title}\n                      {access('edit')}\n                    </CardHeader>\n                    <CardContent>\n                      <List simple-list>\n                        <ListItem className='fs-11' title=''>{tags()}</ListItem>\n                        <ListItem className='fs-11' title=''>{isPublic()}</ListItem>\n                        <ListItem className='fs-11' title=''>{props.task.details}</ListItem>\n                      </List>\n\n                    </CardContent>\n                    <CardFooter>\n                      {access('statuses')}\n                    </CardFooter>\n                  </Card>\n                </Col>\n\n                <Col width='100' tabletWidth='50'>\n                  {access('involvements')}\n                </Col>\n              </Row>\n\n\n              <Row>\n                <Col width='100' tabletWidth='100'>\n                  {access('works')}\n                </Col>\n              </Row>\n\n              <Row>\n                <Col width='100' tabletWidth='100'>\n                  {access('reports')}\n                </Col>\n              </Row>\n\n              <BlockTitle>{dict.discussions}</BlockTitle>\n\n              {access('comments')}\n              <CommentList\n                comments={props.comments} deleteCommentConfirm={props.deleteCommentConfirm}\n                loadMore={props.loadMore} />\n\n\n            </React.Fragment>\n\n          )\n        }\n      }\n\n    }\n\n\n    return (<React.Fragment>{access('view')}</React.Fragment>)\n  } else {\n    return (null)\n  }\n}\nexport default TaskShow;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  Link,\n  Icon, Fab\n} from 'framework7-react';\nimport { dict } from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport TaskShow from \"../../containers/tasks/show\"\nimport { messaging } from \"../../init-fcm.js\";\n\nexport default class Layout extends Component {\n  constructor() {\n    super();\n    this.getInstance = this.getInstance.bind(this);\n    this.getList = this.getList.bind(this);\n    this.submit = this.submit.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.removeTask = this.removeTask.bind(this);\n    this.searchProfile = this.searchProfile.bind(this);\n    this.addProfile = this.addProfile.bind(this);\n    this.removeProfile = this.removeProfile.bind(this);\n    this.searchStatus = this.searchStatus.bind(this);\n    this.addStatus = this.addStatus.bind(this);\n    this.deleteComment = this.deleteComment.bind(this);\n    this.submitComment = this.submitComment.bind(this);\n    this.loadMore = this.loadMore.bind(this);\n    this.changeRole = this.changeRole.bind(this);\n    this.deleteCommentConfirm = this.deleteCommentConfirm.bind(this);\n    this.addGroup = this.addGroup.bind(this);\n    \n\n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      task: null,\n      id: null,\n      users: null,\n      assignedUsers: null,\n      user_id: null,\n      abilityTitle: '',\n      abilityValue: true,\n      ability: null,\n      comments: null,\n      works: null,\n      query: null,\n      profiles: [],\n      statuses: [],\n      access: [],\n      commentContent: '',\n\n    }\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.getInstance);\n    ModelStore.on(\"got_list\", this.getList);\n    ModelStore.on(\"deleted_instance\", this.getInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.getInstance);\n    ModelStore.removeListener(\"got_list\", this.getList);\n    ModelStore.removeListener(\"deleted_instance\", this.getInstance);\n  }\n\n  componentDidMount() {\n    MyActions.getInstance('tasks', this.$f7route.params['taskId'], this.state.token);\n  }\n\n  getInstance() {\n    var task = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (task && klass === 'Task') {\n      this.setState({\n        task: task,\n        id: task.id,\n        assignedUsers: task.users,\n        works: task.works,\n        comments: task.the_comments,\n        access: task.user_access\n      });\n    }\n    this.$$('.btn').show();\n  }\n\n\n  loadMore() {\n    this.setState({ page: this.state.page + 1 }, () => {\n      MyActions.getInstance('tasks', this.$f7route.params['taskId'], this.state.token, this.state.page);\n    });\n  }\n\n  getList() {\n    var list = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    if (list && klass === 'User') {\n      this.setState({\n        users: list,\n      });\n    }\n    if (list && klass === 'Profile') {\n      this.setState({\n        profiles: list,\n      });\n    }\n    if (list && klass === 'Status') {\n      this.setState({\n        statuses: list,\n      });\n    }\n  }\n\n  submit() {\n    this.$$('.btn').hide();\n    this.$$('.btn-notice').text(dict.submitting);\n    var data = { task_id: this.state.id, user_id: this.state.user_id }\n    MyActions.setInstance('users/assignments', data, this.state.token);\n  }\n\n  searchProfile(obj) {\n    this.setState({ profiles: [] });\n    this.setState(obj, () => {\n      MyActions.getList('profiles/search', this.state.page, { q: this.state.query });\n    });\n  }\n\n  searchStatus(obj) {\n    this.setState({ statuses: [] });\n    this.setState(obj, () => {\n      MyActions.getList('statuses/search', this.state.page, { q: this.state.query });\n    });\n  }\n\n  addProfile(profileId) {\n    var data = { id: this.state.id, profile_id: profileId }\n    MyActions.setInstance('tasks/involvements', data, this.state.token);\n  }\n\n  addStatus(statusId) {\n    var data = { id: this.state.id, status_id: statusId }\n    MyActions.setInstance('tasks/status', data, this.state.token);\n  }\n\n  removeProfile(profileId) {\n    var data = { id: this.state.id, profile_id: profileId }\n    MyActions.removeInstance('tasks/involvements', data, this.state.token);\n  }\n\n  changeRole(profile_id, role) {\n    var data = { id: this.state.id, profile_id: profile_id, role: role }\n    MyActions.setInstance('tasks/change_role', data, this.state.token);\n  }\n\n  submitComment() {\n    var data = { commentable_type: 'Task', commentable_id: this.state.id, content: this.state.commentContent }\n    MyActions.setInstance('comments', data, this.state.token);\n  }\n\n\n  deleteCommentConfirm(id) {\n    const self = this;\n    const app = self.$f7;\n    app.dialog.confirm(dict.are_you_sure, dict.alert, () => self.deleteComment(id))\n  }\n\n  deleteComment(id) {\n    var data = { id: id }\n    MyActions.removeInstance('comments', data, this.state.token, this.state.page);\n  }\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  fab() {\n    if (this.state.task) {\n      return (\n        <Fab href={\"/tasks/\" + this.state.task.id + \"/edit\"} target=\"#main-view\" position=\"left-bottom\" slot=\"fixed\" color=\"lime\">\n          <Icon ios=\"f7:edit\" aurora=\"f7:edit\" md=\"material:edit\"></Icon>\n          <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n        </Fab>\n      )\n    }\n  }\n\n\n\n  removeTask(user_id) {\n    MyActions.removeInstance('users/assignments', { user_id: user_id, task_id: this.state.id }, this.state.token);\n  }\n\n  addGroup(e, id) {\n    var data = { id: this.state.id, group_id: id }\n    if (e.target.checked) {\n      MyActions.setInstance('tasks/group_involvements', data, this.state.token);\n    } else {\n      MyActions.removeInstance('tasks/group_involvements', data, this.state.token);\n    }\n  }\n\n\n\n  render() {\n    const {\n      task, users, assignedUsers, ability,\n      profiles, statuses, works, commentContent,\n      comments, access, } = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.tasks} backLink={dict.back} backLinkForce={true}>\n          <Link panelOpen=\"right\">\n            <Icon f7=\"bars\"></Icon>\n          </Link>\n        </Navbar>\n        <TaskShow\n          task={task} users={users} ability={ability} profiles={profiles} statuses={statuses}\n          removeProfile={this.removeProfile} addProfile={this.addProfile}\n          searchProfile={this.searchProfile} removeAbility={this.removeAbility}\n          assignedUsers={assignedUsers} addAbility={this.addAbility}\n          removeTask={this.removeTask} submit={this.submit} handleChange={this.handleChangeValue}\n          searchStatus={this.searchStatus} addStatus={this.addStatus} works={works}\n          submitComment={this.submitComment} deleteCommentConfirm={this.deleteCommentConfirm}\n          commentContent={commentContent} comments={comments} loadMore={this.loadMore}\n          changeRole={this.changeRole} access={access} addGroup={this.addGroup}\n        />\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { List, ListItem, CardHeader, CardContent, CardFooter } from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\nimport Moment from 'react-moment';\nimport JDate from 'jalali-date';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\n\nconst TaskList = (props) => {\n  function title(t) {\n    var date = new Date(new window.ODate(t))\n    return (<Moment date={date} fromNow></Moment>)\n  }\n  function alerts(task) {\n    var result = []\n    if (task.deadline_alert) {\n      result.push(\n        <span className='color-red ml-5'>\n          <i class=\"fa fa-bell-o\" aria-hidden=\"true\"></i>\n        </span>\n      )\n    }\n    if (task.report_alert) {\n      result.push(\n        <span className='color-blue ml-5'>\n          <i class=\"fa fa-file-text-o \" aria-hidden=\"true\"></i>\n        </span>\n      )\n    }\n    if (task.comment_alert) {\n      result.push(\n        <span className='color-green mr-5'>\n          <i class=\"fa fa-comments-o \" aria-hidden=\"true\"></i>\n        </span>\n      )\n    }\n    return (result)\n  }\n\n  function sort() {\n    if (props.sortChange) {\n      return (\n        <a className=\" fs-10 smart-select smart-select-init\" data-open-in=\"popover\">\n          <select name=\"superhero\" onChange={(e) => { props.sortChange({ title: e.target.value }) }}>\n            <option value=\"title\" key='option-title' >{dict.by_title}</option>\n            <option value=\"events\" key='option-events' selected>{dict.by_events}</option>\n          </select>\n          <div className=\"item-content\">\n            <div className=\"item-inner\">\n              <div className=\"item-title\">{dict.sort_by}</div>\n            </div>\n          </div>\n        </a>\n      )\n    }\n  }\n\n  if (props.tasks) {\n    return (\n      <React.Fragment>\n        <CardHeader>\n          {props.header}\n\n          {sort()}\n        </CardHeader>\n        <CardContent>\n          <List mediaList className='fs-11'>\n            {props.tasks.map((task) =>\n              <ListItem key={'task' + task.id} title={task.title} text={task.details} after={alerts(task)} link={'/tasks/' + task.id}></ListItem>\n            )}\n          </List>\n        </CardContent>\n        <CardFooter>\n          {/* <span className='fs-10'>\n            <span className='color-red ml-5'>\n              <i class=\"fa fa-bell-o ml-5\" aria-hidden=\"true\"></i>\n              {dict.deadline_near}\n            </span>\n            <span className='color-blue ml-5'>\n              <i class=\"fa fa-file-text-o  ml-5\" aria-hidden=\"true\"></i>\n              {dict.new_report}\n            </span>\n            <span className='color-green mr-5'>\n              <i class=\"fa fa-comments-o ml-5\" aria-hidden=\"true\"></i>\n              {dict.new_comments}\n            </span>\n            </span>*/}\n\n        </CardFooter>\n      </React.Fragment>\n\n    )\n  } else {\n    return (<ul></ul>)\n  }\n}\nexport default TaskList;\n","import React from \"react\";\nimport { List, ListItem, CardHeader, CardContent, CardFooter } from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\nimport Moment from 'react-moment';\nimport JDate from 'jalali-date';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\n\nconst WorkList = (props) => {\n  function title(t) {\n    var date = new Date(new window.ODate(t))\n    return (<Moment date={date} fromNow></Moment>)\n  }\n  function alerts(work) {\n    var result = []\n    if (work.deadline_alert) {\n      result.push(\n        <span className='color-red ml-5'>\n          <i class=\"fa fa-bell-o\" aria-hidden=\"true\"></i>\n        </span>\n      )\n    }\n    if (work.report_alert) {\n      result.push(\n        <span className='color-blue ml-5'>\n          <i class=\"fa fa-file-text-o \" aria-hidden=\"true\"></i>\n        </span>\n      )\n    }\n    if (work.comment_alert) {\n      result.push(\n        <span className='color-green mr-5'>\n          <i class=\"fa fa-comments-o \" aria-hidden=\"true\"></i>\n        </span>\n      )\n    }\n    return(result)\n  }\n\n  if (props.works) {\n    return (\n      <React.Fragment>\n        <CardHeader>\n          {props.header}\n        </CardHeader>\n        <CardContent>\n          <List mediaList className='fs-11'>\n            {props.works.map((work) =>\n              <ListItem   key={'workList'+work.id} title={work.title} text={dict.task + ':'+ work.task.title} after={alerts(work)} link={'/works/' + work.id}></ListItem>\n            )}\n          </List>\n        </CardContent>\n        <CardFooter>\n        </CardFooter>\n      </React.Fragment>\n\n    )\n  } else {\n    return (<ul></ul>)\n  }\n}\nexport default WorkList;\n","import React from \"react\";\nimport { Page, Navbar, Row, BlockTitle, Col, Fab, Icon, Card, Link } from 'framework7-react';\nimport TaskList from \"./list\"\nimport WorkList from \"./workList\"\nimport { dict } from '../../Dict';\n\nconst TaskIndex = (props) => {\n  function fab(a) {\n    if (props.ability) {\n      var result = []\n      props.ability.map((ab) => {\n        if (ab.title === a && ab.value) {\n          result.push(\n            <Fab href=\"/tasks/new\" target=\"#main-view\" position=\"left-bottom\" slot=\"fixed\" color=\"deeporange\">\n              <Icon ios=\"f7:add\" aurora=\"f7:add\" md=\"material:add\"></Icon>\n              <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n            </Fab>\n          )\n        }\n      })\n    }\n    return result\n  }\n  return (\n    <Page>\n      <Navbar title={dict.tasks} >\n        <Link panelOpen=\"right\">\n          <Icon f7=\"bars\"></Icon>\n        </Link>\n      </Navbar>\n      <BlockTitle>{dict.list}</BlockTitle>\n    {fab('create_task')}\n      <Row>\n        <Col width='100' tabletWidth='50'>\n          <Card>\n            <TaskList tasks={props.tasks} header={dict.your_tasks} sortChange={props.sortChange} />\n          </Card>\n        </Col>\n        <Col width='100' tabletWidth='50'>\n          <Card>\n            <WorkList works={props.works} header={dict.your_newest_works} sortChange={props.sortChange} />\n          </Card>\n        </Col>\n\n      </Row>\n\n    </Page>\n  )\n}\nexport default TaskIndex;\n","import React from \"react\"\nimport { Page,Fab, Icon } from 'framework7-react';\nimport ModelStore from \"../../stores/ModelStore\";\nimport TaskIndex from \"../../containers/tasks/index\"\nimport * as MyActions from \"../../actions/MyActions\";\nimport { dict} from '../../Dict';\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\n\nexport default class Layout extends React.Component {\n  constructor() {\n    super();\n    this.getList = this.getList.bind(this);\n    this.sortChange = this.sortChange.bind(this);\n    \n    this.state = {\n      token: window.localStorage.getItem('token'),\n      tasks: null,\n      works: null,\n      ability: null,\n    }\n  }\n  componentWillMount() {\n    ModelStore.on(\"got_list\", this.getList);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_list\", this.getList);\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  sortChange(i){\n    MyActions.getList('tasks', this.state.page, {order: i.title}, this.state.token);\n  }\n\n  loadData(){\n    const f7: Framework7 = Framework7.instance;\n    f7.toast.show({ text: dict.receiving, closeTimeout: 2000, position: 'top'});\n    MyActions.getList('tasks', this.state.page, {}, this.state.token);\n    MyActions.getList('works', this.state.page, {}, this.state.token);\n  }\n\n  getList() {\n    var list = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    if (list && klass === 'Task'){\n      this.setState({\n        tasks: list,\n        ability: list[0].ability\n      });\n    }\n    if (list && klass === 'Work'){\n      this.setState({\n        works: list,\n      });\n    }\n  }\n\n  render() {\n    const {tasks, works, ability} = this.state;\n    return(<TaskIndex tasks={tasks} ability={ability} works={works} sortChange={this.sortChange}/>)\n  }\n}\n","import React from \"react\";\nimport { List, Chip, ListInput, Block, Row, Button, BlockTitle, Card, ListItem, Col, Link } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport crypto from 'crypto-js';\n\n\nconst TaskForm = (props) => {\n  if (props.isPublic) {\n    var isPublicTask = true;\n  } else {\n    var isPublicTask = false;\n  }\n  function tags() {\n    if (props.tags) {\n      var chips = [\n        <div>\n          <a className='fs-11 ' href=\"#\" id='autocomplete-standalone-ajax'>\n            <div className=\"item-title fs-11\">\n              <i className=\"va-minus-2 ml-5 fa fa-plus\"></i>\n              {dict.tags}:\n        </div>\n          </a>\n        </div>]\n      props.tags.map((tag) =>\n        chips.push(<Chip text={tag.title} deleteable onClick={() => props.removeTag(tag.id)} />)\n      )\n      return chips\n    }\n  }\n\n  function deleteButton() {\n    if (props.editing) {\n      return (\n        <Col>\n          <Button className=\"col btn ml-5\" outline color='red' disabled={!props.editing} onClick={() => props.deleteTaskConfirm()}>{dict.delete}</Button>\n        </Col>\n      )\n    }\n  }\n\n  function archive() {\n    if (props.editing) {\n      return (\n        <List>\n          <ListItem checkbox value={props.archived} checked={props.archived} title={dict.archived}\n            onChange={(e) => {\n              props.handleChange({ archived: !JSON.parse(e.target.value) })\n            }}\n          ></ListItem>\n          <ListInput\n            label={dict.archive_note}\n            type=\"textarea\"\n            placeholder={dict.write_archive_note}\n            value={props.archiveNote}\n            onInput={(e) => {\n              props.handleChange({ archiveNote: e.target.value })\n            }}\n          />\n\n        </List>)\n    }\n\n  }\n  return (\n    <Card>\n      <BlockTitle>{dict.task}</BlockTitle>\n      <List >\n        <ListInput\n          label={dict.title}\n          type=\"text\"\n          placeholder={dict.select_appropriate_title}\n          defaultValue={props.task.title}\n          required={true}\n          onInput={(e) => {\n            props.handleChange({ title: e.target.value })\n          }}\n        />\n\n        <ListInput\n          label={dict.details}\n          type=\"textarea\"\n          placeholder={dict.write_appropriate_description}\n          value={props.details}\n          onInput={(e) => {\n            props.handleChange({ details: e.target.value })\n          }}\n        />\n\n        <ListItem radio value={false} checked={!isPublicTask} name=\"selectedMode\" title={dict.private}\n          onChange={(e) => {\n            console.log(e)\n            props.handleChange({ isPublic: JSON.parse(e.target.value) });\n          }}>\n        </ListItem>\n        <ListItem radio value={true} checked={isPublicTask} name=\"selectedMode\" title={dict.public}\n          onChange={(e) => {\n            console.log(e)\n            props.handleChange({ isPublic: JSON.parse(e.target.value) })\n          }}>\n        </ListItem>\n\n\n        <ListItem title={tags()}></ListItem>\n\n      </List>\n\n      {archive()}\n\n      <Block strong>\n        <Row tag=\"p\">\n          {deleteButton()}\n          <Col>\n            <Link className=\"btn-notice\"></Link>\n            <Button className=\"col btn\" fill onClick={props.submit}>{dict.submit}</Button>\n          </Col>\n        </Row>\n      </Block>\n    </Card >\n\n  )\n}\nexport default TaskForm;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  BlockTitle,\n} from 'framework7-react';\nimport { dict } from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport TaskForm from \"../../containers/tasks/form\"\nimport { conf } from '../../conf';\n\nexport default class TaskCreate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.loadTags = this.loadTags.bind(this);\n    this.pageAfterIn = this.pageAfterIn.bind(this);\n    this.removeTag = this.removeTag.bind(this);\n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      task: {},\n      title: null,\n      details: null,\n      deadline: new Date(),\n      start: new Date(),\n      startTime: '0:00',\n      deadlineTime: '0:00',\n      privateTask: true,\n      tags: [],\n      isPublic: false,\n    }\n  }\n\n\n  componentWillMount() {\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n  }\n\n  loadTags() {\n    const self = this;\n    const app = self.$f7;\n\n    app.autocomplete.create({\n      openIn: 'popup', //open in page\n      openerEl: '#autocomplete-standalone-ajax', //link that opens autocomplete\n      multiple: true, //allow multiple values\n      valueProperty: 'id', //object's \"value\" property name\n      textProperty: 'title', //object's \"text\" property name\n      searchbarDisableText: dict.cancel,\n      popupCloseLinkText: dict.close,\n      notFoundText: dict.not_found,\n      limit: 50,\n      searchbarPlaceholder: dict.search,\n      preloader: true, //enable preloader\n      source: function (query, render) {\n        var autocomplete = this;\n        var results = [];\n        if (query.length === 0) {\n          render(results);\n          return;\n        }\n        // Show Preloader\n        autocomplete.preloaderShow();\n        // Do Ajax request to Autocomplete data\n        app.request({\n          url: conf.server + '/tags/search',\n          method: 'GET',\n          dataType: 'json',\n          //send \"query\" to server. Useful in case you generate response dynamically\n          data: {\n            q: query\n          },\n          success: function (item) {\n            // Find matched items\n            for (var i = 0; i < item.data.length; i++) {\n              if (item.data[i].title.indexOf(query) >= 0) results.push(item.data[i]);\n            }\n            // Hide Preoloader\n            autocomplete.preloaderHide();\n            // Render items by passing array with result items\n            render(results);\n          }\n        });\n      },\n      on: {\n        change: function (value) {\n          if (value && value[value.length - 1]) {\n            self.setState({ tags: self.state.tags.concat({ title: value[value.length - 1].title, id: value[value.length - 1].id }) })\n          }\n        },\n      },\n    });\n  }\n\n  pageAfterIn() {\n    this.loadTags();\n  }\n\n  submit() {\n    this.$$('.btn').hide();\n    this.$$('.btn-notice').text(dict.submitting);\n    var data = {\n      title: this.state.title, public: this.state.isPublic,\n      details: this.state.details, tags: this.state.tags\n    }\n    if (this.state.title && this.state.title.length > 0) {\n      MyActions.setInstance('tasks', data, this.state.token);\n    } else {\n      const self = this;\n      self.$f7.dialog.alert(dict.incomplete_data, dict.alert);\n    }\n\n  }\n\n  removeTag(id) {\n    this.setState({\n      tags: this.state.tags.filter(function (tag) {\n        return tag.id !== id\n      })\n    });\n  }\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  setInstance() {\n    this.$$('.btn').show();\n    this.$f7router.navigate('/tasks/');\n  }\n\n\n\n  render() {\n    const { task, tags, isPublic } = this.state;\n    return (\n      <Page onPageAfterIn={this.pageAfterIn.bind(this)} backLink={dict.back} backLinkForce={true}>\n        <Navbar title={dict.task_form} backLink={dict.back} />\n        <BlockTitle>{dict.task_form}</BlockTitle>\n        <TaskForm\n          task={task} removeTag={this.removeTag} tags={tags} isPublic={isPublic}\n          submit={this.submit} editing={false} handleChange={this.handleChangeValue} />\n      </Page>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon\n} from 'framework7-react';\nimport { dict } from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport TaskForm from \"../../containers/tasks/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\nimport { conf } from '../../conf';\n\nexport default class DocumentUpdate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.getInstance = this.getInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.pageAfterIn = this.pageAfterIn.bind(this);\n    this.loadTags = this.loadTags.bind(this);\n    this.removeTag = this.removeTag.bind(this);\n    this.deleteTaskConfirm = this.deleteTaskConfirm.bind(this);\n    this.deleteTask = this.deleteTask.bind(this);\n    this.deleteInstance = this.deleteInstance.bind(this);\n\n     \n    this.state = {\n      token: window.localStorage.getItem('token'),\n      task: {},\n      id: null,\n      title: null,\n      details: null,\n      privateTask: true,\n      details: null,\n      tags: [],\n      isPublic: false,\n      selectedMode: false,\n      archived: false,\n      archiveNote: null,\n    }\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.setInstance);\n    ModelStore.on(\"deleted_instance\", this.deleteInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n    ModelStore.removeListener(\"deleted_instance\", this.deleteInstance);\n\n  }\n\n  pageAfterIn() {\n    this.loadTags();\n  }\n\n  loadTags() {\n    const self = this;\n    const app = self.$f7;\n\n    app.autocomplete.create({\n      openIn: 'popup', //open in page\n      openerEl: '#autocomplete-standalone-ajax', //link that opens autocomplete\n      multiple: true, //allow multiple values\n      valueProperty: 'id', //object's \"value\" property name\n      textProperty: 'title', //object's \"text\" property name\n      limit: 50,\n      searchbarPlaceholder: dict.search,\n      searchbarDisableText: dict.cancel,\n      popupCloseLinkText: dict.close,\n      notFoundText: dict.not_found,\n      preloader: true, //enable preloader\n      source: function (query, render) {\n        var autocomplete = this;\n        var results = [];\n        if (query.length === 0) {\n          render(results);\n          return;\n        }\n        // Show Preloader\n        autocomplete.preloaderShow();\n        // Do Ajax request to Autocomplete data\n        app.request({\n          url: conf.server + '/tags/search',\n          method: 'GET',\n          dataType: 'json',\n          //send \"query\" to server. Useful in case you generate response dynamically\n          data: {\n            q: query\n          },\n          success: function (item) {\n            // Find matched items\n            for (var i = 0; i < item.data.length; i++) {\n              if (item.data[i].title.indexOf(query) >= 0) results.push(item.data[i]);\n            }\n            // Hide Preoloader\n            autocomplete.preloaderHide();\n            // Render items by passing array with result items\n            render(results);\n          }\n        });\n      },\n      on: {\n        change: function (value) {\n          if (value && value[value.length - 1]) {\n            self.setState({ tags: self.state.tags.concat({ title: value[value.length - 1].title, id: value[value.length - 1].id }) })\n          }\n        },\n      },\n    });\n  }\n\n\n\n  submit() {\n    this.$$('.btn').hide();\n    this.$$('.btn-notice').text(dict.submitting);\n    var data = {\n      id: this.state.id, title: this.state.title, public: this.state.isPublic,\n      details: this.state.details, tags: this.state.tags, archive_note: this.state.archiveNote,\n      archived: this.state.archived\n    }\n    if (this.state.title && this.state.title.length > 0) {\n      MyActions.updateInstance('tasks', data, this.state.token);\n    } else {\n      const self = this;\n      self.$f7.dialog.alert(dict.incomplete_data, dict.alert);\n    }\n\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  loadData() {\n    const f7: Framework7 = Framework7.instance;\n    f7.toast.show({ text: dict.receiving, closeTimeout: 2000, position: 'top' });\n    if (this.$f7route.params['taskId']) {\n      MyActions.getInstance('tasks', this.$f7route.params['taskId'], this.state.token);\n    }\n  }\n\n\n  getInstance() {\n    var task = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (task && klass === 'Task') {\n      this.setState({\n        title: task.title,\n        details: task.details,\n        id: task.id,\n        task: task,\n        defaultTask: task.default_task,\n        tags: task.the_tags,\n        isPublic: task.is_public,\n        archived: task.archived, \n        archiveNote: task.archive_note, \n      }, () => this.loadTags());\n    }\n\n  }\n\n  removeTag(id) {\n    this.setState({\n      tags: this.state.tags.filter(function (tag) {\n        return tag.id !== id\n      })\n    });\n  }\n\n  handleChangeValue(obj) {\n    console.log(obj)\n    this.setState(obj);\n  }\n\n  deleteTaskConfirm(){\n    const self = this;\n    const app = self.$f7;\n    app.dialog.confirm(dict.are_you_sure, dict.alert, self.deleteTask)\n  }\n\n  deleteTask(){\n    var data = { id: this.state.id}\n    MyActions.removeInstance('tasks', data, this.state.token);\n  }\n\n\n  deleteInstance() {\n    this.$f7router.navigate('/tasks/');\n  }\n\n\n  setInstance() {\n    var task = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (task && klass === 'Task') {\n      this.$$('.btn').show();\n      this.$f7router.navigate('/tasks/' + task.id);\n    }\n  }\n\n\n  render() {\n    const { task, defaultTask, title, details, isPublic, tags, selectedMode, archived, archiveNote } = this.state;\n    return (\n      <Page onPageAfterIn={this.pageAfterIn.bind(this)} backLink={dict.back} backLinkForce={true}>\n        <Navbar title={dict.task_form} backLink={dict.back} />\n        <BlockTitle>{dict.task_form}</BlockTitle>\n        <TaskForm\n          task={task} title={title} isPublic={isPublic}\n          tags={tags} removeTag={this.removeTag} selectedMode={selectedMode}\n          details={details} defaultTask={defaultTask} submit={this.submit}\n          editing={true} handleChange={this.handleChangeValue}\n          deleteTaskConfirm={this.deleteTaskConfirm}\n          archived={archived} archiveNote={archiveNote}\n          />\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { List, ListItem, Link } from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\nimport Moment from 'react-moment';\nimport JDate from 'jalali-date';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\n\nconst InvolvementList = (props) => {\n\n  if (props.involvements) {\n    function removeLink(involvement){\n      if (involvement.role !== 'Creator' && props.editable){\n        return(<Link className=\"mt-4\" onClick={() => props.removeProfile(involvement.profile.id)}>{dict.remove}</Link>)\n      }\n    }\n\n    function select(involvement) {\n      if (involvement.role !== 'Creator' && props.editable) {\n        return (\n          <select name=\"role\" onChange={(e) => { props.changeRole(involvement.profile.id, e.target.value) }}>\n            {option('Admin', involvement)}\n            {option('Colleague', involvement)}\n            {option('Observer', involvement)}\n          </select>\n        )\n      }\n    }\n    function option(role, involvement) {\n      var selected = false\n      if (involvement.role == role) {\n        selected = true\n      }\n      return (<option value={role} selected={selected}>{dict[role]}</option>)\n    }\n    function addLink(involvement) {\n      if (props.removeProfile) {\n        return (\n          <div className='inline'>\n             {removeLink(involvement)}\n            <a className=\" fs-10 smart-select smart-select-init\" data-open-in=\"popover\">\n              {select(involvement)}\n              <div className=\"item-content\">\n                <div className=\"item-inner bg-w-after\">\n                  <div className=\"item-title\">{dict.role}</div>\n                  <div className=\"item-after mt-2\">{dict[involvement.role]}</div>\n                </div>\n              </div>\n            </a>\n          </div>\n        )\n      }\n    }\n    return (\n      <List className='fs-11'>\n        {props.involvements.map((involvement) =>\n          <ListItem\n            key={'involvement' + involvement.profile.id}\n            title={involvement.profile.fullname}\n            after={addLink(involvement)}>\n            <img slot=\"media\" src={involvement.profile.avatar} width=\"27\" height=\"27\" />\n          </ListItem>\n        )}\n      </List>\n    )\n  } else {\n    return (<ul></ul>)\n  }\n}\nexport default InvolvementList;\n","import React from \"react\";\nimport { Link, AccordionContent, Card, CardHeader, CardContent, List, ListItem, CardFooter, ListInput, Col } from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\nimport Moment from 'react-moment';\nimport JDate from 'jalali-date';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\nimport InvolvementList from \"./involvementList\";\nimport  SimpleList from \"../profiles/simpleList\";\n\nconst Partcipants = (props) => {\n    function editable() {\n        if (props.editable) {\n            return (\n                <List accordionList className='w-100'>\n                <ListItem accordionItem className='fs-10' title={\"+ \" + dict.add}>\n                    <AccordionContent>\n                        <List >\n                            <ListInput\n                                outline\n                                label={dict.search}\n                                floatingLabel\n                                type=\"text\"\n                                placeholder=\"\"\n                                clearButton\n                                onInput={(e) => {\n                                    props.searchProfile({ query: e.target.value })\n                                  }}\n                            />\n                        </List>\n                        <SimpleList profiles={props.profiles} addProfile={props.addProfile}  />\n                    </AccordionContent>\n                </ListItem>\n            </List>\n                )\n        }\n    }\n    if (props.work) {\n        return (\n            <Card>\n                <CardHeader>\n                    {dict.coworkers}\n                </CardHeader>\n                <CardContent>\n                    <List>\n                        <InvolvementList \n                            involvements={props.work.the_involvements} removeProfile={props.removeProfile} \n                            changeRole={props.changeRole} editable={props.editable} />\n                    </List>\n                </CardContent>\n                <CardFooter>\n                    {editable()}\n                </CardFooter>\n            </Card>\n        )\n    } else {\n        return (<ul></ul>)\n    }\n}\nexport default Partcipants;\n","import React from \"react\";\nimport { Block, AccordionContent, Icon, Chip, CardContent, List, ListItem, CardFooter, ListInput, Col } from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\nimport Moment from 'react-moment';\nimport JDate from 'jalali-date';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\nimport SimpleList from \"../statuses/simpleList\";\n\nconst Statuses = (props) => {\n    function chip(status) {\n        if (status) {\n            return (\n                <div>\n                    <div className=\"chip\" >\n                        <div className=\"chip-media\" style={{ backgroundColor: status.color }} >\n                            <i className=\"icon f7-icons if-not-md\">plus_circle</i>\n                            <i className=\"icon material-icons md-only\"></i>\n                        </div>\n                        <div className=\"chip-label\">{status.title}</div>\n                    </div>\n                </div>\n            )\n        } else {\n            return (<div>{dict.add_stauts}</div>)\n        }\n    }\n    function editable() {\n        if (props.editable) {\n            return (\n                <AccordionContent>\n                    <List >\n                        <ListInput\n                            outline\n                            label={dict.search}\n                            floatingLabel\n                            type=\"text\"\n                            placeholder=\"\"\n                            clearButton\n                            onInput={(e) => {\n                                props.searchStatus({ query: e.target.value })\n                            }}\n                        />\n                    </List>\n                    <SimpleList statuses={props.statuses} addStatus={props.addStatus} />\n                </AccordionContent>)\n        }\n    }\n    if (props.work) {\n\n        return (\n            <List accordionList className='w-100'>\n                <ListItem accordionItem className='fs-10'\n                    key={'status' + props.work.id}\n                    title={chip(props.work.status)}\n                >\n                    {editable()}\n                </ListItem>\n            </List>\n        )\n    } else {\n        return (<ul></ul>)\n    }\n}\nexport default Statuses;\n","import React from \"react\";\nimport { Block, Card, CardHeader, Link, CardContent, List, ListItem, CardFooter, ListInput, Col } from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\nimport Moment from 'react-moment';\nimport JDate from 'jalali-date';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\n\nconst Reports = (props) => {\n    if (props.work) {\n        function creation(t) {\n            var date = new Date(new window.ODate(t))\n            return(<Moment date={date} fromNow></Moment>)\n        }\n        function editable() {\n            if (props.editable) {\n                return ( <Link href={'/reports/new/works/' + props.work.id}><i className=\"ml-5 fa fa-plus\"></i> {dict.new}</Link>)\n            }\n        }\n        return (\n            <Card>\n                <CardHeader>\n                    {dict.reports}\n                    {editable()}\n                </CardHeader>\n                <CardContent>\n                    <List mediaList >\n                        {props.work.reports.map((report) =>\n                            <ListItem\n                                key={'report' + report.id}\n                                className='fs-11 work-media'\n                                link={\"/reports/\" + report.id}\n                                title={report.title}\n                                after={creation(report.creation_date)}\n                                text={report.content}\n                            >\n                            </ListItem>\n                        )}\n                    </List>\n                </CardContent>\n                <CardFooter>\n                    +\n              </CardFooter>\n            </Card>\n        )\n    } else {\n        return (<ul></ul>)\n    }\n}\nexport default Reports;\n","import React from \"react\";\nimport { List, ListItem, Chip, Link } from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\nimport Moment from 'react-moment';\nimport JDate from 'jalali-date';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\n\nconst TodosInvolvementsList = (props) => {\n\n  function addInvolvements(todo) {\n    var chips = []\n    todo.involvements.map((involvement) =>\n      chips.push(<Chip key={'chip' +'-'+todo.id +'-'+ involvement.profile.id} className=\"ml-5\" text={involvement.profile.fullname} />)\n    )\n    chips.push(<Link key={'todoEdit'+ todo.id} href={'/todos/' + todo.id + '/edit'}><i className=\"ml-5 fa fa-edit\"></i></Link>)\n    chips.push(<Link key={'todoDelete'+ todo.id} onClick={() => props.deleteTodoConfirm(todo.id)}><i className=\"ml-5 fa fa-trash\"></i></Link>)\n    return (chips)\n\n  }\n  function lt(todo) {\n    if (todo.check) {\n      return ('of-scroll line-through ')\n    } else {\n      return ('of-scroll')\n    }\n  }\n  if (props.todos) {\n    return (\n      <List className='fs-11 ' >\n        {props.todos.map((todo) =>\n\n          <li className={lt(todo)} key={'todo' + todo.id}>\n            <label className=\"item-content item-checkbox\">\n              <input type=\"checkbox\" value=\"\" checked={todo.check} onChange={(e) => props.todoChecked(todo.id,e)}></input>\n              <i className=\"icon icon-checkbox\"></i>\n              <div className=\"item-inner of-scroll\">\n                <div className=\"item-title of-visible mw-auto\">{todo.title}</div>\n                <div className=\"item-after\">\n                  <span>\n                    {addInvolvements(todo)}\n                  </span>\n                </div>\n              </div>\n            </label>\n          </li>\n        )}\n      </List>\n\n    )\n  } else {\n    return (<ul></ul>)\n  }\n}\nexport default TodosInvolvementsList;\n        /*<ListItem\nclassName={lt(todo)}\ncheckbox\nchecked={todo.check}\nonChange={(e) => props.todoChecked(todo.id,e)}\ntitle={todo.title}\nafter={addInvolvements(todo)}>\n</ListItem>*/","import React from \"react\";\nimport { List, ListItem, ListInput, Block, Row, Button, Link, Col } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport crypto from 'crypto-js';\n\n\nconst TodoForm = (props) => {\n  if (true) {\n    function involvementChecked(workInvolvement) {\n      var flag = false\n      props.involvements.map((involvement) => {\n        if (involvement.id === workInvolvement.profile.id) {\n          flag = true\n        }\n      }\n      )\n      return flag\n    }\n    return (\n      <List>\n        <ListInput\n          key='todos-form-title'\n          label={dict.title}\n          type=\"text\"\n          placeholder={dict.select_appropriate_title}\n          defaultValue={props.title}\n          required={true}\n          onInput={(e) => {\n            props.handleChange({ title: e.target.value })\n          }}\n        />\n\n        <List className='fs-11 ' >\n          {props.workInvolvements.map((workInvolvement) =>\n            <ListItem\n              key={workInvolvement.id}\n              checkbox\n              checked={involvementChecked(workInvolvement)}\n              onChange={(e) => props.involvementCheck(workInvolvement.profile.id, e)}\n              title={workInvolvement.profile.fullname}\n              after=''>\n            </ListItem>\n\n          )}\n        </List>\n\n\n\n        <Block strong>\n          <Row tag=\"p\">\n            <Col>\n            <Link className=\"btn-notice\"></Link>\n              <Button className=\"col btn\" fill disabled={!props.editing} onClick={props.submit}>{dict.submit}</Button>\n            </Col>\n          </Row>\n        </Block>\n      </List>\n    )\n  } else {\n    return (null)\n  }\n\n}\nexport default TodoForm;\n","import React from \"react\";\nimport { Link, AccordionContent, Card, CardHeader, CardContent, List, ListItem, CardFooter, ListInput, Button } from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\nimport Moment from 'react-moment';\nimport JDate from 'jalali-date';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\nimport TodosInvolvementsList from \"./todosInvolvementList\";\nimport  SimpleList from \"../profiles/simpleList\";\nimport  TodoForm from \"./form\";\n\nconst TodoList = (props) => {\n    if (props.work) {\n        function editable() {\n            if (props.editable) {\n                return ( <Link href={'/todos/new/' + props.work.id}><i className=\"ml-5 fa fa-plus\"></i> {dict.new}</Link>)\n            }\n        }\n        return (\n            <Card className='bg-gray'>\n                <CardHeader>\n                    {dict.todo_list}\n                    {editable()}\n                </CardHeader>\n                <CardContent>\n                    <List>\n                        <TodosInvolvementsList \n                        todos={props.todos} todoChecked={props.todoChecked} \n                        deleteTodoConfirm={props.deleteTodoConfirm}\n                        />\n                    </List>\n                </CardContent>\n                <CardFooter>\n                    \n                </CardFooter>\n            </Card>\n        )\n    } else {\n        return (<ul></ul>)\n    }\n}\nexport default TodoList;\n","import React from \"react\";\nimport { Block, AccordionContent, Card, Row, Col, CardHeader, CardContent, List, ListItem, Chip, Icon, CardFooter, BlockTitle, Link } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport Involvements from './involvements';\nimport Statuses from \"./status\";\nimport Reports from \"./reports\";\nimport Moment from 'react-moment';\nimport JDate from 'jalali-date';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\nimport CommentForm from \"../comments/form\"\nimport CommentList from \"../comments/list\"\nimport TodoList from \"../todos/list\"\n\nconst WorkShow = (props) => {\nconsole.log(props.work)\n  function archived(){\n    if(props.work.archived){\n      return(\n        <Row>\n        <Col width='100' tabletWidth='100'>\n        <Card className='fs-11 card-orange'>\n          <CardContent>\n          <i class=\"ml-2 fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>\n          {dict.archived} <br/>\n          {props.work.task.archive_note}\n          </CardContent>\n          \n        </Card>\n        </Col>\n      </Row>\n      )\n    }\n\n  }\n\n  function access(segment) {\n    if (segment === 'statuses') {\n      var editable = false\n      if (props.access.includes('statuses')) {\n        editable = true\n      }\n      return (\n        <Statuses\n          work={props.work} searchStatus={props.searchStatus} editable={editable}\n          statuses={props.statuses} addStatus={props.addStatus}\n        />\n      )\n    }\n\n    if (segment === 'involvements') {\n      var editable = false\n      if (props.access.includes('involvements')) {\n        editable = true\n      }\n      return (\n        <Involvements\n          work={props.work} searchProfile={props.searchProfile}\n          removeProfile={props.removeProfile} addProfile={props.addProfile}\n          profiles={props.profiles} changeRole={props.changeRole}\n          editable={editable} />\n      )\n    }\n\n    if (segment === 'todos') {\n      var editable = false\n      if (props.access.includes('todos')) {\n        editable = true\n      }\n      return (\n        <TodoList \n        work={props.work} todos={props.todos} \n        editable={editable} todoChecked={props.todoChecked}\n        deleteTodoConfirm={props.deleteTodoConfirm}\n        />\n      )\n    }\n\n\n    if (segment === 'reports') {\n      var editable = false\n      if (props.access.includes('reports')) {\n        editable = true\n      }\n      return (<Reports work={props.work} editable={editable} ></Reports>)\n    }\n\n    if (segment === 'comments') {\n      if (props.access.includes('comments')) {\n        return (<CommentForm model={props.work} submit={props.submitComment} handleChange={props.handleChange} />)\n      }\n    }\n\n    if (segment === 'edit') {\n      if (props.access.includes('edit')) {\n        return (<Link href={'/works/' + props.work.id + '/edit'}><i className=\"ml-5 fa fa-cog\"></i></Link>)\n      }\n    }\n\n\n    if (segment === 'view') {\n      if (props.access.includes('view')) {\n        return (\n          <React.Fragment>\n            {archived()}\n            <Row>\n              <Col width='100' tabletWidth='50'>\n                <Card>\n                  <CardHeader>\n                    {props.work.title}\n                    {access('edit')}\n                  </CardHeader>\n                  <CardContent>\n                    <List simple-list>\n                      <ListItem className='fs-11' title={dict.task + ': ' + props.work.task.title} href={'/tasks/' + props.work.task.id}></ListItem>\n                      <ListItem className='fs-11' title={dict.start_date + ': ' + props.work.start_date_j}></ListItem>\n                      <ListItem className='fs-11' title={dict.deadline + ': ' + props.work.deadline_date_j}></ListItem>\n\n                      <ListItem className='fs-11' title=''></ListItem>\n                    </List>\n                    <span className='fs-11'>{props.work.details}</span>\n\n                  </CardContent>\n                  <CardFooter>\n                    {access('statuses')}\n                  </CardFooter>\n                </Card>\n              </Col>\n\n              <Col width='100' tabletWidth='50'>\n                {access('involvements')}\n              </Col>\n            </Row>\n\n            <Row>\n              <Col width='100' tabletWidth='100'>\n                {access('todos')}\n              </Col>\n            </Row>\n\n            <Row>\n              <Col width='100' tabletWidth='100'>\n                {access('reports')}\n              </Col>\n            </Row>\n            {access('comments')}\n\n            <CommentList comments={props.comments} deleteCommentConfirm={props.deleteCommentConfirm}  />\n\n          </React.Fragment>\n        )\n      }\n    }\n\n  }\n\n  if (props.work && props.access) {\n    return (<React.Fragment>{access('view')}</React.Fragment>)\n  } else {\n    return (null)\n  }\n}\nexport default WorkShow;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  Link,\n  Icon, Fab\n} from 'framework7-react';\nimport { dict } from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport WorkShow from \"../../containers/works/show\"\n\nexport default class Layout extends Component {\n  constructor() {\n    super();\n    this.getInstance = this.getInstance.bind(this);\n    this.getList = this.getList.bind(this);\n    this.submit = this.submit.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.removeWork = this.removeWork.bind(this);\n    this.addAbility = this.addAbility.bind(this);\n    this.removeAbility = this.removeAbility.bind(this);\n    this.searchProfile = this.searchProfile.bind(this);\n    this.addProfile = this.addProfile.bind(this);\n    this.removeProfile = this.removeProfile.bind(this);\n    this.searchStatus = this.searchStatus.bind(this);\n    this.addStatus = this.addStatus.bind(this);\n    this.deleteComment = this.deleteComment.bind(this);\n    this.deleteCommentConfirm = this.deleteCommentConfirm.bind(this);\n    this.submitComment = this.submitComment.bind(this);\n    this.loadMore = this.loadMore.bind(this);\n    this.changeRole = this.changeRole.bind(this);\n    this.todoChecked = this.todoChecked.bind(this);\n    this.deleteTodoConfirm = this.deleteTodoConfirm.bind(this);\n    this.deleteTodo = this.deleteTodo.bind(this);\n    \n    \n    \n    this.state = {\n      token: window.localStorage.getItem('token'),\n      work: null,\n      id: null,\n      users: null,\n      assignedUsers: null,\n      user_id: null,\n      abilityTitle: '',\n      abilityValue: true,\n      ability: null,\n      query: null,\n      profiles: [],\n      statuses: [],\n      commentContent: '',\n      access: null,\n      comments: null,\n      todos: [],\n    }\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.getInstance);\n    ModelStore.on(\"got_list\", this.getList);\n    ModelStore.on(\"deleted_instance\", this.getInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.getInstance);\n    ModelStore.removeListener(\"got_list\", this.getList);\n    ModelStore.removeListener(\"deleted_instance\", this.getInstance);\n  }\n\n  componentDidMount() {\n    MyActions.getInstance('works', this.$f7route.params['workId'], this.state.token);\n  }\n\n  getInstance() {\n    var work = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (work && klass === 'Work') {\n      this.setState({\n        work: work,\n        id: work.id,\n        assignedUsers: work.users,\n        ability: work.ability,\n        comments: work.the_comments,\n        access: work.user_access,\n        todos: work.the_todos,\n        //involvementss: work.the_involvementss\n      });\n    }\n    this.$$('.btn').show();\n  }\n\n  getList() {\n    var list = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    if (list && klass === 'User') {\n      this.setState({\n        users: list,\n      });\n    }\n    if (list && klass === 'Profile') {\n      this.setState({\n        profiles: list,\n      });\n    }\n    if (list && klass === 'Status') {\n      this.setState({\n        statuses: list,\n      });\n    }\n  }\n\n  submit() {\n    this.$$('.btn').hide();\n    this.$$('.btn-notice').text(dict.submitting);\n    var data = { work_id: this.state.id, user_id: this.state.user_id }\n    MyActions.setInstance('users/assignments', data, this.state.token);\n  }\n\n  searchProfile(obj){\n    this.setState({ profiles: []});\n    this.setState(obj, () => {\n      MyActions.getList('profiles/search', this.state.page, {q: this.state.query});\n  });  \n  }\n\n  searchStatus(obj){\n    this.setState({ statuses: []});\n    this.setState(obj, () => {\n      MyActions.getList('statuses/search', this.state.page, {q: this.state.query});\n  });  \n  }\n\n  addProfile(profileId){\n    var data = { id: this.state.id, profile_id: profileId}\n    MyActions.setInstance('works/involvements', data, this.state.token);\n  }\n\n  addStatus(statusId){\n    var data = { id: this.state.id, status_id: statusId}\n    MyActions.setInstance('works/status', data, this.state.token);\n  }\n\n  removeProfile(profileId) {\n    var data = { id: this.state.id, profile_id: profileId}\n    MyActions.removeInstance('works/involvements', data, this.state.token);\n  }\n\n  addAbility() {\n    var data = { id: this.state.id, ability_title: this.state.abilityTitle, ability_value: this.state.abilityValue}\n    MyActions.setInstance('works/abilities', data, this.state.token);\n  }\n\n  changeRole(profile_id, role) {\n    var data = { id: this.state.id, profile_id: profile_id, role: role}\n    MyActions.setInstance('works/change_role', data, this.state.token);\n  }\n\n\n  loadMore() {\n    this.setState({ page: this.state.page + 1 }, () => {\n      MyActions.getInstance('works', this.$f7route.params['workId'], this.state.token, this.state.page);\n    });\n  }\n\n\n  submitComment() {\n    var data = { commentable_type: 'Work' ,commentable_id: this.state.id, content: this.state.commentContent }\n    MyActions.setInstance('comments', data, this.state.token);\n  }\n\n\n  deleteCommentConfirm(id){\n    const self = this;\n    const app = self.$f7;\n    app.dialog.confirm(dict.are_you_sure, dict.alert, () => self.deleteComment(id))\n  }\n\n  deleteComment(id) {\n    var data = { id: id }\n    MyActions.removeInstance('comments', data, this.state.token, this.state.page);\n  }\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  todoChecked(id, e){\n    var data={id: id, is_done: e.target.checked}\n    MyActions.setInstance('todos/check_todo', data, this.state.token);\n  }\n\n  fab() {\n    if (this.state.work) {\n      return (\n        <Fab href={\"/works/\" + this.state.work.id + \"/edit\"} target=\"#main-view\" position=\"left-bottom\" slot=\"fixed\" color=\"lime\">\n          <Icon ios=\"f7:edit\" aurora=\"f7:edit\" md=\"material:edit\"></Icon>\n          <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n        </Fab>\n      )\n    }\n  }\n\n  deleteTodoConfirm(id){\n    const self = this;\n    const app = self.$f7;\n    app.dialog.confirm(dict.are_you_sure, dict.alert, () => self.deleteTodo(id))\n  }\n\n  deleteTodo(id){\n    var data = {id: id}\n    MyActions.removeInstance('todos', data, this.state.token);\n  }\n\n  removeWork(user_id) {\n    MyActions.removeInstance('users/assignments', { user_id: user_id, work_id: this.state.id }, this.state.token);\n  }\n\n  removeAbility(title){\n    MyActions.removeInstance('works/abilities', { id: this.state.id, title: title }, this.state.token);\n  }\n\n  render() {\n    const { work, users, assignedUsers, ability, profiles, statuses, comments, commentContent, access, todos } = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.works} backLinkForce={true} backLink={dict.back} >\n        <Link panelOpen=\"right\">\n          <Icon f7=\"bars\"></Icon>\n        </Link>\n        </Navbar>\n        <WorkShow \n          work={work} users={users} ability={ability} profiles={profiles} statuses={statuses}\n          removeProfile={this.removeProfile} addProfile={this.addProfile}\n          searchProfile={this.searchProfile} removeAbility={this.removeAbility}\n          assignedUsers={assignedUsers} addAbility={this.addAbility} \n          removeWork={this.removeWork} submit={this.submit} handleChange={this.handleChangeValue}\n          searchStatus={this.searchStatus} addStatus={this.addStatus}\n          submitComment={this.submitComment} deleteCommentConfirm={this.deleteCommentConfirm}\n          commentContent={commentContent} comments={comments} loadMore={this.loadMore}\n          changeRole={this.changeRole} access={access} todos={todos} \n          todoChecked={this.todoChecked} deleteTodoConfirm={this.deleteTodoConfirm}\n          />\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { List, ListItem} from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\nimport Moment from 'react-moment';\nimport JDate from 'jalali-date';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\n\nconst WorkList = (props) => {\n  function title(t) {\n    var date = new Date(new window.ODate(t))\n    return(<Moment date={date} fromNow></Moment>)\n  }\n  if (props.works) {\n    console.log(props.works)\n    \n    return (\n      <List>\n        {props.works.map((work) =>\n        <ListItem key={'worklist' + work.id} header={work.title} title={title(work.deadline_date)} link={'/works/'+work.id}></ListItem>\n        )}\n      </List>\n    )\n  } else {\n    return (<ul></ul>)\n  }\n}\nexport default WorkList;\n","import React from \"react\";\nimport { Page, Navbar, List, BlockTitle, ListItem, Fab, Icon,Preloader, Block} from 'framework7-react';\nimport WorkList from \"./list\"\nimport { dict} from '../../Dict';\n\nconst WorkIndex = (props) => {\n  return(\n    <Page>\n      <Navbar title={dict.works} backLink={dict.back} >\n      </Navbar>\n      <BlockTitle>{dict.list}</BlockTitle>\n      <WorkList works={props.works}/>\n    </Page>\n  )\n}\nexport default WorkIndex;\n","import React from \"react\"\nimport { Page,Fab, Icon } from 'framework7-react';\nimport ModelStore from \"../../stores/ModelStore\";\nimport WorkIndex from \"../../containers/works/index\"\nimport * as MyActions from \"../../actions/MyActions\";\nimport { dict} from '../../Dict';\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\n\nexport default class Layout extends React.Component {\n  constructor() {\n    super();\n    this.getList = this.getList.bind(this);\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      works: null,\n    }\n  }\n  componentWillMount() {\n    ModelStore.on(\"got_list\", this.getList);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_list\", this.getList);\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  loadData(){\n    const f7: Framework7 = Framework7.instance;\n    f7.toast.show({ text: dict.receiving, closeTimeout: 2000, position: 'top'});\n    MyActions.getList('works', this.state.page, {}, this.state.token);\n  }\n\n  getList() {\n    var works = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    if (works && klass === 'Work'){\n      this.setState({\n        works: works,\n      });\n    }\n  }\n\n  render() {\n    const {works} = this.state;\n    return(<WorkIndex works={works}/>)\n  }\n}\n","import React from \"react\";\nimport { List, Col, ListInput, Block, Row, Button, BlockTitle, Card, Link } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport crypto from 'crypto-js';\n\n\nconst WorkForm = (props) => {\n  if (props.privateWork) {\n    var isPrivateWork = true;\n  } else {\n    var isPrivateWork = false\n  }\n\n  function deleteButton() {\n    if (props.editing) {\n      return (\n        <Col>\n          <Button className=\"col btn ml-5\" outline color='red' disabled={!props.editing} onClick={() => props.deleteWorkConfirm()}>{dict.delete}</Button>\n        </Col>\n      )\n    }\n  }\n  return (\n    <Card>\n      <BlockTitle>{dict.work}</BlockTitle>\n      <List >\n        <ListInput\n          label={dict.title}\n          type=\"text\"\n          placeholder={dict.select_appropriate_title}\n          defaultValue={props.work.title}\n          required={true}\n          onInput={(e) => {\n            props.handleChange({ title: e.target.value })\n          }}\n        />\n\n        <ListInput\n          label={dict.details}\n          type=\"textarea\"\n          placeholder={dict.write_appropriate_description}\n          value={props.content}\n          onInput={(e) => {\n            props.handleChange({ details: e.target.value })\n          }}\n        />\n\n        <ListInput\n          label={dict.priority}\n          type=\"select\"\n          defaultValue={props.priority}\n          onChange={(e) => {\n            props.handleChange({ priority: e.target.value })\n          }}\n        >\n          <option value=\"normal\">{dict.normal}</option>\n          <option value=\"high\">{dict.high}</option>\n          <option value=\"urgent\">{dict.urgent}</option>\n        </ListInput>\n\n\n        <li>\n          <div class=\"item-content item-input\">\n            <div class=\"item-inner\">\n              <div class=\"item-title item-label\">{dict.start_date}</div>\n              <div class=\"item-input-wrap\">\n                <input type=\"text\" placeholder={dict.select_a_date} readonly=\"readonly\" id=\"start-calendar\" />\n              </div>\n            </div>\n          </div>\n        </li>\n\n        <li>\n          <div class=\"item-content item-input\">\n            <div class=\"item-inner\">\n              <div class=\"item-title item-label\">{dict.start_time}</div>\n              <div class=\"item-input-wrap\">\n                <input type=\"text\" placeholder={dict.select_a_time} value={props.startTime} readonly=\"readonly\" id=\"start-time-picker\" />\n              </div>\n            </div>\n          </div>\n        </li>\n        <li>\n          <div class=\"item-content item-input\">\n\n          </div>\n        </li>\n        <li>\n          <div class=\"item-content item-input\">\n            <div class=\"item-inner\">\n              <div class=\"item-title item-label\">{dict.deadline}</div>\n              <div class=\"item-input-wrap\">\n                <input type=\"text\" placeholder={dict.select_a_date} readonly=\"readonly\" id=\"deadline-calendar\" />\n              </div>\n            </div>\n          </div>\n        </li>\n\n        <li>\n          <div class=\"item-content item-input\">\n            <div class=\"item-inner\">\n              <div class=\"item-title item-label\">{dict.deadline_time}</div>\n              <div class=\"item-input-wrap\">\n                <input type=\"text\" placeholder={dict.select_a_time} value={props.deadlineTime} readonly=\"readonly\" id=\"deadline-time-picker\" />\n              </div>\n            </div>\n          </div>\n        </li>\n      </List>\n\n      <Block strong>\n        <Row tag=\"p\">\n          {deleteButton()}\n          <Link className=\"btn-notice\"></Link>\n          <Button className=\"col btn\" fill onClick={props.submit}>{dict.submit}</Button>\n        </Row>\n      </Block>\n    </Card >\n\n  )\n}\nexport default WorkForm;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  BlockTitle,\n} from 'framework7-react';\nimport { dict } from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport WorkForm from \"../../containers/works/form\"\n\nexport default class WorkCreate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.loadCalender = this.loadCalender.bind(this);\n    this.pageAfterIn = this.pageAfterIn.bind(this);\n    \n    this.state = {\n      token: window.localStorage.getItem('token'),\n      work: {},\n      title: null,\n      details: null,\n      deadline: new Date(),\n      start: new Date(),\n      startTime:  '0:00',\n      deadlineTime: '0:00',\n      privateWork: true,\n      priority: 'normal',\n    }\n  }\n\n\n  componentWillMount() {\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n  }\n\n  componentDidMount() {\n\n  }\n\n  pageAfterIn() {\n    this.loadCalender();\n    this.loadTime();\n  }\n\n  loadTime(){\n    var today = new Date();\n    const self = this;\n    const app = self.$f7;\n    \n    app.picker.create({\n      inputEl: '#start-time-picker',\n        rotateEffect: true,\n        on: {\n          closed: function (picker) {\n            self.setState({ startTime: picker.value[1]+':'+picker.value[0]});\n          }\n        },\n        cols: [\n          {\n            values: ('00 15 30 45').split(' ')\n          },\n          {\n            textAlign: 'left',\n            values: ('0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23').split(' ')\n          },\n\n        ]\n    });\n    app.picker.create({\n      inputEl: '#deadline-time-picker',\n        rotateEffect: true,        on: {\n          closed: function (picker) {\n            self.setState({ deadlineTime: picker.value[1]+':'+picker.value[0]});\n          }\n        },\n        cols: [\n          {\n            values: ('00 15 30 45').split(' ')\n          },\n          {\n            textAlign: 'left',\n            values: ('0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23').split(' ')\n          },\n\n        ]\n    });\n  }\n\n  loadCalender(){\n    const self = this;\n    const app = self.$f7;\n\n    app.calendar.create({\n      inputEl: '#start-calendar',\n      value: [new Date()],\n      closeOnSelect: true,\n      firstDay: 6,\n      weekendDays: [4, 5],\n      monthNames: ['فروردين', 'ارديبهشت', 'خرداد', 'تیر', 'مرداد', 'شهریور', 'مهر', 'آبان', 'آذر', 'دی', 'بهمن', 'اسفند'],\n      dayNames: ['یکشنبه', 'دوشنبه', 'سه شنبه', 'چهارشنبه', 'پنج‌شنبه', 'جمعه', 'شنبه'],\n      dayNamesShort: ['یک', 'دو', 'سه ', 'چهار', 'پنج‌', 'جمعه', 'شنبه'],\n      on: {\n        closed: function (c) {\n          console.log(c.value[0].a)\n          self.setState({ start: c.value[0].a });\n        }\n      }\n    });\n\n    app.calendar.create({\n      inputEl: '#deadline-calendar',\n      closeOnSelect: true,\n      value: [new Date()],\n      firstDay: 6,\n      weekendDays: [4, 5],\n      monthNames: ['فروردين', 'ارديبهشت', 'خرداد', 'تیر', 'مرداد', 'شهریور', 'مهر', 'آبان', 'آذر', 'دی', 'بهمن', 'اسفند'],\n      dayNames: ['یکشنبه', 'دوشنبه', 'سه شنبه', 'چهارشنبه', 'پنج‌شنبه', 'جمعه', 'شنبه'],\n      dayNamesShort: ['یک', 'دو', 'سه ', 'چهار', 'پنج‌', 'جمعه', 'شنبه'],\n      on: {\n        closed: function (c) {\n          self.setState({ deadline: c.value[0].a });\n        }\n      }\n\n    });\n  }\n\n  submit() {\n    this.$$('.btn').hide();\n    this.$$('.btn-notice').text(dict.submitting);\n    var data = { \n      title: this.state.title, details: this.state.details, \n      start: this.state.start, start_time: this.state.startTime, \n      deadline: this.state.deadline, deadline_time: this.state.deadlineTime,\n      task_id: this.$f7route.params['taskId'], priority: this.state.priority\n    }\n    if (this.state.title && this.state.title.length > 0) {\n      MyActions.setInstance('works', data, this.state.token);\n    } else {\n      const self = this;\n      self.$f7.dialog.alert(dict.incomplete_data, dict.alert);\n    }\n\n  }\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  setInstance() {\n    var work = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (work && klass === 'Work') {\n      this.$$('.btn').show();\n      this.$f7router.navigate('/works/'+work.id);\n    } else {\n      this.$$('.btn').show();\n      this.$f7router.navigate('/tasks/');\n    }\n    \n  }\n\n\n\n  render() {\n    const { work } = this.state;\n    return (\n      <Page onPageAfterIn={this.pageAfterIn.bind(this)}>\n        <Navbar title={dict.work_form} backLink={dict.back} />\n        <BlockTitle>{dict.work_form}</BlockTitle>\n        <WorkForm work={work} submit={this.submit} editing={false} handleChange={this.handleChangeValue} />\n      </Page>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon\n} from 'framework7-react';\nimport { dict } from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport WorkForm from \"../../containers/works/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\nexport default class DocumentUpdate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.getInstance = this.getInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.loadTime = this.loadTime.bind(this);\n    this.loadCalender = this.loadCalender.bind(this);\n    this.pageAfterIn = this.pageAfterIn.bind(this);\n    this.deleteWorkConfirm = this.deleteWorkConfirm.bind(this);\n    this.deleteWork = this.deleteWork.bind(this);\n    this.deleteInstance = this.deleteInstance.bind(this);\n\n    \n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      work: {},\n      id: null,\n      title: null,\n      details: null,\n      deadline: new Date(),\n      start: new Date(),\n      startTime: '0 00',\n      deadlineTime: '0 00',\n      privateWork: true,\n      priority: 'normal',\n    }\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.setInstance);\n    ModelStore.on(\"deleted_instance\", this.deleteInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n    ModelStore.removeListener(\"deleted_instance\", this.deleteInstance);\n\n  }\n\n  pageAfterIn() {\n    this.loadTime();\n  }\n\n  loadTime() {\n    var today = new Date();\n    const self = this;\n    const app = self.$f7;\n\n    app.picker.create({\n      inputEl: '#start-time-picker',\n      rotateEffect: true,\n      on: {\n        closed: function (picker) {\n          self.setState({ startTime: picker.value[1] + ':' + picker.value[0] });\n        }\n      },\n      cols: [\n        {\n          values: ('00 15 30 45').split(' ')\n        },\n        {\n          textAlign: 'left',\n          values: ('0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23').split(' ')\n        },\n\n      ]\n    });\n    app.picker.create({\n      inputEl: '#deadline-time-picker',\n      rotateEffect: true, on: {\n        closed: function (picker) {\n          self.setState({ deadlineTime: picker.value[1] + ':' + picker.value[0] });\n        }\n      },\n      cols: [\n        {\n          values: ('00 15 30 45').split(' ')\n        },\n        {\n          textAlign: 'left',\n          values: ('0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23').split(' ')\n        },\n\n      ]\n    });\n  }\n\n  loadCalender() {\n    const self = this;\n    const app = self.$f7;\n\n    app.calendar.create({\n      inputEl: '#start-calendar',\n      value: [this.state.start],\n      closeOnSelect: true,\n      firstDay: 6,\n      weekendDays: [4, 5],\n      monthNames: ['فروردين', 'ارديبهشت', 'خرداد', 'تیر', 'مرداد', 'شهریور', 'مهر', 'آبان', 'آذر', 'دی', 'بهمن', 'اسفند'],\n      dayNames: ['یکشنبه', 'دوشنبه', 'سه شنبه', 'چهارشنبه', 'پنج‌شنبه', 'جمعه', 'شنبه'],\n      dayNamesShort: ['یک', 'دو', 'سه ', 'چهار', 'پنج‌', 'جمعه', 'شنبه'],\n      on: {\n        closed: function (c) {\n          self.setState({ start: c.value[0].a });\n        }\n      }\n    });\n\n    app.calendar.create({\n      inputEl: '#deadline-calendar',\n      closeOnSelect: true,\n      value: [this.state.deadline],\n      firstDay: 6,\n      weekendDays: [4, 5],\n      monthNames: ['فروردين', 'ارديبهشت', 'خرداد', 'تیر', 'مرداد', 'شهریور', 'مهر', 'آبان', 'آذر', 'دی', 'بهمن', 'اسفند'],\n      dayNames: ['یکشنبه', 'دوشنبه', 'سه شنبه', 'چهارشنبه', 'پنج‌شنبه', 'جمعه', 'شنبه'],\n      dayNamesShort: ['یک', 'دو', 'سه ', 'چهار', 'پنج‌', 'جمعه', 'شنبه'],\n      on: {\n        closed: function (c) {\n          //console.log(c.value[0].a)\n          self.setState({ deadline: c.value[0].a });\n        }\n      }\n\n    });\n  }\n\n\n\n  submit() {\n    this.$$('.btn').hide();\n    this.$$('.btn-notice').text(dict.submitting);\n    var data = { \n      id: this.state.id, title: this.state.title, details: this.state.details,\n      start: this.state.start, start_time: this.state.startTime, \n      deadline: this.state.deadline, deadline_time: this.state.deadlineTime,\n      priority: this.state.priority\n    }// start: new Date(this.state.start.setHours(startTime[0], startTime[1], 0, 0)).toISOString(), deadline:  new Date(this.state.deadline.setHours(deadlineTime[0], deadlineTime[1], 0, 0)).toISOString() }\n    if (this.state.title && this.state.title.length > 0) {\n      MyActions.updateInstance('works', data, this.state.token);\n    } else {\n      const self = this;\n      self.$f7.dialog.alert(dict.incomplete_data, dict.alert);\n    }\n\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  loadData() {\n    const f7: Framework7 = Framework7.instance;\n    f7.toast.show({ text: dict.receiving, closeTimeout: 2000, position: 'top' });\n    if (this.$f7route.params['workId']) {\n      MyActions.getInstance('works', this.$f7route.params['workId'], this.state.token);\n    }\n  }\n\n\n  getInstance() {\n    var work = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (work && klass === 'Work') {\n      this.setState({\n        title: work.title,\n        content: work.details,\n        id: work.id,\n        work: work,\n        start: new window.ODate(work.start_date),\n        deadline: new window.ODate(work.deadline_date),\n        startTime: work.start_time,\n        deadlineTime: work.deadline_time,\n        defaultWork: work.default_work,\n        priority: work.priority\n      }, () => this.loadCalender());\n    }\n  }\n\n  deleteWorkConfirm(){\n    const self = this;\n    const app = self.$f7;\n    app.dialog.confirm(dict.are_you_sure, dict.alert, self.deleteWork)\n  }\n\n  deleteWork(){\n    var data = { id: this.state.id}\n    MyActions.removeInstance('works', data, this.state.token);\n  }\n\n  deleteInstance() {\n    this.$f7router.navigate('/tasks/');\n  }\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n\n  setInstance() {\n    this.$$('.btn').show();\n    this.$f7router.navigate('/works/'+this.state.id);\n  }\n\n\n  render() {\n    const { work, defaultWork, title, content, startTime, deadlineTime, priority } = this.state;\n    return (\n      <Page onPageAfterIn={this.pageAfterIn.bind(this)}>\n        <Navbar title={dict.work_form} backLink={dict.back} />\n        <BlockTitle>{dict.work_form}</BlockTitle>\n        <WorkForm \n        work={work} title={title} startTime={startTime} \n        deadlineTime={deadlineTime} content={content} \n        defaultWork={defaultWork} submit={this.submit} \n        editing={true} handleChange={this.handleChangeValue} \n        deleteWorkConfirm={this.deleteWorkConfirm}\n        priority={priority}\n        />\n      </Page>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  BlockTitle,\n} from 'framework7-react';\nimport { dict } from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport TodoForm from \"../../containers/todos/form\"\n\nexport default class TodoCreate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.getInstance = this.getInstance.bind(this);\n    this.involvementCheck = this.involvementCheck.bind(this);\n    \n    \n    this.state = {\n      token: window.localStorage.getItem('token'),\n      todo: {},\n      title: null,\n      involvements: [],\n      workInvolvements: [],\n    }\n  }\n\n\n  componentWillMount() {\n    ModelStore.on(\"set_instance\", this.setInstance);\n    ModelStore.on(\"got_instance\", this.getInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n  }\n\n  componentDidMount() {\n    MyActions.getInstance('works', this.$f7route.params['workId'], this.state.token);\n  }\n\n\n  submit() {\n    this.$$('.btn').hide();\n    this.$$('.btn-notice').text(dict.submitting);\n    var data = { \n        title: this.state.title, work_id: this.$f7route.params['workId'],\n        involvements: this.state.involvements\n    }\n    if (this.state.title && this.state.title.length > 0) {\n      MyActions.setInstance('todos', data, this.state.token);\n    } else {\n      const self = this;\n      self.$f7.dialog.alert(dict.incomplete_data, dict.alert);\n    }\n\n  }\n\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  setInstance() {\n    var todo = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (todo && klass === 'Todo') {\n      this.$$('.btn').show();\n      this.$f7router.navigate('/works/'+todo.work_id);\n    } \n  }\n\n  getInstance() {\n    var work = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (work && klass === 'Work') {\n      this.setState({\n        workInvolvements: work.the_involvements\n      });\n    }\n  }\n\n  involvementCheck(id, e){\n    if (e.target.checked) {\n      this.setState({ involvements: this.state.involvements.concat({ id: id })})\n    } else {\n      this.setState({\n        involvements: this.state.involvements.filter(function (involvement) {\n          return involvement.id !== id\n        })\n      });\n    }\n  }\n\n\n\n  render() {\n    const { todo, involvements, workInvolvements } = this.state;\n    return (\n      <Page  backLink={dict.back} backLinkForce={true}>\n        <Navbar title={dict.work_form} backLink={dict.back} />\n        <BlockTitle>{dict.work_form}</BlockTitle>\n        <TodoForm \n        todo={todo} workInvolvements={workInvolvements}\n         involvements={involvements} removeInvolvement={this.removeInvolvement}\n        submit={this.submit} editing={true} involvementCheck={this.involvementCheck}\n        handleChange={this.handleChangeValue} />\n      </Page>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  BlockTitle,\n} from 'framework7-react';\nimport { dict } from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport TodoForm from \"../../containers/todos/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\nexport default class TodoCreate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.removeInvolvement = this.removeInvolvement.bind(this);\n    this.getInstance = this.getInstance.bind(this);\n    this.involvementCheck = this.involvementCheck.bind(this);\n    this.setInvolvements = this.setInvolvements.bind(this);\n    \n    \n    this.state = {\n      token: window.localStorage.getItem('token'),\n      todo: {},\n      title: null,\n      id: null, \n      involvements: [],\n      workInvolvements: [],\n    }\n  }\n\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  loadData() {\n    const f7: Framework7 = Framework7.instance;\n    f7.toast.show({ text: dict.receiving, closeTimeout: 2000, position: 'top' });\n    if (this.$f7route.params['todoId']) {\n      MyActions.getInstance('todos', this.$f7route.params['todoId'], this.state.token);\n    }\n  }\n\n\n  submit() {\n    this.$$('.btn').hide();\n    this.$$('.btn-notice').text(dict.submitting);\n    var data = { \n        id: this.state.id,\n        title: this.state.title,\n        involvements: this.state.involvements\n    }\n    if (this.state.title && this.state.title.length > 0) {\n      MyActions.updateInstance('todos', data, this.state.token);\n    } else {\n      const self = this;\n      self.$f7.dialog.alert(dict.incomplete_data, dict.alert);\n    }\n\n  }\n\n  removeInvolvement(id) {\n    this.setState({\n      involvements: this.state.involvements.filter(function (involvement) {\n        return involvement.id !== id\n      })\n    });\n  }\n\n  getInstance() {\n    var todo = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (todo && klass === 'Todo') {\n      this.setState({\n        title: todo.title,\n        id: todo.id,\n        //involvements: todo.involvement_tags,\n        workInvolvements: todo.work_involvements\n      }, () =>  this.setInvolvements());\n    }\n  }\n\n  setInvolvements(){\n    this.setState({ involvements: [] });\n    var arr = []\n    this.state.workInvolvements.map((workInvolvement) => {\n      if(workInvolvement.check){\n        arr.push({ id: workInvolvement.profile.id })\n      }\n    })\n    this.setState({ involvements: arr})\n  }\n\n\n  involvementCheck(id, e){\n    if (e.target.checked) {\n      this.setState({ involvements: this.state.involvements.concat({ id: id })})\n    } else {\n      this.setState({\n        involvements: this.state.involvements.filter(function (involvement) {\n          return involvement.id !== id\n        })\n      });\n    }\n  }\n\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  setInstance() {\n    var todo = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (todo && klass === 'Todo') {\n      this.$$('.btn').show();\n      this.$f7router.navigate('/works/'+todo.work_id);\n    } \n  }\n\n\n\n  render() {\n    const { todo, involvements, title , workInvolvements} = this.state;\n    return (\n      <Page  backLink={dict.back} backLinkForce={true}>\n        <Navbar title={dict.work_form} backLink={dict.back} />\n        <BlockTitle>{dict.work_form}</BlockTitle>\n        <TodoForm \n        todo={todo} workInvolvements={workInvolvements}\n         title={title} involvements={involvements} involvementCheck={this.involvementCheck}\n        removeInvolvement={this.removeInvolvement} submit={this.submit} editing={true} handleChange={this.handleChangeValue} />\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { Page, Navbar, List, BlockTitle, ListItem, Chip, Icon, Preloader, Block } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport CommentForm from \"../comments/form\"\nimport CommentList from \"../comments/list\"\n\n\nconst TimeSheetShow = (props) => {\n  function association(kind) {\n    var chips = [\n      <div>\n        <div className=\"item-title fs-11\">\n          {dict.associations}:\n        </div>\n      </div>\n    ]\n    if (props.time_sheet.the_associations) {\n      props.time_sheet.the_associations.map((association) => {\n        if (association.kind == kind) {\n          chips.push(<a href={'/' + association.a_type + '/' + association.id + '/'}><Chip text={association.title} /></a>)\n        }\n      }\n      )\n    }\n    return chips\n  }\n\n  if (props.time_sheet) {\n    return (\n      <React.Fragment>\n        <BlockTitle>{dict.sheet_date}</BlockTitle>\n        <List simple-list>\n          <ListItem>{props.time_sheet.jdate}</ListItem>\n        </List>\n\n        <List className='fs-11'>\n        {props.time_sheet.the_involvements.map((involvement) =>\n          <ListItem\n            key={'involvement' + involvement.profile.id}\n            title={involvement.profile.fullname}\n            after=''>\n            <img slot=\"media\" src={involvement.profile.avatar} width=\"27\" height=\"27\" />\n          </ListItem>\n        )}\n      </List>\n\n        <BlockTitle>{dict.morning_report}</BlockTitle>\n        <List simple-list>\n          <ListItem>{props.time_sheet.morning_report}</ListItem>\n          <ListItem>{association('Morning')}</ListItem>\n        </List>\n\n        <BlockTitle>{dict.afternoon_report}</BlockTitle>\n        <List simple-list>\n          <ListItem>{props.time_sheet.afternoon_report}</ListItem>\n          <ListItem>{association('Afternoon')}</ListItem>\n        </List>\n\n        <BlockTitle>{dict.extra_report}</BlockTitle>\n        <List simple-list>\n          <ListItem>{props.time_sheet.extra_report}</ListItem>\n          <ListItem>{association('Extra')}</ListItem>\n        </List>\n\n        <CommentForm model={props.time_sheet} submit={props.submitComment} handleChange={props.handleChange}/>\n\n        <CommentList\n                comments={props.comments} deleteCommentConfirm={props.deleteCommentConfirm}\n                loadMore={props.loadMore} />\n      </React.Fragment>\n    )\n  } else {\n    return (null)\n  }\n}\nexport default TimeSheetShow;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon, Fab\n} from 'framework7-react';\nimport { dict } from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport TimeSheetShow from \"../../containers/time_sheets/show\"\n\nexport default class Layout extends Component {\n  constructor() {\n    super();\n    this.getInstance = this.getInstance.bind(this);\n    this.getList = this.getList.bind(this);\n    this.submit = this.submit.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.deleteComment = this.deleteComment.bind(this);\n    this.submitComment = this.submitComment.bind(this);\n    this.deleteCommentConfirm = this.deleteCommentConfirm.bind(this);\n    \n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      time_sheet: null,\n      id: null,\n      user_id: null,\n      comments: null,\n    }\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.getInstance);\n    ModelStore.on(\"got_list\", this.getList);\n    ModelStore.on(\"deleted_instance\", this.getInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.getInstance);\n    ModelStore.removeListener(\"got_list\", this.getList);\n    ModelStore.removeListener(\"deleted_instance\", this.getInstance);\n  }\n\n  componentDidMount() {\n    MyActions.getInstance('time_sheets', this.$f7route.params['timeSheetId'], this.state.token);\n  }\n\n  getInstance() {\n    var time_sheet = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (time_sheet && klass === 'TimeSheet') {\n      this.setState({\n        time_sheet: time_sheet,\n        id: time_sheet.id,\n        comments: time_sheet.the_comments,\n      });\n    }\n    this.$$('.btn').show();\n  }\n\n  getList() {\n    var users = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    if (users && klass === 'User') {\n      this.setState({\n        users: users,\n      });\n    }\n  }\n\n  submit() {\n    this.$$('.btn').hide();\n    this.$$('.btn-notice').text(dict.submitting);\n    var data = { time_sheet_id: this.state.id, user_id: this.state.user_id }\n    MyActions.setInstance('users/assignments', data, this.state.token);\n  }\n\n  submitComment() {\n    var data = { commentable_type: 'TimeSheet' ,commentable_id: this.state.id, content: this.state.commentContent }\n    MyActions.setInstance('comments', data, this.state.token);\n  }\n\n\n  deleteCommentConfirm(id){\n    const self = this;\n    const app = self.$f7;\n    app.dialog.confirm(dict.are_you_sure, dict.alert, () => self.deleteComment(id))\n  }\n\n  deleteComment(id) {\n    var data = { id: id }\n    MyActions.removeInstance('comments', data, this.state.token, this.state.page);\n  }\n\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  fab() {\n    if (this.state.time_sheet) {\n      return (\n        <Fab href={\"/time_sheets/\" + this.state.time_sheet.id + \"/edit\"} target=\"#main-view\" position=\"left-bottom\" slot=\"fixed\" color=\"lime\">\n          <Icon ios=\"f7:edit\" aurora=\"f7:edit\" md=\"material:edit\"></Icon>\n          <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n        </Fab>\n      )\n    }\n  }\n\n  render() {\n    const { time_sheet, comments } = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.time_sheets} backLink={dict.back} />\n        <BlockTitle></BlockTitle>\n        {this.fab()}\n        <TimeSheetShow \n          time_sheet={time_sheet} \n          submit={this.submit} handleChange={this.handleChangeValue} \n          comments={comments}\n          submitComment={this.submitComment} deleteCommentConfirm={this.deleteCommentConfirm}\n          />\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { List, ListItem, CardHeader, CardContent, CardFooter, Card, Button, Link } from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\n\nconst TimeSheetList = (props) => {\n\n  if (props.time_sheets) {\n    return (\n      <Card>\n        <CardHeader>\n          {props.header}\n        </CardHeader>\n        <CardContent>\n          <List mediaList className='fs-11'>\n            {props.time_sheets.map((time_sheet) =>\n              <ListItem\n              className='fs-11'\n                key={crypto.lib.WordArray.random(32)}\n                link={\"/time_sheets/\" + time_sheet.id}\n                ignoreCache={true}\n                title={time_sheet.jdate}\n                after=\"\"\n                subtitle={time_sheet.profile.fullname}\n                text=\"\"\n              >\n                 <img slot=\"media\" src={time_sheet.profile.avatar} width=\"28\" height=\"28\"/>\n              </ListItem>\n            )}\n          </List>\n        </CardContent>\n        <CardFooter>\n          <Link></Link>\n            <Button  onClick={() => props.loadMore(props.page)}>{dict.more}</Button>\n        </CardFooter>\n      </Card>\n    )\n  } else {\n    return (<ul></ul>)\n  }\n}\nexport default TimeSheetList;\n","import React from \"react\";\nimport { Page, Navbar, Row, BlockTitle, Col, Fab, Icon, Preloader, Block, Card, CardFooter, CardContent, CardHeader } from 'framework7-react';\nimport TimeSheetList from \"./list\"\nimport { dict } from '../../Dict';\n\nconst TimeSheetIndex = (props) => {\n  return (\n    <Page>\n      <Navbar title={dict.time_sheets} backLink={dict.back} >\n      </Navbar>\n      <BlockTitle>{dict.list}</BlockTitle>\n      <Fab href=\"/time_sheets/new\" target=\"#main-view\" position=\"left-bottom\" slot=\"fixed\" color=\"deeporange\">\n        <Icon ios=\"f7:add\" aurora=\"f7:add\" md=\"material:add\"></Icon>\n        <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n      </Fab>\n      <Row>\n        <Col width='100' tabletWidth='50'>\n          <TimeSheetList\n            time_sheets={props.related_time_sheets} header={dict.sent_to_me}\n            page='page_related' loadMore={props.loadMore}\n          />\n        </Col>\n        <Col width='100' tabletWidth='50'>\n          <TimeSheetList\n            time_sheets={props.mine_time_sheets} header={dict.sent_by_me}\n            page='page_mine' loadMore={props.loadMore}\n          />\n        </Col>\n      </Row>\n\n    </Page>\n  )\n}\nexport default TimeSheetIndex;\n","import React from \"react\"\nimport { Page,Fab, Icon } from 'framework7-react';\nimport ModelStore from \"../../stores/ModelStore\";\nimport TimeSheetIndex from \"../../containers/time_sheets/index\"\nimport * as MyActions from \"../../actions/MyActions\";\nimport { dict} from '../../Dict';\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\n\nexport default class Layout extends React.Component {\n  constructor() {\n    super();\n    this.getMutipleList = this.getMutipleList.bind(this);\n    this.loadMore = this.loadMore.bind(this);\n    this.getList = this.getList.bind(this);\n    \n    this.state = {\n      token: window.localStorage.getItem('token'),\n      mine_time_sheets: [],\n      related_time_sheets: [],\n      page_mine: 1,\n      page_related: 1,\n    }\n  }\n  componentWillMount() {\n    ModelStore.on(\"got_multiple_list\", this.getMutipleList);\n    ModelStore.on(\"got_list\", this.getList);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_multiple_list\", this.getMutipleList);\n    ModelStore.removeListener(\"got_list\", this.getList);\n  }\n  \n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  loadData(){\n    const f7: Framework7 = Framework7.instance;\n    f7.toast.show({ text: dict.receiving, closeTimeout: 2000, position: 'top'});\n    MyActions.getMultipleList('time_sheets', this.state.page, {}, this.state.token);\n  }\n\n\n  loadMore(p) {\n\n    if( p === 'page_mine') {\n      this.setState({ page_mine: this.state.page_mine + 1 }, () => {\n        MyActions.getList('time_sheets/mine', this.state.page_mine, {}, this.state.token);\n      });\n    }\n    if( p === 'page_related') {\n      this.setState({ page_related: this.state.page_related + 1 }, () => {\n        MyActions.getList('time_sheets/related', this.state.page_related, {}, this.state.token);\n      });\n    }\n  }\n\n  getList(){\n    var list = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    console.log(list)\n    if (list && klass === 'TimeSheetMine'){\n      this.setState({\n        mine_time_sheets: this.state.mine_time_sheets.concat(list),\n      });\n    }\n    if (list && klass === 'TimeSheetRelated'){\n      this.setState({\n        related_time_sheets: this.state.related_time_sheets.concat(list),\n      });\n  }\n}\n\n  getMutipleList() {\n    var multiple = ModelStore.getMutipleList()\n    var klass = ModelStore.getKlass()\n    console.log(multiple)\n    if (multiple && klass === 'TimeSheet'){\n      this.setState({\n        mine_time_sheets: multiple.mine,\n        related_time_sheets: multiple.related,\n      });\n    }\n  }\n\n  render() {\n    const {mine_time_sheets, related_time_sheets} = this.state;\n    return(<TimeSheetIndex \n      mine_time_sheets={mine_time_sheets} related_time_sheets={related_time_sheets}\n      loadMore={this.loadMore}\n      />)\n  }\n}\n","import React from \"react\";\nimport { List, ListItem, ListInput, Col, Row, Button, Link, Chip, Card, CardHeader, CardContent, CardFooter } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport crypto from 'crypto-js';\n\n\nconst TimeSheetForm = (props) => {\n  function association(type) {\n    var chips = [\n      <div>\n        <a className='fs-11 ' href=\"#\" id={type + '-association'}>\n          <div className=\"item-title fs-11\">\n            <i className=\"va-minus-2 ml-5 fa fa-plus\"></i>\n            {dict.associations}:\n        </div>\n        </a>\n      </div>\n    ]\n    if (props.associations) {\n      props.associations.map((association) => {\n        if (association.kind == type) {\n          chips.push(<Chip text={association.title} deleteable onClick={() => props.removeAssociation(association.id, 'Morning')} />)\n        }\n      }\n      )\n    }\n    return chips\n  }\n\n  function involvements() {\n    var chips = [\n      <div>\n        <a className='fs-11 ' href=\"#\" id='time-sheet-involvements'>\n          <div className=\"item-title fs-11\">\n            <i className=\"va-minus-2 ml-5 fa fa-user-plus\"></i>\n            {dict.recipients}:\n        </div>\n        </a>\n      </div>\n    ]\n    if (props.involvements) {\n      props.involvements.map((involvement) => {\n        chips.push(<Chip text={involvement.fullname} deleteable onClick={() => props.removeInvolvement(involvement.id)} />)\n      }\n      )\n    }\n    return chips\n  }\n\n  if (props.time_sheet) {\n    return (\n      <Card>\n        <CardHeader>{dict.time_sheet}</CardHeader>\n        <CardContent>\n          <List >\n            <ListInput\n              label={dict.morning_report}\n              type=\"textarea\"\n              placeholder={dict.write_appropriate_details}\n              value={props.time_sheet.morning_report}\n              onInput={(e) => {\n                props.handleChange({ morningReport: e.target.value })\n              }}\n            />\n\n\n            <ListItem title={association('Morning')}></ListItem>\n\n            <ListInput\n              label={dict.afternoon_report}\n              type=\"textarea\"\n              placeholder={dict.write_appropriate_details}\n              value={props.time_sheet.afternoon_report}\n              onInput={(e) => {\n                props.handleChange({ afternoonReport: e.target.value })\n              }}\n            />\n\n            <ListItem title={association('Afternoon')}></ListItem>\n\n            <ListInput\n              label={dict.extra_report}\n              type=\"textarea\"\n              placeholder={dict.write_appropriate_details}\n              value={props.extra_report}\n              onInput={(e) => {\n                props.handleChange({ extraReport: e.target.value })\n              }}\n            />\n\n            <ListItem title={association('Extra')}></ListItem>\n\n            <li>\n              <div className=\"item-content item-input\">\n                <div className=\"item-inner\">\n                  <div className=\"item-title item-label\">{dict.sheet_date}</div>\n                  <div className=\"item-input-wrap\">\n                    <input className=\"date-input\" type=\"text\" placeholder={dict.select_a_date} readonly=\"readonly\" id=\"sheet-date-calendar\" />\n                  </div>\n                </div>\n              </div>\n            </li>\n\n            <ListItem title={involvements()}></ListItem>\n          </List>\n        </CardContent>\n        <CardFooter>\n          <Link></Link>\n          <Button fill disabled={!props.editing} onClick={props.submit}>{dict.submit}</Button>\n        </CardFooter>\n      </Card>\n    )\n  }\n  else {\n    return (null)\n  }\n}\nexport default TimeSheetForm;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport TimeSheetForm from \"../../containers/time_sheets/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\nimport { conf } from '../../conf';\n\nexport default class TimeSheetCreate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.loadCalender = this.loadCalender.bind(this);\n    this.loadAssociation = this.loadAssociation.bind(this);\n    this.removeAssociation = this.removeAssociation.bind(this);\n    this.removeInvolvement = this.removeInvolvement.bind(this);\n    \n    \n    \n    \n    this.state = {\n      token: window.localStorage.getItem('token'),\n      morningReport: null,\n      afternoonReport: null,\n      extraReport: null,\n      associations: [],\n      involvements: [],\n      time_sheet: {},\n      timeSheetDate:  new Date(),\n      isPublic: false,\n    }\n  }\n\n\n  componentWillMount() {\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n  }\n\n  submit(){\n    var data = {\n      associations: this.state.associations,\n      morning_report: this.state.morningReport, afternoon_report: this.state.afternoonReport,\n      extra_report: this.state.extraReport, sheet_date: this.state.timeSheetDate,\n      involvements: this.state.involvements\n    }\n    MyActions.setInstance('time_sheets', data, this.state.token);\n  }\n\n  loadAssociation() {\n    const self = this;\n    const app = self.$f7;\n\n    app.autocomplete.create({\n      openIn: 'popup', //open in page\n      openerEl: '#Morning-association', //link that opens autocomplete\n      multiple: true, //allow multiple values\n      valueProperty: 'id', //object's \"value\" property name\n      textProperty: 'title', //object's \"text\" property name\n      searchbarDisableText: dict.cancel,\n      popupCloseLinkText: dict.close,\n      notFoundText: dict.not_found,\n      limit: 50,\n      searchbarPlaceholder: dict.search,\n      preloader: true, //enable preloader\n      source: function (query, render) {\n        var autocomplete = this;\n        var results = [];\n        if (query.length === 0) {\n          render(results);\n          return;\n        }\n        // Show Preloader\n        autocomplete.preloaderShow();\n        // Do Ajax request to Autocomplete data\n        app.request({\n          url:  conf.server + '/time_sheets/search_ass',\n          method: 'GET',\n          dataType: 'json',\n          //send \"query\" to server. Useful in case you generate response dynamically\n          data: {\n            q: query\n          },\n          success: function (item) {\n            // Find matched items\n            for (var i = 0; i < item.data.length; i++) {\n              results.push(item.data[i]);\n            }\n            // Hide Preoloader\n            autocomplete.preloaderHide();\n            // Render items by passing array with result items\n            render(results);\n          }\n        });\n      },\n      on: {\n        change: function (value) {\n          if (value && value[value.length - 1]) {\n            console.log(value[value.length - 1])\n            self.setState({ associations: self.state.associations.concat({ title: value[value.length - 1].title, id: value[value.length - 1].id , a_type:  value[value.length - 1].a_type, kind: 'Morning'}) })\n          }\n        },\n      },\n    });\n\n    app.autocomplete.create({\n      openIn: 'popup', //open in page\n      openerEl: '#Afternoon-association', //link that opens autocomplete\n      multiple: true, //allow multiple values\n      valueProperty: 'id', //object's \"value\" property name\n      textProperty: 'title', //object's \"text\" property name\n      searchbarDisableText: dict.cancel,\n      popupCloseLinkText: dict.close,\n      notFoundText: dict.not_found,\n      limit: 50,\n      searchbarPlaceholder: dict.search,\n      //preloader: true, //enable preloader\n      source: function (query, render) {\n        var autocomplete = this;\n        var results = [];\n        if (query.length === 0) {\n          render(results);\n          return;\n        }\n        // Show Preloader\n       // autocomplete.preloaderShow();\n        // Do Ajax request to Autocomplete data\n        app.request({\n          url: conf.server +  '/time_sheets/search_ass',\n          method: 'GET',\n          dataType: 'json',\n          //send \"query\" to server. Useful in case you generate response dynamically\n          data: {\n            q: query\n          },\n          success: function (item) {\n            // Find matched items\n            for (var i = 0; i < item.data.length; i++) {\n              results.push(item.data[i]);\n            }\n            // Hide Preoloader\n            //autocomplete.preloaderHide();\n            // Render items by passing array with result items\n            render(results);\n          }\n        });\n      },\n      on: {\n        change: function (value) {\n          if (value && value[value.length - 1]) {\n            self.setState({ associations: self.state.associations.concat({ title: value[value.length - 1].title, id: value[value.length - 1].id ,  a_type:  value[value.length - 1].a_type, kind: 'Afternoon'}) })\n          }\n        },\n      },\n    });\n\n    app.autocomplete.create({\n      openIn: 'popup', //open in page\n      openerEl: '#Extra-association', //link that opens autocomplete\n      multiple: true, //allow multiple values\n      valueProperty: 'id', //object's \"value\" property name\n      textProperty: 'title', //object's \"text\" property name\n      searchbarDisableText: dict.cancel,\n      popupCloseLinkText: dict.close,\n      notFoundText: dict.not_found,\n      limit: 50,\n      searchbarPlaceholder: dict.search,\n      //preloader: true, //enable preloader\n      source: function (query, render) {\n        var autocomplete = this;\n        var results = [];\n        if (query.length === 0) {\n          render(results);\n          return;\n        }\n        // Show Preloader\n       // autocomplete.preloaderShow();\n        // Do Ajax request to Autocomplete data\n        app.request({\n          url: conf.server + '/time_sheets/search_ass',\n          method: 'GET',\n          dataType: 'json',\n          //send \"query\" to server. Useful in case you generate response dynamically\n          data: {\n            q: query\n          },\n          success: function (item) {\n            // Find matched items\n            for (var i = 0; i < item.data.length; i++) {\n              results.push(item.data[i]);\n            }\n            // Hide Preoloader\n            //autocomplete.preloaderHide();\n            // Render items by passing array with result items\n            render(results);\n          }\n        });\n      },\n      on: {\n        change: function (value) {\n          if (value && value[value.length - 1]) {\n            self.setState({ associations: self.state.associations.concat({ title: value[value.length - 1].title, id: value[value.length - 1].id ,  a_type:  value[value.length - 1].a_type, kind: 'Extra'}) })\n          }\n        },\n      },\n    });\n\n    app.autocomplete.create({\n      openIn: 'popup', //open in page\n      openerEl: '#time-sheet-involvements', //link that opens autocomplete\n      multiple: true, //allow multiple values\n      valueProperty: 'id', //object's \"value\" property name\n      textProperty: 'fullname', //object's \"text\" property name\n      searchbarDisableText: dict.cancel,\n      popupCloseLinkText: dict.close,\n      notFoundText: dict.not_found,\n      limit: 50,\n      searchbarPlaceholder: dict.search,\n      //preloader: true, //enable preloader\n      source: function (query, render) {\n        var autocomplete = this;\n        var results = [];\n        if (query.length === 0) {\n          render(results);\n          return;\n        }\n        // Show Preloader\n       // autocomplete.preloaderShow();\n        // Do Ajax request to Autocomplete data\n        app.request({\n          url: conf.server + '/profiles/search',\n          method: 'GET',\n          dataType: 'json',\n          //send \"query\" to server. Useful in case you generate response dynamically\n          data: {\n            q: query\n          },\n          success: function (item) {\n            // Find matched items\n            for (var i = 0; i < item.data.length; i++) {\n               results.push(item.data[i]);\n            }\n            // Hide Preoloader\n            //autocomplete.preloaderHide();\n            // Render items by passing array with result items\n            render(results);\n          }\n        });\n      },\n      on: {\n        change: function (value) {\n          if (value && value[value.length - 1]) {\n            self.setState({ involvements: self.state.involvements.concat({ fullname: value[value.length - 1].fullname, id: value[value.length - 1].id }) })\n          }\n        },\n      },\n    });\n  }\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  setInstance(){\n    const self = this;\n    this.$f7router.navigate('/time_sheets/');\n  }\n\n  pageAfterIn() {\n    this.loadCalender();\n    this.loadAssociation();\n  }\n\n\n  loadCalender() {\n    const self = this;\n    const app = self.$f7;\n    var today = new window.ODate();\n    var weekAgo = new window.ODate().setDate(today.getDate() - 7);  \n    app.calendar.create({\n      inputEl: '#sheet-date-calendar',\n      value: [new Date()],\n      closeOnSelect: true,\n      firstDay: 6,\n      weekendDays: [4, 5],\n      monthNames: ['فروردين', 'ارديبهشت', 'خرداد', 'تیر', 'مرداد', 'شهریور', 'مهر', 'آبان', 'آذر', 'دی', 'بهمن', 'اسفند'],\n      dayNames: ['یکشنبه', 'دوشنبه', 'سه شنبه', 'چهارشنبه', 'پنج‌شنبه', 'جمعه', 'شنبه'],\n      dayNamesShort: ['یک', 'دو', 'سه ', 'چهار', 'پنج‌', 'جمعه', 'شنبه'],\n      disabled: function (date) {\n        if (date > weekAgo && date < today) {\n            return false;\n        }\n        else {\n            return true;\n        }\n    },\n      on: {\n        closed: function (c) {\n          self.setState({ timeSheetDate: c.value[0].a });\n        }\n      }\n    });\n  }\n\n  removeAssociation(id, kind){\n    this.setState({\n      associations: this.state.associations.filter(function (association) {\n        return (association.id !== id || association.kind !== kind)\n      })\n    });\n  }\n\n  removeInvolvement(id){\n    this.setState({\n      involvements: this.state.involvements.filter(function (involvement) {\n        return involvement.id !== id\n      })\n    });\n  }\n\n\n\n\n  render() {\n    const {time_sheet, associations, involvements} = this.state;\n    return (\n      <Page onPageAfterIn={this.pageAfterIn.bind(this)}>\n        <Navbar title={dict.time_sheet_form} backLink={dict.back} />\n        <BlockTitle>{dict.time_sheet_form}</BlockTitle>\n        <TimeSheetForm \n          time_sheet={time_sheet} submit={this.submit}\n           editing={true} handleChange={this.handleChangeValue}\n           associations={associations} removeAssociation={this.removeAssociation}\n           involvements={involvements} removeInvolvement={this.removeInvolvement}\n           />\n      </Page>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport TimeSheetForm from \"../../containers/time_sheets/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\nimport { conf } from '../../conf';\n\nexport default class TimeSheetCreate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.loadCalender = this.loadCalender.bind(this);\n    this.loadAssociation = this.loadAssociation.bind(this);\n    this.removeAssociation = this.removeAssociation.bind(this);\n    this.removeInvolvement = this.removeInvolvement.bind(this);\n    this.getInstance = this.getInstance.bind(this);\n    \n    \n    \n    \n    \n    this.state = {\n      token: window.localStorage.getItem('token'),\n      morningReport: null,\n      afternoonReport: null,\n      extraReport: null,\n      id: null,\n      associations: [],\n      involvements: [],\n      time_sheet: null,\n      timeSheetDate:  new Date(),\n    }\n  }\n\n\n  componentWillMount() {\n    ModelStore.on(\"set_instance\", this.setInstance);\n    ModelStore.on(\"got_instance\", this.getInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  loadData() {\n    if (this.$f7route.params['timeSheetId']) {\n      MyActions.getInstance('time_sheets', this.$f7route.params['timeSheetId'], this.state.token);\n    }\n  }\n\n  submit(){\n    var data = {\n      id: this.state.id,\n      associations: this.state.associations,\n      morning_report: this.state.morningReport, afternoon_report: this.state.afternoonReport,\n      extra_report: this.state.extraReport, sheet_date: this.state.timeSheetDate,\n      involvements: this.state.involvements\n    }\n    MyActions.updateInstance('time_sheets', data, this.state.token);\n  }\n\n  getInstance(){\n    var time_sheet = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (time_sheet && klass === 'TimeSheet') {\n      this.setState({\n        id: time_sheet.id,\n        time_sheet: time_sheet,\n        timeSheetDate: time_sheet.date,\n        involvements: time_sheet.the_involvements,\n        associations: time_sheet.the_associations\n      }, () => this.loadAssociation());\n\n    }\n    console.log(time_sheet)\n  }\n\n  loadAssociation() {\n    const self = this;\n    const app = self.$f7;\n\n    app.autocomplete.create({\n      openIn: 'popup', //open in page\n      openerEl: '#Morning-association', //link that opens autocomplete\n      multiple: true, //allow multiple values\n      valueProperty: 'id', //object's \"value\" property name\n      textProperty: 'title', //object's \"text\" property name\n      searchbarDisableText: dict.cancel,\n      popupCloseLinkText: dict.close,\n      notFoundText: dict.not_found,\n      limit: 50,\n      searchbarPlaceholder: dict.search,\n      preloader: true, //enable preloader\n      source: function (query, render) {\n        var autocomplete = this;\n        var results = [];\n        if (query.length === 0) {\n          render(results);\n          return;\n        }\n        // Show Preloader\n        autocomplete.preloaderShow();\n        // Do Ajax request to Autocomplete data\n        app.request({\n          url:  conf.server + '/time_sheets/search_ass',\n          method: 'GET',\n          dataType: 'json',\n          //send \"query\" to server. Useful in case you generate response dynamically\n          data: {\n            q: query\n          },\n          success: function (item) {\n            // Find matched items\n            for (var i = 0; i < item.data.length; i++) {\n              results.push(item.data[i]);\n            }\n            // Hide Preoloader\n            autocomplete.preloaderHide();\n            // Render items by passing array with result items\n            render(results);\n          }\n        });\n      },\n      on: {\n        change: function (value) {\n          if (value && value[value.length - 1]) {\n            console.log(self.state.associations)\n            self.setState({ associations: self.state.associations.concat({ title: value[value.length - 1].title, id: value[value.length - 1].id , a_type:  value[value.length - 1].a_type, kind: 'Morning'}) })\n          }\n        },\n      },\n    });\n\n    app.autocomplete.create({\n      openIn: 'popup', //open in page\n      openerEl: '#Afternoon-association', //link that opens autocomplete\n      multiple: true, //allow multiple values\n      valueProperty: 'id', //object's \"value\" property name\n      textProperty: 'title', //object's \"text\" property name\n      searchbarDisableText: dict.cancel,\n      popupCloseLinkText: dict.close,\n      notFoundText: dict.not_found,\n      limit: 50,\n      searchbarPlaceholder: dict.search,\n      //preloader: true, //enable preloader\n      source: function (query, render) {\n        var autocomplete = this;\n        var results = [];\n        if (query.length === 0) {\n          render(results);\n          return;\n        }\n        // Show Preloader\n       // autocomplete.preloaderShow();\n        // Do Ajax request to Autocomplete data\n        app.request({\n          url: conf.server + '/time_sheets/search_ass',\n          method: 'GET',\n          dataType: 'json',\n          //send \"query\" to server. Useful in case you generate response dynamically\n          data: {\n            q: query\n          },\n          success: function (item) {\n            // Find matched items\n            for (var i = 0; i < item.data.length; i++) {\n              results.push(item.data[i]);\n            }\n            // Hide Preoloader\n            //autocomplete.preloaderHide();\n            // Render items by passing array with result items\n            render(results);\n          }\n        });\n      },\n      on: {\n        change: function (value) {\n          if (value && value[value.length - 1]) {\n            self.setState({ associations: self.state.associations.concat({ title: value[value.length - 1].title, id: value[value.length - 1].id ,  a_type:  value[value.length - 1].a_type, kind: 'Afternoon'}) })\n          }\n        },\n      },\n    });\n\n    app.autocomplete.create({\n      openIn: 'popup', //open in page\n      openerEl: '#Extra-association', //link that opens autocomplete\n      multiple: true, //allow multiple values\n      valueProperty: 'id', //object's \"value\" property name\n      textProperty: 'title', //object's \"text\" property name\n      searchbarDisableText: dict.cancel,\n      popupCloseLinkText: dict.close,\n      notFoundText: dict.not_found,\n      limit: 50,\n      searchbarPlaceholder: dict.search,\n      //preloader: true, //enable preloader\n      source: function (query, render) {\n        var autocomplete = this;\n        var results = [];\n        if (query.length === 0) {\n          render(results);\n          return;\n        }\n        // Show Preloader\n       // autocomplete.preloaderShow();\n        // Do Ajax request to Autocomplete data\n        app.request({\n          url: conf.server +'/time_sheets/search_ass',\n          method: 'GET',\n          dataType: 'json',\n          //send \"query\" to server. Useful in case you generate response dynamically\n          data: {\n            q: query\n          },\n          success: function (item) {\n            // Find matched items\n            for (var i = 0; i < item.data.length; i++) {\n              results.push(item.data[i]);\n            }\n            // Hide Preoloader\n            //autocomplete.preloaderHide();\n            // Render items by passing array with result items\n            render(results);\n          }\n        });\n      },\n      on: {\n        change: function (value) {\n          if (value && value[value.length - 1]) {\n            self.setState({ associations: self.state.associations.concat({ title: value[value.length - 1].title, id: value[value.length - 1].id ,  a_type:  value[value.length - 1].a_type, kind: 'Extra'}) })\n          }\n        },\n      },\n    });\n\n    app.autocomplete.create({\n      openIn: 'popup', //open in page\n      openerEl: '#time-sheet-involvements', //link that opens autocomplete\n      multiple: true, //allow multiple values\n      valueProperty: 'id', //object's \"value\" property name\n      textProperty: 'fullname', //object's \"text\" property name\n      searchbarDisableText: dict.cancel,\n      popupCloseLinkText: dict.close,\n      notFoundText: dict.not_found,\n      limit: 50,\n      searchbarPlaceholder: dict.search,\n      //preloader: true, //enable preloader\n      source: function (query, render) {\n        var autocomplete = this;\n        var results = [];\n        if (query.length === 0) {\n          render(results);\n          return;\n        }\n        // Show Preloader\n       // autocomplete.preloaderShow();\n        // Do Ajax request to Autocomplete data\n        app.request({\n          url: conf.server + '/profiles/search',\n          method: 'GET',\n          dataType: 'json',\n          //send \"query\" to server. Useful in case you generate response dynamically\n          data: {\n            q: query\n          },\n          success: function (item) {\n            // Find matched items\n            for (var i = 0; i < item.data.length; i++) {\n               results.push(item.data[i]);\n            }\n            // Hide Preoloader\n            //autocomplete.preloaderHide();\n            // Render items by passing array with result items\n            render(results);\n          }\n        });\n      },\n      on: {\n        change: function (value) {\n          if (value && value[value.length - 1]) {\n            self.setState({ involvements: self.state.involvements.concat({ fullname: value[value.length - 1].fullname, id: value[value.length - 1].id }) })\n          }\n        },\n      },\n    });\n  }\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  setInstance(){\n    const self = this;\n    this.$f7router.navigate('/time_sheets/');\n  }\n\n  pageAfterIn() {\n    this.loadCalender();\n    this.loadAssociation();\n  }\n\n\n  loadCalender() {\n    const self = this;\n    const app = self.$f7;\n\n    app.calendar.create({\n      inputEl: '#sheet-date-calendar',\n      value: [new Date()],\n      closeOnSelect: true,\n      firstDay: 6,\n      weekendDays: [4, 5],\n      monthNames: ['فروردين', 'ارديبهشت', 'خرداد', 'تیر', 'مرداد', 'شهریور', 'مهر', 'آبان', 'آذر', 'دی', 'بهمن', 'اسفند'],\n      dayNames: ['یکشنبه', 'دوشنبه', 'سه شنبه', 'چهارشنبه', 'پنج‌شنبه', 'جمعه', 'شنبه'],\n      dayNamesShort: ['یک', 'دو', 'سه ', 'چهار', 'پنج‌', 'جمعه', 'شنبه'],\n      on: {\n        closed: function (c) {\n          self.setState({ timeSheetDate: c.value[0].a });\n        }\n      }\n    });\n  }\n\n  removeAssociation(id, kind){\n    this.setState({\n      associations: this.state.associations.filter(function (association) {\n        return (association.id !== id || association.kind !== kind)\n      })\n    });\n  }\n\n  removeInvolvement(id){\n    this.setState({\n      involvements: this.state.involvements.filter(function (involvement) {\n        return involvement.id !== id\n      })\n    });\n  }\n\n\n\n\n  render() {\n    const {time_sheet, associations, involvements} = this.state;\n    return (\n      <Page onPageAfterIn={this.pageAfterIn.bind(this)}>\n        <Navbar title={dict.time_sheet_form} backLink={dict.back} />\n        <BlockTitle>{dict.time_sheet_form}</BlockTitle>\n        <TimeSheetForm \n          time_sheet={time_sheet} submit={this.submit}\n           editing={true} handleChange={this.handleChangeValue}\n           associations={associations} removeAssociation={this.removeAssociation}\n           involvements={involvements} removeInvolvement={this.removeInvolvement}\n           />\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { List, ListItem, Card } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport { Chart } from 'react-charts'\nimport { color } from \"d3\";\nimport TaskList from \"../tasks/list\"\nimport WorkList from \"../tasks/workList\"\nconst ProfileShow = (props) => {\n\n  if (props.profile) {\n    console.log(props)\n    return (\n      <React.Fragment>\n        <List className='fs-12'>\n          <ListItem\n            key={'profile-show' + props.profile.id}\n            title={props.profile.fullname}\n            after=''>\n            <img slot=\"media\" src={props.profile.avatar} width=\"27\" height=\"27\" />\n          </ListItem>\n\n        </List>\n        <Card>\n          <TaskList tasks={props.profile.the_tasks} header={dict.tasks} sortChange={props.sortChange} />\n        </Card>\n        <Card>\n          <WorkList works={props.profile.the_works} header={dict.works} sortChange={props.sortChange} />\n        </Card>\n      </React.Fragment>\n    )\n  } else {\n    return (null)\n  }\n}\nexport default ProfileShow;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Link,\n  Tabs,\n  Toolbar,\n  Tab,\n  Range,\n  Block,\n  Icon, Fab\n} from 'framework7-react';\nimport { dict } from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport ProfileShow from \"../../containers/profiles/show\"\n\nexport default class Layout extends Component {\n  constructor() {\n    super();\n    this.getInstance = this.getInstance.bind(this);\n    \n    this.state = {\n      token: window.localStorage.getItem('token'),\n      profile: null,\n      id: null,\n      actuals: null,\n      metas: null,\n      channels: null,\n    }\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n  }\n\n  componentDidMount() {\n    MyActions.getInstance('profiles', this.$f7route.params['profileId'], this.state.token);\n  }\n\n  getInstance() {\n    var profile = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (profile && klass === 'Profile') {\n      this.setState({\n        profile: profile,\n        id: profile.id,\n      });\n    }\n  }\n\n  fab() {\n    if (this.state.profile) {\n      return (\n        <Fab href={\"/profiles/\" + this.state.profile.id + \"/edit\"} target=\"#main-view\" position=\"left-bottom\" slot=\"fixed\" color=\"lime\">\n          <Icon ios=\"f7:edit\" aurora=\"f7:edit\" md=\"material:edit\"></Icon>\n          <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n        </Fab>\n      )\n    }\n  }\n\n\n  render() {\n    const { profile } = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.profiles} backLink={dict.back} />\n        {this.fab()}\n        <ProfileShow profile={profile} />\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { List,ListItem } from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\nimport Moment from 'react-moment';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\nimport ExpertiesList from \"./experties\";\n\nconst ProfileList = (props) => {\n\n  if (props.profiles) {\n    return (\n      <List mediaList>\n        {props.profiles.map((profile) =>\n          <ListItem\n          key={crypto.lib.WordArray.random(32)}\n          link={\"/profiles/\" + profile.id}\n          title={profile.fullname}\n          after=\"\"\n          subtitle=\"\"\n          text=\"\"\n          >\n                <img slot=\"media\" src={profile.avatar} width=\"40\" height=\"40\" />\n          </ListItem>\n        )}\n      </List>\n    )\n  } else {\n    return (<ul></ul>)\n  }\n}\nexport default ProfileList;\n","import React from \"react\";\nimport { Page, Navbar, Searchbar, BlockTitle, Subnavbar, Fab, Icon, Link } from 'framework7-react';\nimport ProfileList from \"./list\"\nimport { dict } from '../../Dict';\n\nconst ProfileIndex = (props) => {\n  return (\n    <Page>\n      <Navbar title={dict.profiles} backLink={dict.back} >\n        <Link panelOpen=\"right\">\n          <Icon f7=\"bars\"></Icon>\n        </Link>\n        <Subnavbar inner={false}>\n          <Searchbar\n            disableButtonText={dict.cancel}\n            placeholder={dict.search}\n            onChange={(e) => {\n              props.search({ query: e.target.value })\n            }}\n          ></Searchbar>\n        </Subnavbar>\n      </Navbar>\n      <BlockTitle></BlockTitle>\n      <Fab href=\"/profiles/new\" target=\"#main-view\" position=\"left-bottom\" slot=\"fixed\" color=\"deeporange\">\n        <Icon ios=\"f7:add\" aurora=\"f7:add\" md=\"material:add\"></Icon>\n        <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n      </Fab>\n      <ProfileList profiles={props.profiles} />\n\n    </Page>\n  )\n}\nexport default ProfileIndex;\n","import React from \"react\"\nimport { Page,Fab, Icon } from 'framework7-react';\nimport ModelStore from \"../../stores/ModelStore\";\nimport ProfileIndex from \"../../containers/profiles/index\"\nimport * as MyActions from \"../../actions/MyActions\";\nimport { dict} from '../../Dict';\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\n\nexport default class Layout extends React.Component {\n  constructor() {\n    super();\n    this.getList = this.getList.bind(this);\n    this.search = this.search.bind(this);\n    \n    this.state = {\n      token: window.localStorage.getItem('token'),\n      profiles: null,\n      query: null,\n    }\n  }\n  componentWillMount() {\n    ModelStore.on(\"got_list\", this.getList);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_list\", this.getList);\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  loadData(){\n    MyActions.getList('profiles', this.state.page, {}, this.state.token);\n  }\n\n  search(obj){\n    this.setState(obj, () => {\n      MyActions.getList('profiles/search', this.state.page, {q: this.state.query}, this.state.token);\n  });    \n  }\n\n  getList() {\n    var profiles = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    if (profiles && klass === 'Profile'){\n      this.setState({\n        profiles: profiles,\n      });\n    }\n  }\n\n  render() {\n    const {profiles} = this.state;\n    return(<ProfileIndex profiles={profiles} search={this.search}/>)\n  }\n}\n","import React from \"react\";\nimport { List, ListInput, CardFooter, Button, Card, Link, CardHeader, CardContent, Row } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport crypto from 'crypto-js';\nimport ExpertiesList from \"./experties\";\nimport ImageUploader from 'react-images-upload';\nconst ProfileForm = (props) => {\n  if (props.profile) {\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>{dict.profile_info}</CardHeader>\n          <CardContent>\n            <List >\n              <ListInput\n                label={dict.firstname}\n                type=\"text\"\n                placeholder='...'\n                defaultValue={props.name}\n                onInput={(e) => {\n                  props.handleChange({ name: e.target.value })\n                }}\n              />\n\n              <ListInput\n                label={dict.surename}\n                type=\"text\"\n                placeholder='...'\n                defaultValue={props.surename}\n                onInput={(e) => {\n                  props.handleChange({ surename: e.target.value })\n                }}\n              />\n            </List>\n          </CardContent>\n          <CardFooter>\n            <Link></Link>\n            <Link className=\"btn-notice\"></Link>\n            <Button className=\"col btn\" fill onClick={props.submit}>{dict.submit}</Button>\n          </CardFooter>\n        </Card>\n\n\n\n        <Card>\n          <CardHeader>\n            <img src={props.avatar} width=\"40\" height=\"40\"></img>\n          </CardHeader>\n          <ImageUploader\n            withIcon={true}\n            buttonText={dict.choose_image}\n            onChange={props.onDrop}\n            buttonClassName='upload-btn'\n            imgExtension={['.jpg', '.jpeg', '.png']}\n            maxFileSize={5242880}\n          />\n        </Card>\n\n\n      </React.Fragment>\n    )\n  } else {\n    return (null)\n  }\n\n}\nexport default ProfileForm;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport ProfileForm from \"../../containers/profiles/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\nexport default class ProfileCreate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.handleChangeValueFields = this.handleChangeValueFields.bind(this);\n    this.removeActual = this.removeActual.bind(this);\n    this.getInstance = this.getInstance.bind(this);\n    this.submitFields = this.submitFields.bind(this);\n    this.onDrop = this.onDrop.bind(this);    \n    this.getList = this.getList.bind(this);\n    \n    \n    this.getList = this.getList.bind(this);\n\n    this.state = {\n      profile: {},\n      metas: null,\n      token: window.localStorage.getItem('token'),\n      fields: [],\n      name: 'dd',\n      surename: '',\n      pictures: [],\n      avatar: null,\n    }\n  }\n\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.getInstance);\n    ModelStore.on(\"deleted_instance\", this.getInstance);\n    ModelStore.on(\"got_list\", this.getList);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.getInstance);\n    ModelStore.removeListener(\"deleted_instance\", this.getInstance);\n    ModelStore.removeListener(\"got_list\", this.getList);\n  }\n\n  componentDidMount(){\n    this.loadData();\n\n  }\n\n  loadData(){\n    MyActions.getList('metas', this.state.page);\n  }\n\n  onDrop(picture) {\n    console.log(picture[0])\n    MyActions.fileUpload('profiles', this.state.id, picture[0], this.state.token);\n  }\n\n\n  submit(){\n    var data = {id: this.state.id, name: this.state.name, surename: this.state.surename}\n    MyActions.updateInstance('profiles', data, this.state.token);\n  }\n\n  submitFields(){\n    var data = {meta_id: this.state.metaId, content: this.state.fields}\n    MyActions.setInstance('actuals', data, this.state.token);\n  }\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  handleChangeValueFields(key, value, metaId) {\n    var fields = this.state.fields\n    if (fields.length > 0) {\n      for (let i = 0; i < fields.length; i++) {\n        if (fields[i].fid && fields[i].fid === key) {\n          let newState = Object.assign({}, this.state);\n          newState.fields[i] = { fid: key, value: value, metaId: metaId }\n          this.setState(newState);\n        } else {\n          this.setState({ fields: this.state.fields.concat({ fid: key, value: value , metaId:metaId}) });\n        }\n      }\n    } else {\n      this.setState({ fields: this.state.fields.concat({ fid: key, value: value, metaId:metaId }) });\n    }\n  }\n\n  setInstance(){\n    const self = this;\n    this.$f7router.navigate('/profiles/');\n  }\n\n  getInstance() {\n    var profile = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (profile && klass === 'Profile') {\n      this.setState({\n        metas: profile.metas,\n        profile: profile\n      });\n    }\n  }\n\n\n  removeActual(uuid){\n    MyActions.removeInstance('actuals', {uuid: uuid});\n  }\n\n  getList() {\n    var metas = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    if (metas && klass === 'Meta'){\n      this.setState({\n        metas: metas,\n      });\n    }\n  }\n\n\n\n  render() {\n    const {profile, metas, name, avatar, surename} = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.profile_form} backLink={dict.back} />\n        <BlockTitle>{dict.profile_form}</BlockTitle>\n        <ProfileForm name={name} avatar={avatar} surename={surename} metas={metas} onDrop={this.onDrop} removeActual={this.removeActual} submitFields={this.submitFields} submit={this.submit} editing={true} handleChangeValueFields={this.handleChangeValueFields} handleChange={this.handleChangeValue}/>\n      </Page>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  BlockTitle,\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport ProfileForm from \"../../containers/profiles/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\nexport default class ProfileCreate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.getInstance = this.getInstance.bind(this);\n    this.onDrop = this.onDrop.bind(this);    \n    \n\n    \n\n    this.state = {\n      name: null,\n      surename: null,\n      token: window.localStorage.getItem('token'),\n      profile: null,\n      id: null, \n      pictures: [],\n      avatar: null,\n    }\n  }\n\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.setInstance);\n    ModelStore.on(\"file_posted\", this.getInstance);    \n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n    ModelStore.removeListener(\"file_posted\", this.getInstance);\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  loadData(){\n    if (this.$f7route.params['profileId']) {\n      MyActions.getInstance('profiles', this.$f7route.params['profileId'], this.state.token);\n    }\n  }\n\n  onDrop(picture) {\n    console.log(picture[0])\n    MyActions.fileUpload('profiles', this.state.id, picture[0], this.state.token);\n  }\n\n\n  submit(){\n    var data = {id: this.state.id, name: this.state.name, surename: this.state.surename}\n    MyActions.updateInstance('profiles', data, this.state.token);\n  }\n\n\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n\n\n  setInstance(){\n    const self = this;\n    this.$f7router.navigate('/profiles/');\n  }\n\n  getInstance() {\n    var profile = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (profile && klass === 'Profile') {\n      this.setState({\n        id: profile.id, \n        profile: profile,\n        name: profile.name,\n        surename : profile.surename,\n        avatar: profile.avatar,\n      });\n    }\n  }\n\n\n\n\n\n\n  render() {\n    const {profile, name, surename, avatar} = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.profile_form} backLink={dict.back} />\n        <BlockTitle>{dict.profile_form}</BlockTitle>\n        <ProfileForm profile={profile}\n          name={name} avatar={avatar} surename={surename} onDrop={this.onDrop}  \n         submit={this.submit} editing={true} \n         handleChange={this.handleChangeValue} \n         />\n      </Page>\n    );\n  }\n}\n\n","import React from \"react\";\nimport { List, BlockTitle, ListItem, Block, Row, Col, Button, Link } from 'framework7-react';\nimport { stateToHTML } from \"draft-js-export-html\";\nimport { EditorState, convertFromRaw } from \"draft-js\";\nimport { Editor } from 'react-draft-wysiwyg';\nimport { dict } from '../../Dict';\nimport Moment from 'react-moment';\nimport JDate from 'jalali-date';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\n\n\n\nconst ReportShow = (props) => {\n  console.log(props)\n  if (props.report && props.report.draft) {\n    const contentState = convertFromRaw(props.report.draft);\n    const editorState = EditorState.createWithContent(contentState);\n    function parent(){\n      if(props.report.the_work){\n        return( <ListItem title={props.report.the_work.title} href={'/works/'+props.report.the_work.id}></ListItem>)\n      }\n      if(props.report.the_task){\n        return( <ListItem title={props.report.the_task.title} href={'/tasks/'+props.report.the_task.id}></ListItem>)\n      }\n    }\n\n    function creation(t) {\n      var date = new Date(new window.ODate(t))\n      return(<Moment date={date} fromNow></Moment>)\n    }\n    return (\n      <React.Fragment>\n        <Block>\n          <Row>\n\n          </Row>\n        </Block>\n        <List simple-list>\n          {parent()}\n        </List>\n\n        <List simple-list>\n        <ListItem\n            key={'profile' + props.report.profile.id}\n            title={props.report.profile.fullname}\n            after=''>\n            <img slot=\"media\" src={props.report.profile.avatar} width=\"27\" height=\"27\" />\n          </ListItem>\n        </List>\n\n\n\n\n        <BlockTitle>{dict.title}</BlockTitle>\n        <List simple-list>\n          <ListItem>{props.report.title}</ListItem>\n        </List>\n\n        <BlockTitle>{dict.content}</BlockTitle>\n        <Editor editorState={editorState}\n          toolbar={{ options: [] }}\n          readOnly={true}\n        />\n        <List simple-list>\n        <ListItem title={creation(props.report.creation_date)}></ListItem>\n        </List>\n\n        <BlockTitle>{dict.attachments}</BlockTitle>\n        <List>\n          {props.report.attachments.map((attachment) =>\n            <li className=\"\">\n              <div className=\"item-content\">\n                <div className=\"item-inner\">\n                  <div className=\"item-title\">\n                    <a className=\"link external\" target=\"_blank\"  href={attachment.link}>\n                      <i className=\"fa ml-5 fa-cloud-download\" aria-hidden=\"true\"></i>\n                      {attachment.filename}\n                    </a>\n                  </div>\n                </div>\n              </div>\n            </li>\n          )}\n        </List>\n      </React.Fragment>\n    )\n  } else {\n    return (null)\n  }\n}\nexport default ReportShow;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  Link,\n  BlockTitle,\n  Icon, Fab\n} from 'framework7-react';\nimport { dict } from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport ReportShow from \"../../containers/reports/show\";\n\n\nexport default class Layout extends Component {\n  constructor() {\n    super();\n    this.getInstance = this.getInstance.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.getList = this.getList.bind(this);\n    this.submitComment = this.submitComment.bind(this);\n    this.removeComment = this.removeComment.bind(this);\n    this.loadMore = this.loadMore.bind(this);\n\n\n\n\n    this.state = {\n      report: null,\n      id: null,\n      page: 1,\n      selectedChannel: null,\n      sheetOpened: false,\n      commentContent: '',\n      comments: null,\n      token: window.localStorage.getItem('token'),\n\n    }\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.setInstance);\n    ModelStore.on(\"got_list\", this.getList);\n    ModelStore.on(\"deleted_instance\", this.getInstance);\n\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n    ModelStore.removeListener(\"got_list\", this.getList);\n    ModelStore.removeListener(\"deleted_instance\", this.getInstance);\n  }\n\n  componentDidMount() {\n    MyActions.getInstance('reports', this.$f7route.params['reportId'], this.state.token);\n  }\n\n  getInstance() {\n    var report = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (report && klass === 'Report') {\n      this.setState({\n        report: report,\n        id: report.id,\n        comments: report.comments\n      });\n    }\n    console.log(report)\n  }\n\n  getList() {\n\n  }\n\n  setInstance() {\n    var report = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (report && klass === 'Report') {\n      this.setState({\n        report: report,\n        comments: report.comments,\n        page: 1\n      });\n    }\n  }\n\n  loadMore() {\n    this.setState({ page: this.state.page + 1 }, () => {\n      MyActions.getInstance('reports', this.$f7route.params['reportId'], this.state.token, this.state.page);\n    });\n  }\n\n  fab() {\n    if (this.state.report) {\n      return (\n        <Fab href={\"/reports/\" + this.state.report.id + \"/edit\"} target=\"#main-view\" position=\"left-bottom\" slot=\"fixed\" color=\"lime\">\n          <Icon ios=\"f7:edit\" aurora=\"f7:edit\" md=\"material:edit\"></Icon>\n          <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n        </Fab>\n      )\n    }\n  }\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n\n\n  submitComment() {\n    var data = { report_id: this.state.id, content: this.state.commentContent }\n    MyActions.setInstance('comments', data, this.state.token);\n  }\n\n  removeComment(id) {\n    var data = { id: id }\n    MyActions.removeInstance('comments', data, this.state.token, this.state.page);\n  }\n\n  render() {\n    const { report, comments } = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.reports} >\n        <Link panelOpen=\"right\">\n          <Icon f7=\"bars\"></Icon>\n        </Link>\n      </Navbar>\n        <BlockTitle></BlockTitle>\n        {this.fab()}\n        <ReportShow report={report} comments={comments} submitComment={this.submitComment} removeComment={this.removeComment} submit={this.submit} interaction={this.interaction} handleChange={this.handleChangeValue} loadMore={this.loadMore} />\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { Card, CardHeader, Link, CardContent, Row, Col} from 'framework7-react';\nimport crypto from 'crypto-js';\n\nimport { dict } from \"../../Dict\";\n\nconst ReportList = (props) => {\n  if (props.reports && props.reports.length > 0) {\n    return (\n      <React.Fragment>\n        <Row noGap>\n          {props.reports.map((report) =>\n            <Col width=\"100\" tabletWidth=\"33\" key={crypto.lib.WordArray.random(128/8)}> \n              <Card className=\"demo-facebook-card\">\n                <CardHeader className=\"no-border\">\n                <div className=\"demo-facebook-avatar\"><Link tooltip={report.profile.fullname} href={'/profiles/' + report.profile.id}><img src={report.profile.avatar} height=\"34\" /></Link></div>\n                  <div className=\"demo-facebook-name \">\n                    <div className=\"demo-facebook-profile \">\n                      <Link className=\"gray-color\" href={'/profiles/' + report.profile.id}>{report.profile.fullname.substring(0, 40)}</Link>\n                    </div>\n                    <Link tooltip={dict.view} className=\"gray-color\" href={'/reports/' + report.id}>{report.title.substring(0, 15) + '..'}</Link></div>\n                  <div className=\"demo-facebook-date\">\n                    \n                  </div>\n                </CardHeader>\n                <CardContent className='lightgray-color fs-12'>\n                  {report.content.substring(0, 150) + '...'}\n                  <div className=\"demo-facebook-more\">\n                    <Link className=\"gray-color\" href={'/reports/' + report.id}>\n                      {dict.view}\n                      <i className=\"va fa fa-arrow-left mr-2\"></i>\n                    </Link>\n                  </div>\n                </CardContent>\n              </Card>\n            </Col>\n          )}\n        </Row>\n        <Row noGap>\n          <Col></Col>\n          <Col className='center mb-20'>\n          <a className=\"gray-color\" onClick={() => props.loadMore()}>\n            {dict.more}\n          </a>\n          </Col>\n          <Col></Col>\n        </Row>\n      </React.Fragment>\n    )\n  } else {\n    return (<ul></ul>)\n  }\n}\nexport default ReportList;\n","import React from \"react\";\nimport { Page, Navbar, Subnavbar, Searchbar, BlockTitle, Link, Fab, Icon, Toolbar, Tabs, Tab, Block } from 'framework7-react';\nimport ReportList from \"./list\"\nimport { dict } from '../../Dict';\n\nconst ReportIndex = (props) => {\n  return (\n    <Page pageContent={false}>\n      <Navbar title={dict.reports} >\n        <Link panelOpen=\"right\">\n          <Icon f7=\"bars\"></Icon>\n        </Link>\n        <Subnavbar inner={false}>\n          <Searchbar\n            disableButtonText={dict.cancel}\n            placeholder={dict.search}\n            onChange={(e) => {\n              props.search({ query: e.target.value })\n            }}\n          ></Searchbar>\n        </Subnavbar>\n      </Navbar>\n      <Toolbar tabbar bottom>\n          <Link tabLink=\"#tab-1\" tabLinkActive><i className=\"va ml-5 fa fa-link\"></i></Link>\n          <Link tabLink=\"#tab-2\"><i className=\"va ml-5 fa fa-plug\"></i></Link>\n          <Link tabLink=\"#tab-3\"><i className=\"va ml-5 fa fa-user-o\"></i></Link>\n        </Toolbar>\n      <BlockTitle></BlockTitle>\n      <Fab href=\"/reports/new\" target=\"#main-view\" position=\"left-bottom\" slot=\"fixed\" color=\"deeporange\">\n        <Icon ios=\"f7:add\" aurora=\"f7:add\" md=\"material:add\"></Icon>\n        <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n      </Fab>\n      <Tabs swipeable>\n        <Tab id=\"tab-1\" className=\"page-content\" tabActive>\n          <Block>\n            <ReportList reports={props.reports} interaction={props.interaction} loadMore={props.loadMore} />\n          </Block>\n        </Tab>\n\n        <Tab id=\"tab-2\" className=\"page-content\" >\n          <Block>\n            <ReportList reports={props.reports} interaction={props.interaction} loadMore={props.loadMore} />\n          </Block>\n        </Tab>\n\n        <Tab id=\"tab-3\" className=\"page-content\" >\n          <Block>\n            <ReportList reports={props.reports} interaction={props.interaction} loadMore={props.loadMore} />\n          </Block>\n        </Tab>\n      </Tabs>\n    </Page>\n  )\n}\nexport default ReportIndex;\n","\nexport function loggedIn() {\n  console.log('>>>>>>>>>>>>>>>>>>>>>');\n    var token = window.localStorage.getItem('token');\n    if (token) {\n      return true\n    } else {\n      this.$f7router.navigate('/login/');\n    }\n\n}\n","import React from \"react\"\nimport { Page, Fab, Icon } from 'framework7-react';\nimport ModelStore from \"../../stores/ModelStore\";\nimport ReportIndex from \"../../containers/reports/index\"\nimport * as MyActions from \"../../actions/MyActions\";\nimport { loggedIn } from \"../../components/users/loggedIn.js\"\n\n\nexport default class Report extends React.Component {\n  constructor() {\n    super();\n    this.getList = this.getList.bind(this);\n    this.loggedIn = loggedIn.bind(this);\n    this.interaction = this.interaction.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.search = this.search.bind(this);\n    this.loadMore = this.loadMore.bind(this);\n\n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      reports: [],\n      query: null,\n      page: 1\n    }\n  }\n  componentWillMount() {\n    ModelStore.on(\"got_list\", this.getList);\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_list\", this.getList);\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n  }\n\n  componentDidMount() {\n    this.loggedIn();\n    this.loadData();\n  }\n\n  loadData() {\n    MyActions.getList('reports', this.state.page, {}, this.state.token);\n  }\n\n  search(obj) {\n    this.setState({ reports: [], page: 1 });\n    this.setState(obj, () => {\n      MyActions.getList('reports/search', this.state.page, { q: this.state.query });\n    });\n\n  }\n\n  setInstance() {\n    var report = ModelStore.getIntance()\n    if (report) {\n      this.setState({ reports: this.state.reports.map(el => (el.id === report.id ? Object.assign({}, el, report) : el)) });\n    }\n  }\n\n\n  loadMore() {\n    if (this.state.query && this.state.query.length > 0) {\n      this.setState({ page: this.state.page + 1 }, () => {\n        MyActions.getList('reports/search', this.state.page, {q: this.state.query }, this.state.token);\n      });\n    } else {\n      this.setState({ page: this.state.page + 1 }, () => {\n        MyActions.getList('reports', this.state.page, {}, this.state.token);\n      });\n    }\n  }\n\n  getList() {\n    var reports = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    if (reports.length > 0 && klass === 'Report') {\n      this.setState({\n        reports: this.state.reports.concat(reports),\n      });\n    }\n  }\n\n  interaction(interaction_type, interactionable_id, interactionable_type, source_type = null, source_id = null) {\n    var data = { interaction_type: interaction_type, interactionable_id: interactionable_id, interactionable_type: interactionable_type, source_type: source_type, source_id: source_id }\n    MyActions.setInstance('interactions', data, this.state.token);\n  }\n\n  render() {\n    const { reports } = this.state;\n    return (<ReportIndex interaction={this.interaction} loadMore={this.loadMore} reports={reports} search={this.search} />)\n  }\n}\n","import React from \"react\";\nimport { Card, CardContent, CardHeader } from 'framework7-react';\nimport 'react-dropzone-uploader/dist/styles.css'\nimport '../../css/upload.css'\nimport Dropzone from 'react-dropzone-uploader'\nimport { dict } from \"../../Dict\";\nimport { conf } from '../../conf';\nconst server= conf.server\n\nconst UploadForm = (props) => {\n  // specify upload params and url for your files\n  const getUploadParams = ({ meta }) => { return { fields:{'upload[title]':props.title, 'upload[uuid]': props.uuid}, url: server+'/uploads' } }\n  \n  // called every time a file's `status` changes\n  const handleChangeStatus = ({ meta, file }, status) => { console.log(status, meta, file) }\n  \n  // receives array of files that are done uploading when submit button is clicked\n  const handleSubmit = (files, allFiles) => {\n    console.log(files.map(f => f.meta))\n    allFiles.forEach(f => f.remove())\n  }\n\n  return (\n    <Card>\n      <CardHeader>{dict.attachment}</CardHeader>\n      <CardContent>\n    <Dropzone\n      getUploadParams={getUploadParams}\n      onChangeStatus={handleChangeStatus}\n      onSubmit={handleSubmit}\n      autoUpload={true}\n      submitButtonDisabled={true}\n      inputContent={dict.drag_or_browse}\n    />\n    </CardContent>\n    </Card>\n  )\n}\n\nexport default UploadForm;\n","import React from \"react\";\nimport { List, BlockTitle, ListInput, Link, CardFooter, Button, Card, CardHeader } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport crypto from 'crypto-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport { EditorState, convertFromRaw } from \"draft-js\";\nimport UploadForm from \"../uploads/form\"\nimport fa from '../../js/fa.js';\n\nconst ReportForm = (props) => {\n  function attachments() {\n    if (props.previous_attachments) {\n      return (\n        <React.Fragment>\n          <BlockTitle>{dict.previous_attachments}</BlockTitle>\n          <List>\n            {props.attachments.map((attachment) =>\n              <li className=\"\">\n                <div className=\"item-content\">\n                  <div className=\"item-inner\">\n                    <div className=\"item-title\">\n                      <a className=\"link\" onClick={() => props.removeAttachment(attachment.id)}>\n                        <i className=\"fa ml-5 fa-trash\" aria-hidden=\"true\"></i>\n                        {attachment.filename}\n                      </a>\n                    </div>\n                  </div>\n                </div>\n              </li>\n            )}\n          </List>\n        </React.Fragment>\n      )\n    }\n  }\n  if (props.report) {\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>{dict.new_report}</CardHeader>\n          <List >\n            <ListInput\n              label={dict.title + '*'}\n              type=\"text\"\n              placeholder='...'\n              maxlength='65'\n              defaultValue={props.title}\n              onInput={(e) => {\n                props.handleChange({ title: e.target.value })\n              }}\n            />\n            <Editor\n              editorState={props.editorState}\n              placeholder={dict.content}\n              localization={{\n                locale: 'fa',\n                translations: fa\n              }}\n              toolbar={{\n                options: ['inline', 'list', 'link'],\n                inline: { options: ['bold', 'italic', 'underline'] },\n                image: {\n                  uploadCallback: props.uploadImageCallBack,\n                  previewImage: true,\n                },\n              }}\n              onEditorStateChange={props.onEditorStateChange}\n            />\n          </List>\n\n          <CardFooter>\n            <Link></Link>\n            <Link className=\"btn-notice\"></Link>\n            <Button className=\"col btn\" fill onClick={(e) => props.submit(e)} >{dict.submit}</Button>\n          </CardFooter>\n        </Card>\n        <UploadForm uploadableType='Report' uuid={props.uuid} />\n\n\n\n      </React.Fragment>\n    )\n  } else {\n    return (null)\n  }\n}\nexport default ReportForm;\n","import { conf } from '../../conf';\nexport function uploadImageCallBack(file) {\n  return new Promise(\n    (resolve, reject) => {\n      const xhr = new XMLHttpRequest(); // eslint-disable-line no-undef\n      xhr.open('POST', conf.server+'/uploads');\n      xhr.setRequestHeader('Authorization', 'Client-ID 8d26ccd12712fca');\n      const data = new FormData(); // eslint-disable-line no-undef\n      data.append('upload[image]', file);\n      xhr.send(data);\n      xhr.addEventListener('load', () => {\n        const response = JSON.parse(xhr.responseText);\n        resolve(response);\n      });\n      xhr.addEventListener('error', () => {\n        const error = JSON.parse(xhr.responseText);\n        reject(error);\n      });\n    },\n  );\n}\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon\n} from 'framework7-react';\nimport { dict } from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport ReportForm from \"../../containers/reports/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\nimport { EditorState, convertFromRaw, convertToRaw } from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport { uploadImageCallBack } from \"./uploader.js\";\nimport crypto from 'crypto-js';\n\nexport default class ReportCreate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.onEditorStateChange = this.onEditorStateChange.bind(this)\n    this.getList = this.getList.bind(this)\n    this.uploadImageCallBack = uploadImageCallBack.bind(this);\n\n\n    this.state = {\n      report: {},\n      editorState: EditorState.createEmpty(),\n      token: window.localStorage.getItem('token'),\n      title: null,\n      interaction: null,\n      uuid: crypto.enc.Base64.stringify(crypto.lib.WordArray.random(128/8)),\n      page: 0\n    }\n  }\n\n\n  componentWillMount() {\n    ModelStore.on(\"set_instance\", this.setInstance);\n    ModelStore.on(\"got_list\", this.getList);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n    ModelStore.removeListener(\"got_list\", this.getList);\n  }\n\n\n\n  submit() {\n    this.$$('.btn').hide();\n    this.$$('.btn-notice').text(dict.submitting);\n    \n  //  this.$$()\n    const blocks = convertToRaw(this.state.editorState.getCurrentContent()).blocks;\n    const value = blocks.map(block => (!block.text.trim() && '\\n') || block.text).join('\\n');\n    var taskId = null\n    var workId = null\n    if (this.$f7route.params['callerType'] == 'tasks'){\n      taskId = this.$f7route.params['callerId']\n    }\n    if (this.$f7route.params['callerType'] == 'works'){\n      workId = this.$f7route.params['callerId']\n    }\n    var data = { task_id: taskId, work_id: workId, uuid: this.state.uuid, title: this.state.title, content: value, draft: convertToRaw(this.state.editorState.getCurrentContent()) }\n    if (this.state.title) {\n      MyActions.setInstance('reports', data, this.state.token);\n    } else {\n      const self = this;\n      self.$f7.dialog.alert(dict.incomplete_data, dict.alert);\n    }\n  }\n\n  onEditorStateChange(editorState) {\n    this.setState({\n      editorState,\n    });\n  };\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  loadData() {\n    \n  }\n\n  componentDidUpdate(prev, prevstate) {\n  }\n\n  getList() {\n\n  }\n\n  setInstance() {\n    var report = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (report && klass === 'Report') { \n      this.$$('.btn').show();\n      this.$f7router.navigate('/reports/'+ report.id);\n    }\n    \n  }\n\n\n\n\n\n  render() {\n    const { report, editorState, uuid } = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.report_form}  backLink={dict.back} />\n        <ReportForm report={report} uuid={uuid} editorState={editorState} onEditorStateChange={this.onEditorStateChange} submit={this.submit} handleChange={this.handleChangeValue} uploadImageCallBack={this.uploadImageCallBack} />\n      </Page>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport ReportForm from \"../../containers/reports/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\nimport { EditorState, convertFromRaw, convertToRaw } from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport {uploadImageCallBack} from \"./uploader.js\"\nimport crypto from 'crypto-js';\n\nexport default class ReportUpdate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.getInstance = this.getInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.onEditorStateChange = this.onEditorStateChange.bind(this)\n    this.getList = this.getList.bind(this)\n    this.removeAttachment = this.removeAttachment.bind(this);\n    \n\n    this.state = {\n      report: null,\n      editorState: EditorState.createEmpty(),\n      token: window.localStorage.getItem('token'),\n      uuid: crypto.enc.Base64.stringify(crypto.lib.WordArray.random(128/8)),\n      id: null,\n      title: null,\n      draft: null,\n      taskId:  null,\n      workId: null,\n      page: 0\n    }\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.setInstance);\n    ModelStore.on(\"got_list\", this.getList);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n    ModelStore.removeListener(\"got_list\", this.getList);\n  }\n\n  submit(){\n    const blocks = convertToRaw(this.state.editorState.getCurrentContent()).blocks;\n    const value = blocks.map(block => (!block.text.trim() && '\\n') || block.text).join('\\n');\n    var taskId = null\n    var workId = null\n    if (this.state.task){\n      taskId = this.state.task.id\n    }\n    if (this.state.work){\n      workId = this.state.work.id\n    }\n    var data = {\n      id: this.state.id, task_id: taskId, work_id: workId, \n      uuid: this.state.uuid, title: this.state.title, content: value, \n      draft: convertToRaw(this.state.editorState.getCurrentContent()) \n    }\n    MyActions.updateInstance('reports', data, this.state.token);\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  loadData(){\n    const f7: Framework7 = Framework7.instance;\n    f7.toast.show({ text: dict.receiving, closeTimeout: 2000, position: 'top'});\n    if (this.$f7route.params['reportId']) {\n      MyActions.getInstance('reports', this.$f7route.params['reportId'], this.state.token);\n    }\n  }\n\n  getList() {\n\n  }\n\n  getInstance(){\n    var report = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (report && klass === 'Report') { \n      const contentState = convertFromRaw(report.draft);\n      const editorState = EditorState.createWithContent(contentState);\n      this.setState({\n        report: report,\n        title: report.title,\n        id: report.id,\n        task: report.the_task,\n        work: report.the_work,\n        attachments: report.attachments,\n        editorState: editorState\n      });\n    }\n    console.log(report);\n  }\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  onEditorStateChange(editorState){\n      this.setState({\n      editorState,\n    });\n  };\n\n  removeAttachment(id){\n    this.setState({\n      attachments: this.state.attachments.filter(function (attachment) {\n        return attachment.id !== id\n      })\n    });\n    var data = { id: id }\n    MyActions.removeInstance('uploads', data, this.state.token, this.state.page);\n  }\n\n\n  setInstance() {\n    var report = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (report && klass === 'Report') { \n      this.$f7router.navigate('/reports/'+ report.id);\n    }\n    \n  }\n\n\n  render() {\n    const { report, editorState, uuid, title, attachments} = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.report} backLink={dict.back} />\n        <BlockTitle>{dict.workflow_form}</BlockTitle>\n        <ReportForm \n        report={report} attachments={attachments} title={title} \n        uuid={uuid} editorState={editorState} \n        onEditorStateChange={this.onEditorStateChange} submit={this.submit}  \n        handleChange={this.handleChangeValue} removeAttachment={this.removeAttachment}/>\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { Page, Navbar, List, BlockTitle, ListItem, Fab, Icon,Preloader, Block} from 'framework7-react';\nimport { dict} from '../../Dict';\n\n\nconst GroupShow = (props) => {\n  if (props.group){\n    return(\n      <React.Fragment>\n        <BlockTitle>{dict.title}</BlockTitle>\n        <List simple-list>\n          <ListItem>{props.group.title}</ListItem>\n        </List>\n\n        <List className='fs-11'>\n        {props.group.the_grouping.map((item) =>\n          <ListItem\n            key={'involvement' + item.profile.id}\n            title={item.profile.fullname}\n            after=''>\n            <img slot=\"media\" src={item.profile.avatar} width=\"27\" height=\"27\" />\n          </ListItem>\n        )}\n      </List>\n\n      </React.Fragment>\n    )\n  } else {\n    return(null)\n  }\n}\nexport default GroupShow;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon, Fab\n} from 'framework7-react';\nimport { dict } from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport GroupShow from \"../../containers/groups/show\"\n\nexport default class Layout extends Component {\n  constructor() {\n    super();\n    this.getInstance = this.getInstance.bind(this);\n    this.submit = this.submit.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n\n\n    \n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      group: null,\n      id: null,\n      user_id: null,\n    }\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.getInstance);\n    ModelStore.on(\"deleted_instance\", this.getInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.getInstance);\n    ModelStore.removeListener(\"deleted_instance\", this.getInstance);\n  }\n\n  componentDidMount() {\n    MyActions.getInstance('groups', this.$f7route.params['groupId'], this.state.token);\n  }\n\n  getInstance() {\n    var group = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (group && klass === 'Group') {\n      this.setState({\n        group: group,\n        id: group.id,\n      });\n    }\n    this.$$('.btn').show();\n  }\n\n\n  submit() {\n    this.$$('.btn').hide();\n    this.$$('.btn-notice').text(dict.submitting);\n    var data = { group_id: this.state.id, user_id: this.state.user_id }\n    MyActions.setInstance('users/assignments', data, this.state.token);\n  }\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  fab() {\n    if (this.state.group) {\n      return (\n        <Fab href={\"/groups/\" + this.state.group.id + \"/edit\"} target=\"#main-view\" position=\"left-bottom\" slot=\"fixed\" color=\"lime\">\n          <Icon ios=\"f7:edit\" aurora=\"f7:edit\" md=\"material:edit\"></Icon>\n          <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n        </Fab>\n      )\n    }\n  }\n\n\n  render() {\n    const { group } = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.groups} backLink={dict.back} />\n        <BlockTitle></BlockTitle>\n        {this.fab()}\n        <GroupShow \n          group={group}  submit={this.submit} \n          handleChange={this.handleChangeValue}\n        />\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { List, ListItem} from 'framework7-react';\nimport crypto from 'crypto-js';\n\nconst GroupList = (props) => {\n\n  if (props.groups) {\n    return (\n      <List mediaList>\n        {props.groups.map((group) =>\n          <ListItem\n            key={crypto.lib.WordArray.random(32)}\n            link={\"/groups/\" + group.id}\n            ignoreCache={true}\n            title={group.title}\n            after=\"\"\n            subtitle=\"\"\n            text=\"\"\n            ></ListItem>\n        )}\n      </List>\n    )} else {\n      return (<ul></ul>)\n    }\n  }\n  export default GroupList;\n","import React from \"react\";\nimport { Page, Navbar, List, BlockTitle, ListItem, Fab, Icon,Preloader, Block} from 'framework7-react';\nimport GroupList from \"./list\"\nimport { dict} from '../../Dict';\n\nconst GroupIndex = (props) => {\n  return(\n    <Page>\n      <Navbar title={dict.groups} backLink={dict.back} >\n      </Navbar>\n      <BlockTitle>{dict.list}</BlockTitle>\n      <Fab href=\"/groups/new\" target=\"#main-view\"  position=\"left-bottom\" slot=\"fixed\" color=\"deeporange\">\n        <Icon ios=\"f7:add\" aurora=\"f7:add\" md=\"material:add\"></Icon>\n        <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n      </Fab>\n      <GroupList groups={props.groups}/>\n    </Page>\n  )\n}\nexport default GroupIndex;\n","import React from \"react\"\nimport { Page,Fab, Icon } from 'framework7-react';\nimport ModelStore from \"../../stores/ModelStore\";\nimport GroupIndex from \"../../containers/groups/index\"\nimport * as MyActions from \"../../actions/MyActions\";\nimport { dict} from '../../Dict';\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\n\nexport default class Layout extends React.Component {\n  constructor() {\n    super();\n    this.getList = this.getList.bind(this);\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      groups: null,\n    }\n  }\n  componentWillMount() {\n    ModelStore.on(\"got_list\", this.getList);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_list\", this.getList);\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  loadData(){\n    const f7: Framework7 = Framework7.instance;\n    f7.toast.show({ text: dict.receiving, closeTimeout: 2000, position: 'top'});\n    MyActions.getList('groups', this.state.page, {}, this.state.token);\n  }\n\n  getList() {\n    var groups = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    if (groups && klass === 'Group'){\n      this.setState({\n        groups: groups,\n      });\n    }\n  }\n\n  render() {\n    const {groups} = this.state;\n    return(<GroupIndex groups={groups}/>)\n  }\n}\n","import React from \"react\";\nimport { List, ListItem, ListInput, Block, Row, Button, BlockTitle, Chip, Link } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport crypto from 'crypto-js';\n\n\nconst GroupForm = (props) => {\n  console.log(props)\n  function groupings() {\n    var chips = [\n      <div>\n        <a className='fs-11 ' href=\"#\" id='time-sheet-grouping'>\n          <div className=\"item-title fs-11\">\n            <i className=\"va-minus-2 ml-5 fa fa-user-plus\"></i>\n            {dict.profiles}:\n        </div>\n        </a>\n      </div>\n    ]\n    if (props.grouping) {\n      props.grouping.map((profile) => {\n        chips.push(<Chip text={profile.fullname} deleteable onClick={() => props.removeGrouping(profile.id)} />)\n      }\n      )\n    }\n    return chips\n  }\n  return (\n    <React.Fragment>\n      <BlockTitle>{dict.group}</BlockTitle>\n      <List >\n        <ListInput\n          label={dict.title}\n          type=\"text\"\n          placeholder='...'\n          defaultValue={props.title}\n          onInput={(e) => {\n            props.handleChange({ title: e.target.value })\n          }}\n        />\n        <ListItem title={groupings()}></ListItem>\n      </List>\n      \n\n      <Block strong>\n        <Row tag=\"p\">\n        <Link className=\"btn-notice\"></Link>\n          <Button className=\"col btn\" fill disabled={!props.editing} onClick={props.submit}>{dict.submit}</Button>\n        </Row>\n      </Block>\n    </React.Fragment>\n  )}\nexport default GroupForm;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport GroupForm from \"../../containers/groups/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\nimport { conf } from '../../conf';\n\nexport default class GroupCreate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.loadGrouping = this.loadGrouping.bind(this);\n    this.removeGrouping = this.removeGrouping.bind(this);\n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      group: {},\n      grouping: [],\n    }\n  }\n\n\n  componentWillMount() {\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n  }\n\n  submit(){\n    var data = {title: this.state.title, grouping: this.state.grouping}\n    MyActions.setInstance('groups', data, this.state.token);\n  }\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  setInstance(){\n    const self = this;\n    this.$f7router.navigate('/groups/');\n  }\n\n  removeGrouping(id){\n    this.setState({\n      grouping: this.state.grouping.filter(function (profile) {\n        return profile.id !== id\n      })\n    });\n  }\n\n  pageAfterIn() {\n    this.loadGrouping();\n  }\n\n\n  loadGrouping() {\n    const self = this;\n    const app = self.$f7;\n    app.autocomplete.create({\n      openIn: 'popup', //open in page\n      openerEl: '#time-sheet-grouping', //link that opens autocomplete\n      multiple: true, //allow multiple values\n      valueProperty: 'id', //object's \"value\" property name\n      textProperty: 'fullname', //object's \"text\" property name\n      searchbarDisableText: dict.cancel,\n      popupCloseLinkText: dict.close,\n      notFoundText: dict.not_found,\n      limit: 50,\n      searchbarPlaceholder: dict.search,\n      //preloader: true, //enable preloader\n      source: function (query, render) {\n        var autocomplete = this;\n        var results = [];\n        if (query.length === 0) {\n          render(results);\n          return;\n        }\n        // Show Preloader\n       // autocomplete.preloaderShow();\n        // Do Ajax request to Autocomplete data\n        app.request({\n          url: conf.server + '/profiles/search',\n          method: 'GET',\n          dataType: 'json',\n          //send \"query\" to server. Useful in case you generate response dynamically\n          data: {\n            q: query\n          },\n          success: function (item) {\n            // Find matched items\n            for (var i = 0; i < item.data.length; i++) {\n               results.push(item.data[i]);\n            }\n            // Hide Preoloader\n            //autocomplete.preloaderHide();\n            // Render items by passing array with result items\n            render(results);\n          }\n        });\n      },\n      on: {\n        change: function (value) {\n          if (value && value[value.length - 1]) {\n            self.setState({ grouping: self.state.grouping.concat({ fullname: value[value.length - 1].fullname, id: value[value.length - 1].id }) })\n          }\n        },\n      },\n    });\n  }\n\n\n\n  render() {\n    const {group, grouping} = this.state;\n    return (\n      <Page onPageAfterIn={this.pageAfterIn.bind(this)}>\n        <Navbar title={dict.group_form} backLink={dict.back} />\n        <BlockTitle>{dict.group_form}</BlockTitle>\n        <GroupForm \n        group={group} submit={this.submit} editing={true} grouping={grouping}\n        handleChange={this.handleChangeValue} removeGrouping={this.removeGrouping}\n        \n        />\n      </Page>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport GroupForm from \"../../containers/groups/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\nimport { conf } from '../../conf';\n\nexport default class GroupCreate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.loadGrouping = this.loadGrouping.bind(this);\n    this.removeGrouping = this.removeGrouping.bind(this);\n    this.getInstance = this.getInstance.bind(this);\n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      group: {},\n      title: null,\n      id: null,\n      grouping: [],\n    }\n  }\n\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n  }\n\n  componentDidMount() {\n    MyActions.getInstance('groups', this.$f7route.params['groupId'], this.state.token);\n  }\n\n  submit(){\n    var data = {id: this.state.id, title: this.state.title, grouping: this.state.grouping}\n    MyActions.updateInstance('groups', data, this.state.token);\n  }\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  setInstance(){\n    const self = this;\n    this.$f7router.navigate('/groups/');\n  }\n\n  removeGrouping(id){\n    this.setState({\n      grouping: this.state.grouping.filter(function (profile) {\n        return profile.id !== id\n      })\n    });\n  }\n\n  pageAfterIn() {\n    this.loadGrouping();\n  }\n\n  getInstance() {\n    var group = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (group && klass === 'Group') {\n      this.setState({\n        group: group,\n        id: group.id,\n        title: group.title,\n        grouping: group.tag_grouping\n      });\n    }\n  }\n\n\n  loadGrouping() {\n    const self = this;\n    const app = self.$f7;\n    app.autocomplete.create({\n      openIn: 'popup', //open in page\n      openerEl: '#time-sheet-grouping', //link that opens autocomplete\n      multiple: true, //allow multiple values\n      valueProperty: 'id', //object's \"value\" property name\n      textProperty: 'fullname', //object's \"text\" property name\n      searchbarDisableText: dict.cancel,\n      popupCloseLinkText: dict.close,\n      notFoundText: dict.not_found,\n      limit: 50,\n      searchbarPlaceholder: dict.search,\n      //preloader: true, //enable preloader\n      source: function (query, render) {\n        var autocomplete = this;\n        var results = [];\n        if (query.length === 0) {\n          render(results);\n          return;\n        }\n        // Show Preloader\n       // autocomplete.preloaderShow();\n        // Do Ajax request to Autocomplete data\n        app.request({\n          url: conf.server + '/profiles/search',\n          method: 'GET',\n          dataType: 'json',\n          //send \"query\" to server. Useful in case you generate response dynamically\n          data: {\n            q: query\n          },\n          success: function (item) {\n            // Find matched items\n            for (var i = 0; i < item.data.length; i++) {\n               results.push(item.data[i]);\n            }\n            // Hide Preoloader\n            //autocomplete.preloaderHide();\n            // Render items by passing array with result items\n            render(results);\n          }\n        });\n      },\n      on: {\n        change: function (value) {\n          if (value && value[value.length - 1]) {\n            self.setState({ grouping: self.state.grouping.concat({ fullname: value[value.length - 1].fullname, id: value[value.length - 1].id }) })\n          }\n        },\n      },\n    });\n  }\n\n\n\n  render() {\n    const {group, grouping, title, id} = this.state;\n    return (\n      <Page onPageAfterIn={this.pageAfterIn.bind(this)}>\n        <Navbar title={dict.group_form} backLink={dict.back} />\n        <BlockTitle>{dict.group_form}</BlockTitle>\n        <GroupForm \n        group={group} submit={this.submit} editing={true} grouping={grouping}\n        id={id} title={title}\n        handleChange={this.handleChangeValue} removeGrouping={this.removeGrouping}\n        \n        />\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { List, ListItem, Toggle, Block, Row, Button, Chip, Col } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport crypto from 'crypto-js';\n\n\nconst SettingForm = (props) => {\n  if (true) {\n    function setting(item) {\n      if (props.notification_setting && props.notification_setting[item]) {\n        return (true)\n      } else {\n        if (props.notification_setting && props.notification_setting[item] == false) {\n          return (false)\n        } else {\n          return (false)\n        }\n      }\n    }\n\n    function blockList() {\n      var chips = [\n        <div>\n          <a className='fs-11 ' href=\"#\" id='user-blocklist'>\n            <div className=\"item-title fs-11\">\n              <i className=\"va-minus-2 ml-5 fa fa-user-plus\"></i>\n              {dict.profiles}:\n          </div>\n          </a>\n        </div>\n      ]\n      if (props.blockList) {\n        props.blockList.map((profile) => {\n          chips.push(<Chip text={profile.fullname} deleteable onClick={() => props.removeBlocked(profile.id)} />)\n        }\n        )\n      }\n      return chips\n    }\n\n    return (\n      <React.Fragment>\n        <List form className='fs-11'>\n          <ListItem>\n            <span >{dict.private}</span>\n            <Toggle className='pd-5' onChange={(e) => props.changeSetting(e, '')} />\n            <span className='pd-10 fs-8'>{dict.if_someone_adds_you_youll_be_asked}</span>\n          </ListItem>\n        </List>\n\n        <List>\n          <ListItem title={dict.blocked_list}></ListItem>\n          <ListItem title={blockList()}></ListItem>\n        </List>\n\n        <div className=\"data-table card\">\n          <table className='fs-11'>\n            <thead>\n              <tr>\n                <td>{dict.notification_type}</td>\n                <td>{dict.mail_notification}</td>\n                <td>{dict.push_notification}</td>\n                <td>{dict.sms}</td>\n              </tr>\n            </thead>\n            <tbody>\n              {}\n              <tr>\n                <td className='fs-11'>{dict.add_involvement_to_tasks}</td>\n                <td><Toggle className='pd-5' checked={setting('add_involvement_to_tasks_email')} onChange={(e) => props.changeSetting(e, 'add_involvement_to_tasks_email')} /></td>\n                <td><Toggle className='pd-5' checked={setting('add_involvement_to_tasks_push')} onChange={(e) => props.changeSetting(e, 'add_involvement_to_tasks_push')} /></td>\n                <td><Toggle className='pd-5' checked={setting('add_involvement_to_tasks_sms')} onChange={(e) => props.changeSetting(e, 'add_involvement_to_tasks_sms')} /></td>\n              </tr>\n              <tr>\n                <td className='fs-11'>{dict.remove_involvement_from_tasks}</td>\n                <td><Toggle className='pd-5' checked={setting('remove_involvement_from_tasks_email')} onChange={(e) => props.changeSetting(e, 'remove_involvement_from_tasks_email')} /></td>\n                <td><Toggle className='pd-5' checked={setting('remove_involvement_from_tasks_push')} onChange={(e) => props.changeSetting(e, 'remove_involvement_from_tasks_push')} /></td>\n                <td><Toggle className='pd-5' checked={setting('remove_involvement_from_tasks_sms')} onChange={(e) => props.changeSetting(e, 'remove_involvement_from_tasks_sms')} /></td>\n              </tr>\n              <tr>\n                <td className='fs-11'>{dict.change_status_tasks}</td>\n                <td><Toggle className='pd-5' checked={setting('change_status_tasks_email')} onChange={(e) => props.changeSetting(e, 'change_status_tasks_email')} /></td>\n                <td><Toggle className='pd-5' checked={setting('change_status_tasks_push')} onChange={(e) => props.changeSetting(e, 'change_status_tasks_push')} /></td>\n                <td><Toggle className='pd-5' checked={setting('change_status_tasks_sms')} onChange={(e) => props.changeSetting(e, 'change_status_tasks_sms')} /></td>\n              </tr>\n              <tr>\n                <td className='fs-11'>{dict.add_works_to_tasks}</td>\n                <td><Toggle className='pd-5' checked={setting('add_works_to_tasks_email')} onChange={(e) => props.changeSetting(e, 'add_works_to_tasks_email')} /></td>\n                <td><Toggle className='pd-5' checked={setting('add_works_to_tasks_push')} onChange={(e) => props.changeSetting(e, 'add_works_to_tasks_push')} /></td>\n                <td><Toggle className='pd-5' checked={setting('add_works_to_tasks_sms')} onChange={(e) => props.changeSetting(e, 'add_works_to_tasks_sms')} /></td>\n              </tr>\n              <tr>\n                <td className='fs-11'>{dict.add_reports_to_tasks}</td>\n                <td><Toggle className='pd-5' checked={setting('add_reports_to_tasks_email')} onChange={(e) => props.changeSetting(e, 'add_reports_to_tasks_email')} /></td>\n                <td><Toggle className='pd-5' checked={setting('add_reports_to_tasks_push')} onChange={(e) => props.changeSetting(e, 'add_reports_to_tasks_push')} /></td>\n                <td><Toggle className='pd-5' checked={setting('add_reports_to_tasks_sms')} onChange={(e) => props.changeSetting(e, 'add_reports_to_tasks_sms')} /></td>\n              </tr>\n              <tr>\n                <td className='fs-11'>{dict.add_comments_to_tasks}</td>\n                <td><Toggle className='pd-5' checked={setting('add_comments_to_tasks_email')} onChange={(e) => props.changeSetting(e, 'add_comments_to_tasks_email')} /></td>\n                <td><Toggle className='pd-5' checked={setting('add_comments_to_tasks_push')} onChange={(e) => props.changeSetting(e, 'add_comments_to_tasks_push')} /></td>\n                <td><Toggle className='pd-5' checked={setting('add_comments_to_tasks_sms')} onChange={(e) => props.changeSetting(e, 'add_comments_to_tasks_sms')} /></td>\n              </tr>\n              <tr>\n                <td></td>\n                <td></td>\n                <td></td>\n                <td></td>\n              </tr>\n              <tr>\n                <td className='fs-11'>{dict.add_involvement_to_works}</td>\n                <td><Toggle className='pd-5' checked={setting('add_involvement_to_works_email')} onChange={(e) => props.changeSetting(e, 'add_involvement_to_works_email')} /></td>\n                <td><Toggle className='pd-5' checked={setting('add_involvement_to_works_push')} onChange={(e) => props.changeSetting(e, 'add_involvement_to_works_push')} /></td>\n                <td><Toggle className='pd-5' checked={setting('add_involvement_to_works_sms')} onChange={(e) => props.changeSetting(e, 'add_involvement_to_works_sms')} /></td>\n              </tr>\n              <tr>\n                <td className='fs-11'>{dict.remove_involvement_from_works}</td>\n                <td><Toggle className='pd-5' checked={setting('remove_involvement_from_works_email')} onChange={(e) => props.changeSetting(e, 'remove_involvement_from_works_email')} /></td>\n                <td><Toggle className='pd-5' checked={setting('remove_involvement_from_works_push')} onChange={(e) => props.changeSetting(e, 'remove_involvement_from_works_push')} /></td>\n                <td><Toggle className='pd-5' checked={setting('remove_involvement_from_works_sms')} onChange={(e) => props.changeSetting(e, 'remove_involvement_from_works_sms')} /></td>\n              </tr>\n              <tr>\n                <td className='fs-11'>{dict.change_status_works}</td>\n                <td><Toggle className='pd-5' checked={setting('change_status_works_email')} onChange={(e) => props.changeSetting(e, 'change_status_works_email')} /></td>\n                <td><Toggle className='pd-5' checked={setting('change_status_works_push')} onChange={(e) => props.changeSetting(e, 'change_status_works_push')} /></td>\n                <td><Toggle className='pd-5' checked={setting('change_status_works_sms')} onChange={(e) => props.changeSetting(e, 'change_status_works_sms')} /></td>\n              </tr>\n              <tr>\n                <td className='fs-11'>{dict.add_todos_to_works}</td>\n                <td><Toggle className='pd-5' checked={setting('add_todos_to_works_email')} onChange={(e) => props.changeSetting(e, 'add_todos_to_works_email')} /></td>\n                <td><Toggle className='pd-5' checked={setting('add_todos_to_works_push')} onChange={(e) => props.changeSetting(e, 'add_todos_to_works_push')} /></td>\n                <td><Toggle className='pd-5' checked={setting('add_todos_to_works_sms')} onChange={(e) => props.changeSetting(e, 'add_todos_to_works_sms')} /></td>\n              </tr>\n              <tr>\n                <td className='fs-11'>{dict.add_reports_to_works}</td>\n                <td><Toggle className='pd-5' checked={setting('add_reports_to_works_email')} onChange={(e) => props.changeSetting(e, 'add_reports_to_works_email')} /></td>\n                <td><Toggle className='pd-5' checked={setting('add_reports_to_works_push')} onChange={(e) => props.changeSetting(e, 'add_reports_to_works_push')} /></td>\n                <td><Toggle className='pd-5' checked={setting('add_reports_to_works_sms')} onChange={(e) => props.changeSetting(e, 'add_reports_to_works_sms')} /></td>\n              </tr>\n              <tr>\n                <td className='fs-11'>{dict.add_comments_to_works}</td>\n                <td><Toggle className='pd-5' checked={setting('add_comments_to_works_email')} onChange={(e) => props.changeSetting(e, 'add_comments_to_works_email')} /></td>\n                <td><Toggle className='pd-5' checked={setting('add_comments_to_works_push')} onChange={(e) => props.changeSetting(e, 'add_comments_to_works_push')} /></td>\n                <td><Toggle className='pd-5' checked={setting('add_comments_to_works_sms')} onChange={(e) => props.changeSetting(e, 'add_comments_to_works_sms')} /></td>\n              </tr>\n              <tr>\n                <td></td>\n                <td></td>\n                <td></td>\n                <td></td>\n              </tr>\n              <tr>\n                <td className='fs-11'>{dict.add_involvement_to_todos}</td>\n                <td><Toggle className='pd-5' checked={setting('add_involvement_to_todos_email')} onChange={(e) => props.changeSetting(e, 'add_involvement_to_todos_email')} /></td>\n                <td><Toggle className='pd-5' checked={setting('add_involvement_to_todos_push')} onChange={(e) => props.changeSetting(e, 'add_involvement_to_todos_push')} /></td>\n                <td><Toggle className='pd-5' checked={setting('add_involvement_to_todos_sms')} onChange={(e) => props.changeSetting(e, 'add_involvement_to_todos_sms')} /></td>\n              </tr>\n              <tr>\n                <td className='fs-11'>{dict.remove_involvement_from_todos}</td>\n                <td><Toggle className='pd-5' checked={setting('remove_involvement_from_todos_email')} onChange={(e) => props.changeSetting(e, 'remove_involvement_from_todos_email')} /></td>\n                <td><Toggle className='pd-5' checked={setting('remove_involvement_from_todos_push')} onChange={(e) => props.changeSetting(e, 'remove_involvement_from_todos_push')} /></td>\n                <td><Toggle className='pd-5' checked={setting('remove_involvement_from_todos_sms')} onChange={(e) => props.changeSetting(e, 'remove_involvement_from_todos_sms')} /></td>\n              </tr>\n              <tr>\n                <td></td>\n                <td></td>\n                <td></td>\n                <td></td>\n              </tr>\n              <tr>\n                <td className='fs-11'>{dict.add_involvement_to_time_sheets}</td>\n                <td><Toggle className='pd-5' checked={setting('add_involvement_to_time_sheets_email')} onChange={(e) => props.changeSetting(e, 'add_involvement_to_time_sheets_email')} /></td>\n                <td><Toggle className='pd-5' checked={setting('add_involvement_to_time_sheets_push')} onChange={(e) => props.changeSetting(e, 'add_involvement_to_time_sheets_push')} /></td>\n                <td><Toggle className='pd-5' checked={setting('add_involvement_to_time_sheets_sms')} onChange={(e) => props.changeSetting(e, 'add_involvement_to_time_sheets_sms')} /></td>\n              </tr>\n              <tr>\n                <td className='fs-11'>{dict.remove_involvement_from_timesheets}</td>\n                <td><Toggle className='pd-5' checked={setting('remove_involvement_from_timesheets_email')} onChange={(e) => props.changeSetting(e, 'remove_involvement_from_timesheets_email')} /></td>\n                <td><Toggle className='pd-5' checked={setting('remove_involvement_from_timesheets_push')} onChange={(e) => props.changeSetting(e, 'remove_involvement_from_timesheets_push')} /></td>\n                <td><Toggle className='pd-5' checked={setting('remove_involvement_from_timesheets_sms')} onChange={(e) => props.changeSetting(e, 'remove_involvement_from_timesheets_sms')} /></td>\n              </tr>\n\n            </tbody>\n          </table>\n        </div>\n\n\n\n      </React.Fragment>\n    )\n  } else {\n    return (null)\n  }\n\n}\nexport default SettingForm;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  BlockTitle,\n} from 'framework7-react';\nimport { dict } from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport SettingForm from \"../../containers/settings/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\nimport { conf } from '../../conf';\n\nexport default class SettingCreate extends Component {\n  constructor() {\n    super();\n\n    this.getInstance = this.getInstance.bind(this);\n    this.changeSetting = this.changeSetting.bind(this);\n    this.loadBlockList = this.loadBlockList.bind(this);\n    this.removeBlocked = this.removeBlocked.bind(this);\n    \n\n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      setting: {},\n      title: null,\n      id: null,\n      setting: null,\n      notification_setting: null,\n      blockList: []\n    }\n  }\n\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  loadData() {\n    MyActions.getInstance('settings', 1, this.state.token);\n  }\n\n  pageAfterIn() {\n    this.loadBlockList();\n  }\n\n\n  loadBlockList() {\n    const self = this;\n    const app = self.$f7;\n    app.autocomplete.create({\n      openIn: 'popup', //open in page\n      openerEl: '#user-blocklist', //link that opens autocomplete\n      multiple: true, //allow multiple values\n      valueProperty: 'id', //object's \"value\" property name\n      textProperty: 'fullname', //object's \"text\" property name\n      searchbarDisableText: dict.cancel,\n      popupCloseLinkText: dict.close,\n      notFoundText: dict.not_found,\n      limit: 50,\n      searchbarPlaceholder: dict.search,\n      //preloader: true, //enable preloader\n      source: function (query, render) {\n        var autocomplete = this;\n        var results = [];\n        if (query.length === 0) {\n          render(results);\n          return;\n        }\n        // Show Preloader\n       // autocomplete.preloaderShow();\n        // Do Ajax request to Autocomplete data\n        app.request({\n          url: conf.server + '/profiles/search',\n          method: 'GET',\n          dataType: 'json',\n          //send \"query\" to server. Useful in case you generate response dynamically\n          data: {\n            q: query\n          },\n          success: function (item) {\n            // Find matched items\n            for (var i = 0; i < item.data.length; i++) {\n               results.push(item.data[i]);\n            }\n            // Hide Preoloader\n            //autocomplete.preloaderHide();\n            // Render items by passing array with result items\n            render(results);\n          }\n        });\n      },\n      on: {\n        change: function (value) {\n          if (value && value[value.length - 1]) {\n            self.setState({ blockList: self.state.blockList.concat({ fullname: value[value.length - 1].fullname, id: value[value.length - 1].id }) })\n            var data = {profile_id: value[value.length - 1].id }\n            MyActions.setInstance('settings/add_block', data, self.state.token)\n          }\n        },\n      },\n    });\n  }\n\n\n\n\n\n  getInstance() {\n    var setting = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (setting && klass === 'Setting') {\n      this.setState({\n        title: setting.title,\n        id: setting.id,\n        notification_setting: setting.notification_setting\n      });\n    } else {\n      this.setState({\n        notification_setting: []\n      });\n    }\n    \n  }\n\n  changeSetting(e, item) {\n    var data = { item: item }\n    if (e.target.checked) {\n      this.setState(prevState => {\n        let notification_setting = Object.assign({}, prevState.notification_setting);\n        notification_setting[item] = true;\n        return { notification_setting };\n      })\n      MyActions.setInstance('settings/add', data, this.state.token)\n    } else {\n      this.setState(prevState => {\n        let notification_setting = Object.assign({}, prevState.notification_setting);\n        notification_setting[item] = false;\n        return { notification_setting };\n      })\n      MyActions.setInstance('settings/remove', data, this.state.token);\n    }\n  }\n\n  removeBlocked(id){\n    this.setState({\n      blockList: this.state.blockList.filter(function (profile) {\n        return profile.id !== id\n      })\n    });\n    var data = {profile_id: id }\n    MyActions.setInstance('settings/remove_block', data, this.state.token)\n  }\n\n\n\n\n  render() {\n    const { notification_setting, title, blockList } = this.state;\n    return (\n      <Page onPageAfterIn={this.pageAfterIn.bind(this)}>\n        <Navbar title={dict.work_form} backLink={dict.back} />\n        <BlockTitle>{dict.work_form}</BlockTitle>\n        <SettingForm\n          notification_setting={notification_setting}\n          title={title} changeSetting={this.changeSetting} blockList={blockList}\n          submit={this.submit} editing={true} handleChange={this.handleChangeValue} \n          removeBlocked={this.removeBlocked}\n          />\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { Link, List, CardHeader, ListInput, CardContent, CardFooter, Button, Page, Card, Navbar, Icon } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport crypto from 'crypto-js';\n\nconst LoginForm = (props) => {\n  return (\n    <Page>\n      <Navbar title={dict.sign_up} >\n        <Link panelOpen=\"right\">\n          <Icon f7=\"bars\"></Icon>\n        </Link>\n      </Navbar>\n      <Card>\n        <CardHeader>{dict.login}</CardHeader>\n        <CardContent className='mh-auto'>\n          <List >\n            <ListInput\n              label={dict.email}\n              type=\"text\"\n              autofocus={true}\n              placeholder={dict.enter_your_email}\n              value={props.email}\n              onInput={(e) => {\n                props.handleChange({ email: e.target.value })\n              }}\n            />\n            {/*<ListInput\n              label={dict.password}\n              type=\"password\"\n              placeholder={dict.enter_your_password}\n              value={props.password}\n              onInput={(e) => {\n                props.handleChange({ password: e.target.value })\n              }}\n            />*/}\n          </List>\n        </CardContent>\n        <CardFooter>\n          <Link href=\"/sign_up/\" animate={false} ignoreCache={true}>{dict.you_can_sign_up} </Link>\n          <Button fill className='fs-11 external f-color-black bg-teal' href=\"https://auth.ut.ac.ir:8443/cas/login?service=https%3A%2F%2Ftavan.ut.ac.ir%2Fusers%2Fservice\"  animate={false} ignoreCache={true}>{dict.cas} </Button>\n          <Link className=\"btn-notice\"></Link>\n          <Button className=\"col btn\" fill onClick={props.submit}>{dict.login}</Button>\n        </CardFooter>\n      </Card>\n    </Page>\n  )\n}\nexport default LoginForm;\n","import React from 'react';\nimport {\n  Page,\n  Navbar,\n  NavLeft,\n  NavTitle,\n  NavRight,\n  Link,\n  Toolbar,\n  Block,\n  BlockTitle,\n  List,\n  ListItem,\n  Row,\n  Col,\n  Button, Icon, Fab,Searchbar, Subnavbar, LoginScreenTitle, ListInput, ListButton, BlockFooter\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport LoginForm from \"../../containers/users/Login\"\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\nexport default class extends React.Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      email: '',\n      password: '',\n    };\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n  }\n  componentDidMount(){\n    if(this.$f7route.params['token']) {\n      MyActions.setInstance('users/validate_token', {}, this.$f7route.params['token']);\n    }\n    if(this.state.token && this.state.token.length > 10){\n      MyActions.setInstance('users/validate_token', {}, this.state.token);\n    }\n  }\n\n  submit(){\n    var data = {email: this.state.email, password: this.state.password}\n    MyActions.setInstance('users/login', data);\n  }\n\n  setInstance(){\n    var klass = ModelStore.getKlass()\n    if (klass === 'Login') {\n      this.$f7router.navigate('/verification/'+this.state.email);\n    }\n    if (klass === 'Validate') {\n      this.$f7router.navigate('/tasks/');\n      window.location.reload()\n    }\n    console.log(klass)\n  }\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  render() {\n    const {username, password} = this.state;\n    return (\n      <LoginForm submit={this.submit} handleChange={this.handleChangeValue}/>\n    )\n  }\n\n}\n","import React from 'react';\nimport {\n  Page,\n  Navbar,\n  NavLeft,\n  NavTitle,\n  NavRight,\n  Link,\n  Toolbar,\n  Block,\n  BlockTitle,\n  List,\n  ListItem,\n  Row,\n  Col,\n  Button, Icon, Fab,Searchbar, Subnavbar, LoginScreenTitle, ListInput, ListButton, BlockFooter\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport LoginForm from \"../../containers/users/Login\"\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\nexport default class extends React.Component {\n  constructor() {\n    super();\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n\n    this.state = {\n      email: '',\n      password: '',\n    };\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n  }\n  componentDidMount(){\n    MyActions.setInstance('users/validate_token', {}, this.$f7route.params['token']);\n  }\n\n  setInstance() {\n    var user = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (klass === 'Validate') {\n      window.localStorage.setItem('token', user.token);\n      this.$f7router.navigate('/tasks/');\n      window.location.reload()\n    } else {\n      this.$f7router.navigate('/login_error/');\n      window.location.reload()\n    }\n  }\n\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  render() {\n    const {username, password} = this.state;\n    return (\n      <LoginForm submit={this.submit} handleChange={this.handleChangeValue}/>\n    )\n  }\n\n}\n","import React from \"react\";\nimport { Link, List, ListItem, ListInput, Navbar, Icon, Button, Page, LoginScreenTitle, ListButton, CardFooter, Card, CardHeader, CardContent } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport crypto from 'crypto-js';\n\nconst SignUpForm = (props) => {\n  return (\n    <Page>\n      <Navbar title={dict.sign_up} >\n        <Link panelOpen=\"right\">\n          <Icon f7=\"bars\"></Icon>\n        </Link>\n      </Navbar>\n      <Card>\n        <CardHeader>{dict.sign_up}</CardHeader>\n        <CardContent>\n          <List >\n            <ListInput\n              label={dict.firstname + ' *'}\n              placeholder={dict.enter_your_name}\n              type=\"text\"\n              name={crypto.lib.WordArray.random(32)}\n              onInput={(e) => {\n                props.handleChange({ name: e.target.value })\n              }}\n            />\n\n            <ListInput\n              label={dict.surename + ' *'}\n              placeholder={dict.enter_your_surename}\n              type=\"text\"\n              name={crypto.lib.WordArray.random(32)}\n              onInput={(e) => {\n                props.handleChange({ surename: e.target.value })\n              }}\n            />\n\n\n            <ListInput\n              label={' * ' + dict.email}\n              type=\"email\"\n              validate\n              placeholder={dict.enter_your_email}\n              className='ltr'\n              value={props.email}\n              onInput={(e) => {\n                props.handleChange({ email: e.target.value })\n              }}\n            />\n          {/*\n            <ListInput\n              label={dict.password + ' *'}\n              type=\"password\"\n              placeholder={dict.enter_your_password}\n              autocomplete='new-password'\n              name={crypto.lib.WordArray.random(32)}\n              value={props.password}\n              onInput={(e) => {\n                props.handleChange({ password: e.target.value })\n              }}\n            />\n            <ListInput\n              label={dict.password_confirmation + ' *'}\n              type=\"password\"\n              autocomplete='off'\n              placeholder={dict.enter_your_password_confirmation}\n              value={props.password}\n              onInput={(e) => {\n                props.handleChange({ password_confirmation: e.target.value })\n              }}\n            />*/}\n          </List>\n        </CardContent>\n        <CardFooter>\n          <Link href=\"/login/\">{dict.if_registered}{'\\u00A0'}{dict.you_can_login} </Link>\n          <Link className=\"btn-notice\"></Link>\n          <Button className=\"col btn\" fill onClick={props.submit}>{dict.sign_up}</Button>\n        </CardFooter>\n      </Card>\n    </Page>\n  )\n}\nexport default SignUpForm;\n","import React from 'react';\nimport {\n  Page,\n  Navbar,\n  NavLeft,\n  NavTitle,\n  NavRight,\n  Link,\n  Toolbar,\n  Block,\n  BlockTitle,\n  List,\n  ListItem,\n  Row,\n  Col,\n  Button, Icon, Fab, Searchbar, Subnavbar, LoginScreenTitle, ListInput, ListButton, BlockFooter\n} from 'framework7-react';\nimport { dict } from '../../Dict';\nimport SignUpForm from \"../../containers/users/SignUp\"\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\nexport default class extends React.Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n\n    this.state = {\n      email: '',\n      name: '',\n      surename: '',\n    };\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n  }\n\n  submit() {\n    this.$$('.btn').hide();\n    this.$$('.btn-notice').text(dict.submitting);\n    var data = { \n      email: this.state.email,\n       name: this.state.name, \n       surename: this.state.surename }\n    if (\n      (this.state.email && this.state.email.length > 0) &&\n      (this.state.name && this.state.name.length > 0) &&\n      (this.state.surename && this.state.surename.length > 0) \n      ) {\n      MyActions.setInstance('users/sign_up', data);\n    } else {\n      const self = this;\n      self.$f7.dialog.alert(dict.incomplete_data, dict.alert);\n    }\n  }\n\n  setInstance() {\n    var klass = ModelStore.getKlass()\n    if (klass === 'SignUp') {\n      this.$$('.btn').show();\n      this.$f7router.navigate('/verification/'+this.state.email);\n    }\n  }\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n    console.log(obj)\n  }\n\n  render() {\n    const { username, password } = this.state;\n    return (\n      <SignUpForm submit={this.submit} handleChange={this.handleChangeValue} />\n    )\n  }\n\n}\n","import React from \"react\";\nimport { Link, List, CardHeader, ListInput, CardContent, CardFooter, Button, Page, Card, Navbar, Icon } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport crypto from 'crypto-js';\n\nconst LoginForm = (props) => {\n  return (\n    <Page>\n      <Navbar title={dict.verification} >\n        <Link panelOpen=\"right\">\n          <Icon f7=\"bars\"></Icon>\n        </Link>\n      </Navbar>\n      <Card>\n        <CardHeader>{dict.login}</CardHeader>\n        <CardContent >\n          <List >\n          <ListInput\n              label={dict.email}\n              type=\"text\"\n              autofocus={true}\n              placeholder={dict.enter_your_email}\n              value={props.email}\n              onInput={(e) => {\n                props.handleChange({ email: e.target.value })\n              }}\n            />\n            <ListInput\n              label={dict.verification_code}\n              type=\"text\"\n              placeholder={dict.enter_verification_code}\n              onInput={(e) => {\n                props.handleChange({ verificationCode: e.target.value })\n              }}\n            />\n          </List>\n        </CardContent>\n        <CardFooter>\n          <Link href=\"/sign_up/\" animate={false} ignoreCache={true}>{dict.you_can_sign_up} </Link>\n          <Link className=\"btn-notice\"></Link>\n          <Button className=\"col btn\" fill onClick={props.submit}>{dict.login}</Button>\n        </CardFooter>\n      </Card>\n    </Page>\n  )\n}\nexport default LoginForm;\n","import React from 'react';\nimport {\n  Page,\n  Navbar,\n  NavLeft,\n  NavTitle,\n  NavRight,\n  Link,\n  Toolbar,\n  Block,\n  BlockTitle,\n  List,\n  ListItem,\n  Row,\n  Col,\n  Button, Icon, Fab,Searchbar, Subnavbar, LoginScreenTitle, ListInput, ListButton, BlockFooter\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport VerificationForm from \"../../containers/users/Verification\"\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\nexport default class extends React.Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n\n    this.state = {\n      verificationCode: '',\n      email: '',\n    };\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n  }\n\n  componentDidMount(){\n    this.setState({email: this.$f7route.params['email']})\n  }\n\n  submit(){\n    var data = {verification_code: this.state.verificationCode}\n    MyActions.setInstance('users/verify', data);\n  }\n\n  setInstance(){\n    var user = ModelStore.getIntance();\n    var klass = ModelStore.getKlass()\n    if (user && klass == 'Verify'){\n      window.localStorage.setItem('token', user.token);\n      this.$f7router.navigate('/tasks/');\n      window.location.reload()\n    }\n  }\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  render() {\n    const {username, email} = this.state;\n    return (\n      <VerificationForm submit={this.submit} email={email} handleChange={this.handleChangeValue}/>\n    )\n  }\n\n}\n","import React from \"react\";\nimport { List, ListItem, Link, Card, CardHeader, CardContent, CardFooter } from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\n\nconst NotificationList = (props) => {\n  if (props.notifications && props.notifications.length > 0) {\n    function profileLink(profile) {\n      return (<Link href='/profiles/'>{profile.fullname}</Link>)\n    }\n\n    function colorClass(notification) {\n      if (!notification.seen) {\n        return 'bg-blonde'\n      }\n    }\n    return (\n      <Card>\n        <CardHeader></CardHeader>\n        <CardContent>\n          <List mediaList>\n            {props.notifications.map((notification) =>\n              <ListItem\n                className={'fs-11 ' + colorClass(notification)}\n                key={crypto.lib.WordArray.random(32)}\n                link={'/' + notification.target_type + '/' + notification.target_id}\n                title={profileLink(notification.profile)}\n                text={notification.notification_text.title}\n              >\n                <img slot=\"media\" src={notification.profile.avatar} width=\"32\" height=\"32\" />\n              </ListItem>\n            )}\n          </List>\n        </CardContent>\n        <CardFooter></CardFooter>\n      </Card>\n    )\n  } else {\n    return (<ul></ul>)\n  }\n}\nexport default NotificationList;\n","import React from \"react\";\nimport { Page, Navbar, Subnavbar, Searchbar, BlockTitle, Link, Fab, Icon, Toolbar, Tabs, Tab, Block } from 'framework7-react';\nimport NotificationList from \"./list\"\nimport { dict } from '../../Dict';\n\nconst NotificationIndex = (props) => {\n  return (\n    <Page>\n      <Navbar title={dict.notifications} >\n        <Link panelOpen=\"right\">\n          <Icon f7=\"bars\"></Icon>\n        </Link>\n      </Navbar>\n\n      <NotificationList notifications={props.notifications} loadMore={props.loadMore} />\n\n    </Page>\n  )\n}\nexport default NotificationIndex;\n","import HomePage from './containers/layouts/HomePage.jsx';\nimport NotFoundPage from './containers/layouts/NotFoundPage';\nimport PanelRightPage from './containers/layouts/PanelRightPage';\n\n\n\nimport RoleShow from './components/roles/show';\nimport RoleIndex from './components/roles/index';\nimport RoleCreate from './components/roles/create';\nimport RoleUpdate from './components/roles/update';\n\n\nimport TagShow from './components/tags/show';\nimport TagIndex from './components/tags/index';\nimport TagCreate from './components/tags/create';\nimport TagUpdate from './components/tags/update';\n\nimport StatusShow from './components/statuses/show';\nimport StatusIndex from './components/statuses/index';\nimport StatusCreate from './components/statuses/create';\nimport StatusUpdate from './components/statuses/update';\n\nimport TaskShow from './components/tasks/show';\nimport TaskIndex from './components/tasks/index';\nimport TaskCreate from './components/tasks/create';\nimport TaskUpdate from './components/tasks/update';\n\nimport WorkShow from './components/works/show';\nimport WorkIndex from './components/works/index';\nimport WorkCreate from './components/works/create';\nimport WorkUpdate from './components/works/update';\n\nimport TodoCreate from './components/todos/create';\nimport TodoUpdate from './components/todos/update';\n\nimport TimeSheetShow from './components/time_sheets/show';\nimport TimeSheetIndex from './components/time_sheets/index';\nimport TimeSheetCreate from './components/time_sheets/create';\nimport TimeSheetUpdate from './components/time_sheets/update';\n\n\nimport ProfileShow from './components/profiles/show';\nimport ProfileIndex from './components/profiles/index';\nimport ProfileCreate from './components/profiles/create';\nimport ProfileUpdate from './components/profiles/update';\n\nimport ReportShow from './components/reports/show';\nimport ReportIndex from './components/reports/index';\nimport ReportCreate from './components/reports/create';\nimport ReportUpdate from './components/reports/update';\n\nimport GroupShow from './components/groups/show';\nimport GroupIndex from './components/groups/index';\nimport GroupCreate from './components/groups/create';\nimport GroupUpdate from './components/groups/update';\n\nimport SettingUpdate from './components/settings/update';\n\nimport Login from './components/users/Login';\nimport LoginJwt from './components/users/LoginJwt';\nimport SignUp from './components/users/SignUp';\nimport Verification from './components/users/Verification';\nimport NotificationIndex from './components/notifications/index';\n\n\nexport default [\n  {\n    path: '/',\n    component: HomePage,\n  },\n  {\n    path: '/login/',\n    component: Login,\n  },\n  {\n    path: '/sign_up/',\n    component: SignUp,\n  },\n  {\n    path: '/verification/:email',\n    component: Verification,\n  },\n  {\n    path: '/login_jwt/:token',\n    component: LoginJwt,\n  },\n  {\n    path: '/panel-right/',\n    component: PanelRightPage,\n  },\n\n  {\n    path: '/notifications/',\n    component: NotificationIndex,\n  },\n\n\n  {\n    path: '/roles/',\n    component: RoleIndex,\n  },\n  {\n    path: '/roles/:roleId/edit',\n    component: RoleUpdate,\n  },\n  {\n    path: '/roles/new',\n    component: RoleCreate,\n  },\n  {\n    path: '/roles/:roleId',\n    component: RoleShow,\n  },\n\n  {\n    path: '/settings/',\n    component: SettingUpdate,\n  },\n\n  {\n    path: '/groups/',\n    component: GroupIndex,\n  },\n  {\n    path: '/groups/:groupId/edit',\n    component: GroupUpdate,\n  },\n  {\n    path: '/groups/new',\n    component: GroupCreate,\n  },\n  {\n    path: '/groups/:groupId',\n    component: GroupShow,\n  },\n\n\n  {\n    path: '/statuses/',\n    component: StatusIndex,\n  },\n  {\n    path: '/statuses/:statusId/edit',\n    component: StatusUpdate,\n  },\n  {\n    path: '/statuses/new',\n    component: StatusCreate,\n  },\n  {\n    path: '/statuses/:statusId',\n    component: StatusShow,\n  },\n\n\n  {\n    path: '/tasks/',\n    component: TaskIndex,\n  },\n  {\n    path: '/tasks/:taskId/edit',\n    component: TaskUpdate,\n  },\n  {\n    path: '/tasks/new',\n    component: TaskCreate,\n  },\n  {\n    path: '/tasks/:taskId',\n    component: TaskShow,\n  },\n\n\n  {\n    path: '/tags/',\n    component: TagIndex,\n  },\n  {\n    path: '/tags/:tagId/edit',\n    component: TagUpdate,\n  },\n  {\n    path: '/tags/new',\n    component: TagCreate,\n  },\n  {\n    path: '/tags/:tagId',\n    component: TagShow,\n  },\n\n\n\n  {\n    path: '/time_sheets/',\n    component: TimeSheetIndex,\n  },\n  {\n    path: '/time_sheets/:timeSheetId/edit',\n    component: TimeSheetUpdate,\n  },\n  {\n    path: '/time_sheets/new',\n    component: TimeSheetCreate,\n  },\n  {\n    path: '/time_sheets/:timeSheetId',\n    component: TimeSheetShow,\n  },\n\n\n  {\n    path: '/reports/',\n    component: ReportIndex,\n  },\n  {\n    path: '/reports/:reportId/edit',\n    component: ReportUpdate,\n  },\n  {\n    path: '/reports/new/:callerType/:callerId',\n    component: ReportCreate,\n  },\n  {\n    path: '/reports/:reportId',\n    component: ReportShow,\n  },\n\n  {\n    path: '/works/',\n    component: WorkIndex,\n  },\n  {\n    path: '/works/:workId/edit',\n    component: WorkUpdate,\n  },\n  {\n    path: '/works/new/:taskId',\n    component: WorkCreate,\n  },\n  {\n    path: '/works/:workId',\n    component: WorkShow,\n  },\n\n  {\n    path: '/todos/:todoId/edit',\n    component: TodoUpdate,\n  },\n  {\n    path: '/todos/new/:workId',\n    component: TodoCreate,\n  },\n\n  {\n    path: '/profiles/',\n    component: ProfileIndex,\n  },\n  {\n    path: '/profiles/:profileId/edit',\n    component: ProfileUpdate,\n  },\n  {\n    path: '/profiles/new',\n    component: ProfileCreate,\n  },\n  {\n    path: '/profiles/:profileId',\n    component: ProfileShow,\n  },\n  {\n    path: '(.*)',\n    component: NotFoundPage,\n  },\n];\n","import React from 'react';\nimport {\n  Page,\n  Navbar,\n  NavLeft,\n  NavTitle,\n  NavRight,\n  Link,\n  Toolbar,\n  Block,\n  BlockTitle,\n  List,\n  ListItem,\n  Row,\n  Col,\n  Button, Icon, Fab, Searchbar, Subnavbar\n} from 'framework7-react';\nimport { dict } from '../../Dict';\n\nexport default () => (\n  <Page className=\"no-swipe-panel\">\n    <Navbar>\n\n      <NavLeft>\n        <Link panelOpen=\"right\">\n          <Icon f7=\"bars\"></Icon>\n        </Link>\n      </NavLeft>\n    </Navbar>\n  </Page>\n);\n","import React from \"react\"\nimport { Page, Fab, Icon } from 'framework7-react';\nimport ModelStore from \"../../stores/ModelStore\";\nimport NotificationIndex from \"../../containers/notifications/index\"\nimport * as MyActions from \"../../actions/MyActions\";\nimport { loggedIn } from \"../../components/users/loggedIn.js\"\n\n\nexport default class Notification extends React.Component {\n  constructor() {\n    super();\n    this.getList = this.getList.bind(this);\n    this.loggedIn = loggedIn.bind(this);\n    this.interaction = this.interaction.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.search = this.search.bind(this);\n    this.loadMore = this.loadMore.bind(this);\n\n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      notifications: [],\n      query: null,\n      page: 1\n    }\n  }\n  componentWillMount() {\n    ModelStore.on(\"got_list\", this.getList);\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_list\", this.getList);\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n  }\n\n  componentDidMount() {\n\n    this.loggedIn();\n    this.loadData();\n  }\n\n  loadData() {\n    MyActions.getList('notifications', this.state.page, {}, this.state.token);\n  }\n\n  search(obj) {\n    this.setState({ notifications: [], page: 1 });\n    this.setState(obj, () => {\n      MyActions.getList('notifications/search', this.state.page, { q: this.state.query });\n    });\n\n  }\n\n  loadMore() {\n    if (this.state.query && this.state.query.length > 0) {\n      this.setState({ page: this.state.page + 1 }, () => {\n        MyActions.getList('notifications/search', this.state.page, {q: this.state.query }, this.state.token);\n      });\n    } else {\n      this.setState({ page: this.state.page + 1 }, () => {\n        MyActions.getList('notifications', this.state.page, {}, this.state.token);\n      });\n    }\n  }\n\n\n\n  setInstance() {\n    var notification = ModelStore.getIntance()\n    if (notification) {\n      this.setState({ notifications: this.state.notifications.map(el => (el.id === notification.id ? Object.assign({}, el, notification) : el)) });\n    }\n  }\n\n  getList() {\n    var notifications = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    if (notifications.length > 0 && klass === 'Notification') {\n      this.setState({\n        notifications: this.state.notifications.concat(notifications),\n      });\n    }\n    var data = {}\n    MyActions.setInstance('notifications', data, this.state.token);\n  }\n\n  interaction(interaction_type, interactionable_id, interactionable_type, source_type = null, source_id = null) {\n    var data = { interaction_type: interaction_type, interactionable_id: interactionable_id, interactionable_type: interactionable_type, source_type: source_type, source_id: source_id }\n    MyActions.setInstance('interactions', data, this.state.token);\n  }\n\n  render() {\n    const { notifications } = this.state;\n    return (<NotificationIndex interaction={this.interaction} loadMore={this.loadMore} notifications={notifications} search={this.search} />)\n  }\n}\n","import React from 'react';\nimport { Page, Navbar, Block } from 'framework7-react';\n\nexport default () => (\n  <Page>\n    <Navbar title=\"Not found\" backLink=\"Back\" />\n    <Block strong>\n      <p>Sorry</p>\n      <p>Requested content not found.</p>\n    </Block>\n  </Page>\n);\n","import React, { Component } from 'react';\nimport {\n  App,\n  Panel,\n  View,\n  Statusbar,\n} from 'framework7-react';\nimport ModelStore from \"../stores/ModelStore\";\nimport * as MyActions from \"../actions/MyActions\";\nimport { messaging } from \"../init-fcm.js\";\n\n\nimport routes from '../routes';\n\nexport default class extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n    }\n  }\n  async componentDidMount() {\n    const self = this;      \n    const app = self.$f7;\n\n    if (messaging) {\n      messaging.requestPermission()\n        .then(async function () {\n          const token = await messaging.getToken();\n          var data = { token: token }\n          if (self.state.token && self.state.token.length > 10) {\n            MyActions.setInstance('devices', data, self.state.token);\n          }\n        })\n        .catch(function (err) {\n          console.log(\"Unable to get permission to notify.\", err);\n        });\n    }\n    navigator.serviceWorker.addEventListener(\"message\", (message) => {\n\n      app.notification.create({\n        icon: '',\n\n        title: message.data.firebaseMessaging.payload.notification.title,\n        titleRightText: '',\n        cssClass: 'notification',\n        subtitle: message.data.firebaseMessaging.payload.notification.body,\n        closeTimeout: 5000,\n      }).open();\n    });\n\n\n  }\n  // Framework7 parameters here\n\n  render() {\n    const f7params = {\n      id: 'io.framework7.testapp', // App bundle ID\n      name: 'Framework7', // App name\n      theme: 'aurora', // Automatic theme detection\n      panel: {\n        rightBreakpoint: 960,\n      },\n      view: {\n        //ignoreCache: true,\n        //reloadCurrent: true\n      },\n      // App routes\n      routes,\n    };\n\n    const server = React.createContext('http://localhost:3001/v1/');\n    return (\n      <App params={f7params}>\n        {/* Statusbar */}\n        <Statusbar />\n\n        {/* Left Panel */}\n        <Panel left cover themeDark>\n          <View url=\"/panel-left/\" />\n        </Panel>\n\n        {/* Right Panel */}\n        <Panel right reveal themeDark>\n          <View url=\"/panel-right/\" />\n        </Panel>\n\n        {/* Main View */}\n        <View id=\"main-view\" url=\"/app\" pushState={true} main className=\"safe-areas\" />\n\n      </App>\n    );\n  }\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// Import Framework7\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\n// Import Framework7-React plugin\nimport Framework7React from 'framework7-react';\n\n// Import main App component\nimport App from './components/App.jsx';\n\n// Framework7 styles\nimport 'framework7/css/framework7.bundle.rtl.min.css';\n\n// Icons\nimport './css/icons.css';\n\n// Custom app styles\nimport './css/app.css';\nimport './css/editor.css';\nimport './css/font-awesome.min.css';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\n\n\nimport * as serviceWorker from './serviceWorker';\n\nif (\"serviceWorker\" in navigator) {\n  navigator.serviceWorker\n    .register(\"./firebase-messaging-sw.js\")\n    .then(function(registration) {\n      console.log(\"Registration successful, scope is:\", registration.scope);\n    })\n    .catch(function(err) {\n      console.log(\"Service worker registration failed, error:\", err);\n    });\n}\n// Init Framework7-React plugin\nFramework7.use(Framework7React);\n\n// Mount React App\nReactDOM.render(React.createElement(App),\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}