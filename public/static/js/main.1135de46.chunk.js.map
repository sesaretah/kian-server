{"version":3,"sources":["js/fa.js","dispatcher.js","stores/ModelStore.js","conf.jsx","actions/MyActions.js","init-fcm.js","Dict.jsx","containers/tasks/list.jsx","containers/tasks/workList.jsx","containers/notifications/homeList.jsx","containers/reports/homeList.jsx","containers/visits/timeseries.jsx","containers/statuses/changes.jsx","containers/home/index.jsx","components/home/index.jsx","containers/layouts/PanelRightPage.jsx","containers/users/options.jsx","containers/assignments/form.jsx","containers/assignments/list.jsx","containers/access_controls/form.jsx","containers/access_controls/list.jsx","containers/roles/show.jsx","components/roles/show.jsx","containers/roles/list.jsx","containers/roles/index.jsx","components/roles/index.jsx","containers/roles/form.jsx","components/roles/create.jsx","components/roles/update.jsx","containers/tags/show.jsx","components/tags/show.jsx","containers/tags/list.jsx","containers/tags/index.jsx","components/tags/index.jsx","containers/tags/form.jsx","components/tags/create.jsx","components/tags/update.jsx","containers/statuses/show.jsx","components/statuses/show.jsx","containers/statuses/list.jsx","containers/statuses/index.jsx","components/statuses/index.jsx","containers/statuses/form.jsx","components/statuses/create.jsx","components/statuses/update.jsx","containers/tasks/involvementList.jsx","containers/profiles/simpleList.jsx","containers/tasks/involvements.jsx","containers/statuses/simpleList.jsx","containers/tasks/status.jsx","containers/tasks/works.jsx","containers/tasks/reports.jsx","containers/comments/form.jsx","containers/comments/list.jsx","containers/tasks/show.jsx","components/tasks/show.jsx","containers/tasks/index.jsx","components/tasks/index.jsx","containers/tasks/form.jsx","components/tasks/create.jsx","components/tasks/update.jsx","containers/works/involvementList.jsx","containers/works/involvements.jsx","containers/works/status.jsx","containers/works/reports.jsx","containers/todos/todosInvolvementList.jsx","containers/todos/form.jsx","containers/todos/list.jsx","containers/works/show.jsx","components/works/show.jsx","containers/works/list.jsx","containers/works/index.jsx","components/works/index.jsx","containers/works/form.jsx","components/works/create.jsx","components/works/update.jsx","components/todos/create.jsx","components/todos/update.jsx","containers/time_sheets/show.jsx","components/time_sheets/show.jsx","containers/time_sheets/list.jsx","containers/time_sheets/index.jsx","components/time_sheets/index.jsx","containers/time_sheets/form.jsx","components/time_sheets/create.jsx","components/time_sheets/update.jsx","containers/profiles/show.jsx","components/profiles/show.jsx","containers/profiles/list.jsx","containers/profiles/index.jsx","components/profiles/index.jsx","containers/profiles/form.jsx","components/profiles/create.jsx","components/profiles/update.jsx","containers/reports/show.jsx","components/reports/show.jsx","containers/reports/list.jsx","containers/reports/index.jsx","components/users/loggedIn.js","components/reports/index.jsx","containers/uploads/form.jsx","containers/reports/form.jsx","components/reports/uploader.js","components/reports/create.jsx","components/reports/update.jsx","containers/groups/show.jsx","components/groups/show.jsx","containers/groups/list.jsx","containers/groups/index.jsx","components/groups/index.jsx","containers/groups/form.jsx","components/groups/create.jsx","components/groups/update.jsx","containers/settings/form.jsx","components/settings/update.jsx","containers/users/Login.jsx","components/users/Login.jsx","components/users/LoginJwt.jsx","containers/users/SignUp.jsx","components/users/SignUp.jsx","containers/users/Verification.jsx","components/users/Verification.jsx","containers/notifications/list.jsx","containers/notifications/index.jsx","routes.js","components/notifications/index.jsx","containers/layouts/NotFoundPage.jsx","components/App.jsx","serviceWorker.js","index.js"],"names":["module","exports","Dispatcher","modelStore","list","multipleList","instance","klass","this","i","len","data","length","push","emit","console","log","action","type","listModel","listMultipleModel","showIntance","deleteIntance","setIntance","postFile","EventEmitter","dispatcher","register","handleActions","bind","conf","server","getList","model","page","params","token","queryString","Object","keys","map","key","join","axios","get","headers","then","response","dispatch","catch","error","getMultipleList","fileUpload","id","file","url","formData","FormData","append","config","put","getInstance","removeInstance","setInstance","post","updateInstance","initializedFirebaseApp","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","messaging","isSupported","usePublicVapidKey","dict","TaskList","props","alerts","task","result","deadline_alert","className","class","aria-hidden","report_alert","comment_alert","tasks","Fragment","header","sortChange","data-open-in","name","onChange","e","title","target","value","by_title","selected","by_events","sort_by","sort","mediaList","text","details","after","link","WorkList","work","works","NotificationList","notifications","colorClass","notification","seen","new_notifications","crypto","lib","WordArray","random","target_type","target_id","profile","href","fullname","notification_text","slot","src","avatar","width","height","ReportList","reports","new_reports","report","defaults","global","defaultFontFamily","TimeSeries","tasksVisits","datasets","colors","v","d","series","index","x","window","ODate","y","label","backgroundColor","Math","floor","borderColor","options","maintainAspectRatio","responsive","scales","xAxes","time","displayFormats","day","scaleLabel","display","labelString","date","StatusChange","statusChanges","statusChange","prev_status","current_status","statusable_type_pl","statusable_id","status","prev","style","color","to","item","HomeIndex","onPageAfterIn","pageAfterIn","home","panelOpen","f7","tabletWidth","your_tasks","your_newest_works","events_calendar","HomePage","getMutipleList","loadData","loadCalender","state","localStorage","getItem","events","ModelStore","on","removeListener","self","app","$f7","ev","monthNames","calendarInline","calendar","create","containerEl","Date","weekHeader","renderToolbar","theme","init","c","$$","currentMonth","currentYear","prevMonth","nextMonth","monthYearChangeStart","dayClick","dayEl","year","month","Framework7","toast","show","receiving","closeTimeout","position","MyActions","multiple","getKlass","setState","tasks_visits","status_change","order","Component","PanelRightPage","logout","check_ability","ability","removeItem","location","replace","user","getIntance","the_ability","a","icon","ab","ignoreCache","view","panelClose","dashboard","time_sheets","reloadCurrent","user_settings","privacy","onClick","settings","login","tavan","logged_in","UserOptions","users","email","AssignmentForm","assignment_form","inset","smartSelect","handleChange","user_id","strong","tag","fill","submit","UserList","body","removeRole","ios","aurora","md","AccessControlForm","access_control_form","placeholder","onInput","abilityTitle","defaultValue","abilityValue","true","false","addAbility","AbilityList","removeAbility","access_control_list","RoleShow","role","simple-list","assignedUsers","Layout","handleChangeValue","$f7route","hide","submitting","role_id","ability_title","ability_value","obj","roles","backLink","back","fab","RoleList","subtitle","RoleIndex","React","RoleForm","defaultRole","isDefaultRole","radio","checked","NonDefault","JSON","parse","Default","disabled","editing","RoleCreate","default_role","$f7router","navigate","role_form","DocumentUpdate","TagShow","confirmed","editable","tag_id","tags","TagList","TagIndex","TagForm","isConfirmed","isConfirmedTag","confirmable","not_confirmed","confirm","TagCreate","tag_form","StatusShow","the_color","status_id","statuses","StatusList","StatusIndex","StatusForm","readonly","StatusCreate","loadPalette","colorPicker","inputEl","targetEl","targetElSetBackgroundColor","modules","openIn","hex","closed","status_form","confiremd","ParticipantList","involvements","option","involvement","addLink","removeProfile","remove","removeLink","changeRole","select","SimpleList","profiles","addProfile","add","Partcipants","coworkers","the_involvements","accordionList","accordionItem","simpleList","groups","group","addGroup","outline","search","floatingLabel","clearButton","searchProfile","query","addStatus","Statuses","add_stauts","searchStatus","Works","chip","priority","new","disableButtonText","cancel","inline","Reports","creation","t","fromNow","creation_date","content","CommentForm","comment_form","comment","maxlength","resizable","commentContent","CommentList","items","editLink","deleteCommentConfirm","comments","created_at","locale","ago","noGap","loadMore","more","TaskShow","access","segment","includes","submitComment","archived","archive_note","arr","the_tags","is_public","public","private","discussions","removeTask","deleteComment","the_comments","user_access","task_id","q","profileId","profile_id","statusId","commentable_type","commentable_id","dialog","are_you_sure","alert","group_id","backLinkForce","TaskIndex","TaskForm","isPublic","isPublicTask","select_appropriate_title","required","write_appropriate_description","chips","deleteable","removeTag","checkbox","write_archive_note","archiveNote","archive","deleteTaskConfirm","delete","deleteButton","TaskCreate","loadTags","deadline","start","startTime","deadlineTime","privateTask","autocomplete","openerEl","valueProperty","textProperty","searchbarDisableText","popupCloseLinkText","close","notFoundText","not_found","limit","searchbarPlaceholder","preloader","source","render","results","preloaderShow","request","method","dataType","success","indexOf","preloaderHide","change","concat","incomplete_data","filter","task_form","deleteTask","deleteInstance","defaultTask","default_task","selectedMode","InvolvementList","TodosInvolvementsList","lt","todo","check","todos","todoChecked","deleteTodoConfirm","addInvolvements","TodoForm","involvementChecked","workInvolvement","flag","workInvolvements","involvementCheck","TodoList","todo_list","WorkShow","start_date","start_date_j","deadline_date_j","removeWork","deleteTodo","the_todos","work_id","is_done","deadline_date","WorkIndex","WorkForm","privateWork","normal","high","urgent","select_a_date","start_time","select_a_time","deadline_time","deleteWorkConfirm","WorkCreate","loadTime","picker","rotateEffect","cols","values","split","textAlign","closeOnSelect","firstDay","weekendDays","dayNames","dayNamesShort","work_form","deleteWork","defaultWork","default_work","TodoCreate","removeInvolvement","setInvolvements","work_involvements","TimeSheetShow","association","kind","associations","time_sheet","the_associations","a_type","sheet_date","jdate","morning_report","afternoon_report","extra_report","time_sheet_id","TimeSheetList","TimeSheetIndex","related_time_sheets","sent_to_me","mine_time_sheets","sent_by_me","page_mine","page_related","p","mine","related","TimeSheetForm","removeAssociation","write_appropriate_details","morningReport","afternoonReport","extraReport","recipients","TimeSheetCreate","loadAssociation","timeSheetDate","today","weekAgo","setDate","getDate","time_sheet_form","ProfileShow","the_tasks","the_works","actuals","metas","channels","ProfileList","ProfileIndex","inner","ProfileForm","profile_info","firstname","surename","withIcon","buttonText","choose_image","onDrop","buttonClassName","imgExtension","maxFileSize","ProfileCreate","handleChangeValueFields","removeActual","submitFields","fields","pictures","picture","meta_id","metaId","fid","newState","assign","uuid","profile_form","ReportShow","draft","contentState","convertFromRaw","editorState","EditorState","createWithContent","the_work","the_task","toolbar","readOnly","attachments","attachment","filename","commentable","selectedChannel","sheetOpened","tooltip","substring","ReportIndex","pageContent","tabbar","bottom","tabLink","tabLinkActive","swipeable","tabActive","interaction","loggedIn","Report","el","interaction_type","interactionable_id","interactionable_type","source_type","source_id","UploadForm","getUploadParams","meta","onChangeStatus","onSubmit","files","allFiles","f","forEach","autoUpload","submitButtonDisabled","inputContent","drag_or_browse","ReportForm","new_report","localization","translations","fa","image","uploadCallback","uploadImageCallBack","previewImage","onEditorStateChange","deleteReportConfirm","uploadableType","Promise","resolve","reject","xhr","XMLHttpRequest","open","setRequestHeader","send","addEventListener","responseText","ReportCreate","createEmpty","enc","Base64","stringify","convertToRaw","getCurrentContent","blocks","block","trim","taskId","workId","prevstate","report_form","ReportUpdate","removeAttachment","deleteReport","workflow_form","GroupShow","the_grouping","GroupList","GroupIndex","GroupForm","grouping","removeGrouping","groupings","GroupCreate","loadGrouping","group_form","tag_grouping","SettingForm","setting","notification_setting","form","changeSetting","if_someone_adds_you_youll_be_asked","blocked_list","blockList","removeBlocked","notification_type","mail_notification","push_notification","sms","add_involvement_to_tasks","remove_involvement_from_tasks","change_status_tasks","add_works_to_tasks","add_reports_to_tasks","add_comments_to_tasks","add_involvement_to_works","remove_involvement_from_works","change_status_works","add_todos_to_works","add_reports_to_works","add_comments_to_works","add_comments_to_reports","add_involvement_to_todos","remove_involvement_from_todos","add_involvement_to_time_sheets","remove_involvement_from_timesheets","SettingCreate","loadBlockList","prevState","LoginForm","sign_up","autofocus","enter_your_email","animate","you_can_sign_up","cas","password","reload","username","Login","setItem","SignUpForm","enter_your_name","enter_your_surename","validate","if_registered","you_can_login","SignUp","verification","verification_code","enter_verification_code","verificationCode","Verification","NotificationIndex","path","component","LoginJwt","RoleUpdate","SettingUpdate","GroupUpdate","StatusUpdate","TaskUpdate","TagUpdate","TimeSheetUpdate","WorkUpdate","TodoUpdate","ProfileUpdate","requestPermission","getToken","err","navigator","serviceWorker","message","firebaseMessaging","payload","titleRightText","cssClass","f7params","panel","rightBreakpoint","routes","createContext","left","cover","themeDark","right","reveal","pushState","main","Boolean","hostname","match","registration","scope","use","Framework7React","ReactDOM","createElement","App","document","getElementById"],"mappings":"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","file":"static/js/main.1135de46.chunk.js","sourcesContent":["module.exports = {\n\n  // Generic\n  'generic.add': 'افزودن',\n  'generic.cancel': 'لغو',\n\n  // BlockType\n  'components.controls.blocktype.h1': 'H1',\n  'components.controls.blocktype.h2': 'H2',\n  'components.controls.blocktype.h3': 'H3',\n  'components.controls.blocktype.h4': 'H4',\n  'components.controls.blocktype.h5': 'H5',\n  'components.controls.blocktype.h6': 'H6',\n  'components.controls.blocktype.blockquote': 'Blockquote',\n  'components.controls.blocktype.code': 'Code',\n  'components.controls.blocktype.blocktype': 'Block Type',\n  'components.controls.blocktype.normal': 'Normal',\n\n  // Color Picker\n  'components.controls.colorpicker.colorpicker': 'Color Picker',\n  'components.controls.colorpicker.text': 'Text',\n  'components.controls.colorpicker.background': 'Highlight',\n\n  // Embedded\n  'components.controls.embedded.embedded': 'Embedded',\n  'components.controls.embedded.embeddedlink': 'Embedded Link',\n  'components.controls.embedded.enterlink': 'Enter link',\n\n  // Emoji\n  'components.controls.emoji.emoji': 'Emoji',\n\n  // FontFamily\n  'components.controls.fontfamily.fontfamily': 'Font',\n\n  // FontSize\n  'components.controls.fontsize.fontsize': 'Font Size',\n\n  // History\n  'components.controls.history.history': 'History',\n  'components.controls.history.undo': 'Undo',\n  'components.controls.history.redo': 'Redo',\n\n  // Image\n  'components.controls.image.image': 'عکس',\n  'components.controls.image.fileUpload': 'بارگذاری',\n  'components.controls.image.byURL': 'پیوند',\n  'components.controls.image.dropFileText': 'اینجا را کلیک کنید ',\n\n  // Inline\n  'components.controls.inline.bold': 'Bold',\n  'components.controls.inline.italic': 'Italic',\n  'components.controls.inline.underline': 'Underline',\n  'components.controls.inline.strikethrough': 'Strikethrough',\n  'components.controls.inline.monospace': 'Monospace',\n  'components.controls.inline.superscript': 'Superscript',\n  'components.controls.inline.subscript': 'Subscript',\n\n  // Link\n  'components.controls.link.linkTitle': 'عنوان پیوند',\n  'components.controls.link.linkTarget': 'آدرس',\n  'components.controls.link.linkTargetOption': 'در پنجره جدید باز کن',\n  'components.controls.link.link': 'پیوند',\n  'components.controls.link.unlink': 'لغو پیوند',\n\n  // List\n  'components.controls.list.list': 'List',\n  'components.controls.list.unordered': 'Unordered',\n  'components.controls.list.ordered': 'Ordered',\n  'components.controls.list.indent': 'Indent',\n  'components.controls.list.outdent': 'Outdent',\n\n  // Remove\n  'components.controls.remove.remove': 'Remove',\n\n  // TextAlign\n  'components.controls.textalign.textalign': 'Text Align',\n  'components.controls.textalign.left': 'Left',\n  'components.controls.textalign.center': 'Center',\n  'components.controls.textalign.right': 'Right',\n  'components.controls.textalign.justify': 'Justify',\n};\n","import { Dispatcher } from \"flux\";\n\nexport default new Dispatcher;\n","import { EventEmitter } from \"events\";\n\nimport dispatcher from \"../dispatcher\";\n\nclass ModelStore extends EventEmitter {\n  constructor() {\n    super()\n    this.list = [];\n    this.multipleList = [];\n    this.instance = null;\n    this.klass= null;\n  }\n\n  listModel(list){\n    this.list = [];\n    this.klass = list.klass\n    for (var i = 0, len = list.data.length; i < len; ++i) {\n      this.list.push(list.data[i]);\n      if (i === len - 1 ) {\n        this.emit(\"got_list\");\n      }\n    }\n    if(list.data.length == 0){\n      this.emit(\"got_list\");\n    }\n\n  }\n\n  listMultipleModel(list){\n    this.multipleList = list.data;\n    this.klass = list.klass\n    this.emit(\"got_multiple_list\");\n  }\n\n  showIntance(instance){\n    this.klass = instance.klass\n    this.instance = instance.data\n    this.emit(\"got_instance\");\n  }\n\n  setIntance(instance){\n    this.klass = instance.klass\n    this.instance = instance.data\n    this.emit(\"set_instance\");\n  }\n\n\n  deleteIntance(instance){\n    this.klass = instance.klass\n    this.instance = instance.data\n    this.emit(\"deleted_instance\");\n  }\n\n  postFile(instance){\n    console.log(instance)\n    this.klass = instance.klass\n    this.instance = instance.data\n    this.emit(\"file_posted\");\n  }\n\n  getIntance() {\n    return this.instance\n  }\n\n  getList(){\n    return this.list\n  }\n\n  getMutipleList(){\n    return this.multipleList\n  }\n\n  getListnKlass(){\n    return [this.list, this.klass]\n  }\n\n  getKlass(){\n    return this.klass\n  }\n\n  handleActions(action) {\n    switch(action.type) {\n      case \"LIST_MODEL_SUCCESS\": {\n        this.listModel(action.list);\n        break;\n      }\n      case \"MULTIPLE_LIST_MODEL_SUCCESS\": {\n        this.listMultipleModel(action.list);\n        break;\n      }\n      case \"GET_INSTANCE_SUCCESS\": {\n        this.showIntance(action.instance);\n        break;\n      }\n      case \"DELETE_INSTANCE_SUCCESS\": {\n        this.deleteIntance(action.instance);\n        break;\n      }\n      case \"SET_INSTANCE_SUCCESS\": {\n        this.setIntance(action.instance);\n        break;\n      }\n      case \"POST_FILE_SUCCESS\": {\n        this.postFile(action.instance);\n        break;\n      }\n\n      \n    }\n  }\n}\n\n\nconst modelStore = new ModelStore;\ndispatcher.register(modelStore.handleActions.bind(modelStore));\n\nexport default modelStore;\n","export const conf = { \n'server' : '/v1'\n};","import dispatcher from \"../dispatcher\";\nimport axios, {put} from 'axios';\nimport { conf } from '../conf';\n\nconst server= conf.server;\nconsole.log(server)\n//const server='http://localhost:3001/v1';\n//const server='/v1';\n//const server='http://95.156.255.115/api';\n\n\nexport function getList(model, page=1, params={}, token) {\n  var queryString = Object.keys(params).map(key => key + '=' + params[key]).join('&');\n  axios.get(server + '/'+ model +'?page='+page+'&'+queryString, { headers: {'Content-Type': 'application/json', 'Authorization': \"bearer \" + token } })\n  .then(function (response) {\n    dispatcher.dispatch({\n      type: \"LIST_MODEL_SUCCESS\",\n      list: response.data,\n    });\n  })\n  .catch(function (error) {\n    console.log(error);\n  });\n}\n\nexport function getMultipleList(model, page=1, params={}, token) {\n  var queryString = Object.keys(params).map(key => key + '=' + params[key]).join('&');\n  axios.get(server + '/'+ model +'?page='+page+'&'+queryString, { headers: {'Content-Type': 'application/json', 'Authorization': \"bearer \" + token } })\n  .then(function (response) {\n    dispatcher.dispatch({\n      type: \"MULTIPLE_LIST_MODEL_SUCCESS\",\n      list: response.data,\n    });\n  })\n  .catch(function (error) {\n    console.log(error);\n  });\n}\n\nexport function fileUpload(model, id , file, token){\n  const url = server + '/'+ model +'/'+id;\n  const formData = new FormData();\n  formData.append('profile[avatar]',file)\n  formData.append('profile[id]',id)\n  const config = {\n      headers: {\n          'content-type': 'multipart/form-data',\n          'Authorization': \"bearer \" + token \n      }\n  }\n  put(url, formData,config).then(function (response) {\n    dispatcher.dispatch({\n      type: \"POST_FILE_SUCCESS\",\n      instance: response.data,\n    });\n  })\n  .catch(function (error) {\n    console.log(error);\n  });\n}\n\nexport function getInstance(model, id, token) {\n  axios.get(server + '/'+ model +'/'+id, { headers: {'Content-Type': 'application/json', 'Authorization': \"bearer \" + token } })\n  .then(function (response) {\n    dispatcher.dispatch({\n      type: \"GET_INSTANCE_SUCCESS\",\n      instance: response.data,\n    });\n  })\n  .catch(function (error) {\n    console.log(error);\n  });\n}\n\nexport function removeInstance(model, params={}, token ) {\n  var queryString = Object.keys(params).map(key => key + '=' + params[key]).join('&');\n  axios.get(server + '/'+ model +'/delete?'+queryString, { headers: {'Content-Type': 'application/json', 'Authorization': \"bearer \" + token } })\n  .then(function (response) {\n    dispatcher.dispatch({\n      type: \"DELETE_INSTANCE_SUCCESS\",\n      instance: response.data,\n    });\n  })\n  .catch(function (error) {\n    console.log(error);\n  });\n}\n\nexport function setInstance(model, data, token) {\n  axios.post(server + '/'+ model +'/', data, { headers: {'Content-Type': 'application/json', 'Authorization': \"bearer \" + token } })\n  .then(function (response) {\n    dispatcher.dispatch({\n      type: \"SET_INSTANCE_SUCCESS\",\n      instance: response.data,\n    });\n  })\n  .catch(function (error) {\n    console.log(error);\n  });\n}\n\nexport function updateInstance(model, data, token) {\n  axios.put(server + '/'+ model +'/'+data.id, data, { headers: {'Content-Type': 'application/json', 'Authorization': \"bearer \" + token } })\n  .then(function (response) {\n    dispatcher.dispatch({\n      type: \"SET_INSTANCE_SUCCESS\",\n      instance: response.data,\n    });\n  })\n  .catch(function (error) {\n    console.log(error);\n  });\n}\n","import * as firebase from \"firebase/app\";\nimport \"firebase/messaging\";\nconst initializedFirebaseApp = firebase.initializeApp({\n    apiKey: \"AIzaSyAbQ1NDkKB_E_SbfgHY3w-esVWhjwj9DeE\",\n    authDomain: \"tavan-e768d.firebaseapp.com\",\n    databaseURL: \"https://tavan-e768d.firebaseio.com\",\n    projectId: \"tavan-e768d\",\n    storageBucket: \"tavan-e768d.appspot.com\",\n    messagingSenderId: \"498708095861\",\n    appId: \"1:498708095861:web:00428b1330b24e1eece93c\",\n    measurementId: \"G-55DLXZ4VZY\"\n \n});\n//const messaging = initializedFirebaseApp.messaging();\nvar messaging = null;\nif (firebase.messaging.isSupported()){\n  messaging = initializedFirebaseApp.messaging();\n  messaging.usePublicVapidKey(\n    // Project Settings => Cloud Messaging => Web Push certificates\n    \"BGtSQdySGVQOeOwFha6rSVdmtfIUo_V33Eq-RTRb5kUNLvvwM7AVGCLtChjnGlD50fudRx8D4Aw-7br71Qfefrc\"\n  );\n  \n} else {\n \n}\nexport { messaging }; ","export const dict = {\n  'home' : 'خانه',\n  'name' : 'نام و نام خانوادگی ',\n  'login' : 'ورود',\n  'username' :  'نام کاربری ',\n  'password' : 'رمز عبور ',\n  'password_confirmation': 'تکرار رمز عبور',\n  'mobile' : 'شماره موبایل ',\n  'error': 'خطا',\n  'sign_in' : 'ورود ',\n  'sign_up' : 'ثبت نام',\n  'back' : 'بازگشت',\n  'signed_up_already': 'تا کنون ثبت نام نکرده اید؟',\n  'new_advert': 'درج آگهی ',\n  'title': 'عنوان',\n  'abstract': 'چکیده',\n  'content': 'متن',\n  'submit': 'ثبت ',\n  'upload_from_gallery': 'انتخاب از گالری',\n  'welcome': 'خوش آمدید',\n  'sign_out': 'خروج',\n  'phone_number': 'شماره تلفن',\n  'telegram_channel': 'کانال تلگرام',\n  'instagram_page': 'صفحه اینستاگرام',\n  'address': 'آدرس ',\n  'email': 'ایمیل ',\n  'contact_information':'اطلاعات تماس ',\n  'search': 'جستجو ',\n  'cancel' : 'انصراف',\n  'view': 'نمایش',\n  'edit': 'ویرایش',\n  'delete': 'حذف',\n  'adverts_nes': 'عنوان، متن و شماره تلفن اجباری است',\n  'my_pins': ' نشان شده‌ها ',\n  'pin' : 'نشان کن',\n  'pinned': 'نشان شده',\n  'message_to_seller': 'ارسال پیام',\n  'messages': 'پیام ها ',\n  'send_message': 'پیام خود را بنویسید',\n  'province': 'استان',\n  'city': 'شهر',\n  'website': 'وبسایت',\n  'call': 'تماس بگیرید',\n  'ago': ' قبل',\n  'all_above': 'همه ی موارد فوق',\n  'no_result': 'موردی یافت نشد ',\n  'category': 'دسته بندی ',\n  'leg':'مسیر',\n  'date':'تاریخ',\n  'time': 'زمان',\n  'numberOfPassngers': 'تعداد مسافران ',\n  'surename': 'نام خانوادگی',\n  'fathername':'نام پدر',\n  'ssn':'کدملی',\n  'birthplace':'محل تولد',\n  'pass_no': 'شماره گذرنامه',\n  'birthdate': 'تاریخ تولد',\n  'place_of_birth': 'محل تولد',\n  'required_fields': 'فیلدهای اجباری',\n  'en_father_name': 'نام پدر لاتین',\n  'en_name': 'نام لاتین',\n  'en_surename': 'نام خانوادگی لاتین ',\n  'passport_no': 'شماره گذرنامه',\n  'final_confirm' : 'تایید نهایی ',\n  'document_form': 'فرم اسناد ',\n  'save': 'ذخیره',\n  'documents':'اسناد ',\n  'type' : 'نوع',\n  'string': 'متن کوتاه',\n  'text': 'متن بلند',\n  'select': 'گزینه',\n  'multiSelect': 'چند گزینه',\n  'table': 'جدول',\n  'date':'تاریخ',\n  'refundable': 'قابل اعاده',\n  'yes':'بله',\n  'no':'خیر',\n  'commentable':'قابل نظردهی',\n  'end_point':'نقطه پایان',\n  'start_point':'نقطه شروع',\n  'votable':'رای گیری',\n  'publishable':'قابل انتشار',\n  'field_name': 'نام فیلد',\n  'add': 'افزودن ',\n  'remove': 'حذف',\n  'auxiliary_tables': 'جداول کمکی',\n  'create_by':'ایجاد شده توسط',\n  'list': 'لیست',\n  'workflows': 'گردش کارها',\n  'auxiliary_records': 'مقادیر کمکی',\n  'basic_table': 'جدول پایه',\n  'relation_table': 'جدول رابطه',\n  'auxiliary_table_form': 'فرم جدول کمکی ' ,\n  'Basic': 'پایه',\n  'Relation': 'رابطه ',\n  'Divan': 'دیوان',\n  'workflow_form':'فرم گردش کار',\n  'submitting':'در حال ارسال ... ',\n  'settings':'تنظیمات',\n  'receiving':'در حال دریافت ...',\n  'workflow_tables': 'جداول کمکی گردش کار ',\n  'auxiliary_table': 'جدول کمکی',\n  'workflow':'گردش کار',\n  'actions' : 'عملیات',\n  'roles': 'نقش ها',\n  'divan': 'دیوان',\n  'enter_your_email': 'ایمیل خود را وارد کنید',\n  'enter_your_password': 'رمز عبور را وارد کنید ',\n  'enter_your_password_confirmation': 'رمز عبور را تکرار کنید ',\n  'profiles': 'افراد ',\n  'firstname': 'نام',\n  'if_registered': 'اگر قبلا ثبت نام کرده اید',\n  'you_can_login':'وارد شوید ',\n  'if_not_registered': 'اگر ثبت نام نکرده اید',\n  'you_can_sign_up':'ثبت نام کنید',\n  'new_assignment': 'اعطای نقش جدید',\n  'posts': 'پست ها',\n  'bookmark': 'نشان',\n  'like':'علاقه',\n  'follow':'دنبال',\n  'share':'اشتراک',\n  'social_acts':'عملگرهای اجتماعی ',\n  'channels': 'کانال ها',\n  'close': 'بستن',\n  'channel':'کانال ',\n  'details': 'شرح',\n  'Shoa': 'شعاع ',\n  'role': 'نقش',\n  'Default': 'پیش فرض',\n  'NonDefault':'غیر پیش فرض ',\n  'value': ' مقدار',\n  'true': 'مثبت',\n  'false': 'منفی',\n  'access_control_list':'لیست کنترل دسترسی',\n  'access_control_form':'فرم کنترل دسترسی',\n  'assignment_form':'فرم اعطای نقش',\n  'comment_form': 'نظر بدهید',\n  'post_form': 'فرم پست',\n  'metas':'پیش جداول',\n  'shoa': 'شعاع',\n  'form' : 'ورود اطلاعات',\n  'choose_image': 'انتخاب عکس',\n  'logout': 'خروج',\n  'more': 'بیشتر ...',\n  'social': 'اجتماعی',\n  'courses':'دروس',\n  'discussions':'گفتگو ها',\n  'exams':'آزمون ها ',\n  'public':'عمومی',\n  'private':'خصوصی ',\n  'course_type':'نوع درس',\n  'select_appropriate_title': 'عنوانی مناسب انتخاب کنید',\n  'write_appropriate_description':'شرحی از اهداف و روش ها بنویسید',\n  'description':'شرح ',\n  'drag_or_browse': 'فایل مورد نظر را اینجا بیاندازید یا کلیک کنید',\n  'attachment' : 'فایل های پیوست',\n  'tasks': 'وظایف',\n  'start_date': 'تاریخ شروع',\n  'deadline' : 'مهلت نهایی',\n  'select_a_date' : 'یک تاریخ انتخاب کنید',\n  'incomplete_data': 'همه ی موارد را تکمیل کنید',\n  'alert': 'هشدار',\n  'deadline_time': 'ساعت',\n  'start_time':'ساعت',\n  'select_a_time':'انتخاب ساعت',\n  'coworkers': 'همکاران',\n  'works': 'کارها ',\n  'dashboard':'میزکار',\n  'tavan':'توان',\n  'statuses': 'وضعیت ها',\n  'status' : 'وضعیت',\n  'add_stauts': 'تغییر وضعیت',\n  'select' : 'انتخاب',\n  'new': 'جدید',\n  'task' : 'وظیفه',\n  'attachments': 'پیوست ها',\n  'reports': 'اسناد و گزارشات',\n  'tags':'برچسب ها',\n  'new_tag': 'برچسب جدید ',\n  'recent_tasks': 'وظایف اخیر',\n  'public_tasks': 'وظایف عمومی',\n  'sort_by' : 'مرتب سازی',\n  'by_title':'عنوان',\n  'by_events':'رخداد',\n  'deadline_near': 'مهلت نهایی نزدیک',\n  'new_report': 'گزارش جدید',\n  'new_comments': 'گفتگوی جدید',\n  'Admin':'مدیر',\n  'Colleague':'همکار',\n  'Observer':'ناظر',\n  'Creator':'سازنده',\n  'verification_code':'کد احراز',\n  'enter_verification_code':  'کد احراز را وارد کنید',\n  'your_tasks':'وظایف مرتبط با شما',\n  'your_newest_works':'جدیدترین کارهای مرتبط با شما',\n  'todo_list': 'تقسیم بندی کار',\n  'todo_participants': 'افراد',\n  'new_todo_participants': 'افراد جدید',\n  'not_found': 'چیزی یافت نشد',\n  'are_you_sure': 'مطمئن هستید؟',\n  'Confirmer': 'تایید کننده',\n  'time_sheets': 'کارنما',\n  'morning_report':'گزارش پیش از ظهر',\n  'afternoon_report':'گزارش بعد از ظهر',\n  'extra_report':'گزارش اضافه کاری',\n  'write_appropriate_details':'شرحی کامل بنویسید',\n  'associations':'مرتبط با',\n  'sheet_date':'تاریخ جدول',\n  'recipients':'دریافت کنندگان',\n  'sent_by_me': 'ارسال شده ها',\n  'sent_to_me':'دریافت شده ها',\n  'priority':'لولویت',\n  'normal':'عادی',\n  'high':'فوری',\n  'urgent':'بسیار فوری',\n  'archived': 'آرشیو شده',\n  'write_archive_note' : 'متن جمع بندی به منظور آرشیو سازی بنویسید',\n  'user_groups': 'گروه بندی کاربران',\n  'user_settings': 'تنظیمات شخصی',\n  'add_involvement_to_tasks':'افزودن همکاران به وظایف',\n  'remove_involvement_from_tasks':'حذف همکاران از وظایف',\n  'change_status_tasks':'تغییر وضعیت وظایف',\n  'add_works_to_tasks':'افزودن کار به وظایف',\n  'add_reports_to_tasks':'افزودن گزارش به وظایف',\n  'add_comments_to_tasks':'افزودن نظر به وظایف',\n  'add_involvement_to_works':'افزودن همکاران به کارها',\n  'remove_involvement_from_works':'حذف همکاران از کارها',\n  'change_status_works':'تغییر وضعیت کارها',\n  'add_todos_to_works':'افزودن تقسیم کار به کارها',\n  'add_reports_to_works':'افزودن گزارش به کارها',\n  'add_comments_to_works':'افزودن نظر به کارها',\n  'add_involvement_to_todos':'افزودن همکار به تقسیم کار',\n  'remove_involvement_from_todos':'حذف همکار از تقسیم کار',\n  'add_involvement_to_time_sheets':'افزودن گیرنده به کارنما',\n  'remove_involvement_from_timesheets':'حذف گیرنده از کارنما',\n  'notification_type':'شیوه اطلاع رسانی',\n  'mail_notification':'ایمیل',\n  'push_notification':'آگاهسازی وب',\n  'sms':'پیامک',\n  'if_someone_adds_you_youll_be_asked': 'چنانچه کسی شما را به یک فعالیت بیافزاید شما باید تایید کنید.',\n  'previous_attachments':'پیوست های قبلا آپلود شده',\n  'cas': 'احراز هویت مرکزی' ,\n  'profile': 'پروفایل',\n  'groups' : 'گروهبندی همکاران',\n  'confirmed':'تایید شده',\n  'not_confirmed': 'تایید نشده',\n  'blocked_list': 'کاربران مسدود شده',\n  'notifications': 'اطلاع رسانی',\n  'privacy':'حریم خصوصی',\n  'add_comments_to_reports':'افزودن نظر به گزارشات',\n  'new_notifications' : 'آگاهسازی های جدید',\n  'new_reports': 'آخرین گزارشات',\n  'events_calendar': 'تقویم رخدادها',\n  'to': 'به',\n  'statusChanges': 'تغییرات وضعیت ها'\n}\n","import React from \"react\";\nimport { List, ListItem, CardHeader, CardContent, CardFooter } from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\nimport Moment from 'react-moment';\nimport JDate from 'jalali-date';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\n\nconst TaskList = (props) => {\n  function title(t) {\n    var date = new Date(new window.ODate(t))\n    return (<Moment date={date} fromNow></Moment>)\n  }\n  function alerts(task) {\n    var result = []\n    if (task.deadline_alert) {\n      result.push(\n        <span className='color-red ml-5'>\n          <i class=\"fa fa-bell-o\" aria-hidden=\"true\"></i>\n        </span>\n      )\n    }\n    if (task.report_alert) {\n      result.push(\n        <span className='color-blue ml-5'>\n          <i class=\"fa fa-file-text-o \" aria-hidden=\"true\"></i>\n        </span>\n      )\n    }\n    if (task.comment_alert) {\n      result.push(\n        <span className='color-green mr-5'>\n          <i class=\"fa fa-comments-o \" aria-hidden=\"true\"></i>\n        </span>\n      )\n    }\n    return (result)\n  }\n\n  function sort() {\n    if (props.sortChange) {\n      return (\n        <a className=\" fs-10 smart-select smart-select-init\" data-open-in=\"popover\">\n          <select name=\"superhero\" onChange={(e) => { props.sortChange({ title: e.target.value }) }}>\n            <option value=\"title\" key='option-title' >{dict.by_title}</option>\n            <option value=\"events\" key='option-events' selected>{dict.by_events}</option>\n          </select>\n          <div className=\"item-content\">\n            <div className=\"item-inner\">\n              <div className=\"item-title\">{dict.sort_by}</div>\n            </div>\n          </div>\n        </a>\n      )\n    }\n  }\n\n  if (props.tasks) {\n    return (\n      <React.Fragment>\n        <CardHeader>\n          {props.header}\n\n          {sort()}\n        </CardHeader>\n        <CardContent className='h-200'>\n          <List mediaList className='fs-11'>\n            {props.tasks.map((task) =>\n              <ListItem key={'task' + task.id} title={task.title} text={task.details} after={alerts(task)} link={'/tasks/' + task.id}></ListItem>\n            )}\n          </List>\n        </CardContent>\n        <CardFooter>\n          {/* <span className='fs-10'>\n            <span className='color-red ml-5'>\n              <i class=\"fa fa-bell-o ml-5\" aria-hidden=\"true\"></i>\n              {dict.deadline_near}\n            </span>\n            <span className='color-blue ml-5'>\n              <i class=\"fa fa-file-text-o  ml-5\" aria-hidden=\"true\"></i>\n              {dict.new_report}\n            </span>\n            <span className='color-green mr-5'>\n              <i class=\"fa fa-comments-o ml-5\" aria-hidden=\"true\"></i>\n              {dict.new_comments}\n            </span>\n            </span>*/}\n\n        </CardFooter>\n      </React.Fragment>\n\n    )\n  } else {\n    return (<ul></ul>)\n  }\n}\nexport default TaskList;\n","import React from \"react\";\nimport { List, ListItem, CardHeader, CardContent, CardFooter } from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\nimport Moment from 'react-moment';\nimport JDate from 'jalali-date';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\n\nconst WorkList = (props) => {\n  function title(t) {\n    var date = new Date(new window.ODate(t))\n    return (<Moment date={date} fromNow></Moment>)\n  }\n  function alerts(work) {\n    var result = []\n    if (work.deadline_alert) {\n      result.push(\n        <span className='color-red ml-5'>\n          <i class=\"fa fa-bell-o\" aria-hidden=\"true\"></i>\n        </span>\n      )\n    }\n    if (work.report_alert) {\n      result.push(\n        <span className='color-blue ml-5'>\n          <i class=\"fa fa-file-text-o \" aria-hidden=\"true\"></i>\n        </span>\n      )\n    }\n    if (work.comment_alert) {\n      result.push(\n        <span className='color-green mr-5'>\n          <i class=\"fa fa-comments-o \" aria-hidden=\"true\"></i>\n        </span>\n      )\n    }\n    return(result)\n  }\n\n  if (props.works) {\n    return (\n      <React.Fragment>\n        <CardHeader>\n          {props.header}\n        </CardHeader>\n        <CardContent className='h-200'>\n          <List mediaList className='fs-11'>\n            {props.works.map((work) =>\n              <ListItem   className='fs-10' key={'workList'+work.id} title={work.title} text={work.task.title} after={alerts(work)} link={'/works/' + work.id}></ListItem>\n            )}\n          </List>\n        </CardContent>\n        <CardFooter>\n        </CardFooter>\n      </React.Fragment>\n\n    )\n  } else {\n    return (<ul></ul>)\n  }\n}\nexport default WorkList;\n","import React from \"react\";\nimport { List, ListItem, Link, Card, CardHeader, CardContent, CardFooter } from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\n\nconst NotificationList = (props) => {\n  if (props.notifications && props.notifications.length > 0) {\n    function profileLink(profile) {\n      return (<Link href='/profiles/'>{profile.fullname}</Link>)\n    }\n\n    function colorClass(notification) {\n      if (!notification.seen) {\n        return 'bg-blonde'\n      }\n    }\n    return (\n      <Card>\n        <CardHeader>{dict.new_notifications}</CardHeader>\n        <CardContent className='h-120'>\n          <List mediaList>\n            {props.notifications.map((notification) =>\n              <ListItem\n                className={'fs-11 ' + colorClass(notification)}\n                key={crypto.lib.WordArray.random(32)}\n                link={'/' + notification.target_type + '/' + notification.target_id}\n                title={profileLink(notification.profile)}\n                text={notification.notification_text.title}\n              >\n                <img slot=\"media\" src={notification.profile.avatar} width=\"32\" height=\"32\" />\n              </ListItem>\n            )}\n          </List>\n        </CardContent>\n        <CardFooter></CardFooter>\n      </Card>\n    )\n  } else {\n    return (<ul></ul>)\n  }\n}\nexport default NotificationList;\n","import React from \"react\";\nimport { List, ListItem, Link, Card, CardHeader, CardContent, CardFooter } from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\n\nconst ReportList = (props) => {\nconsole.log(props)\n  if (props.reports && props.reports.length > 0) {\n    function profileLink(profile) {\n      return (<Link href='/profiles/'>{profile.fullname}</Link>)\n    }\n\n    return (\n      <Card>\n        <CardHeader>{dict.new_reports}</CardHeader>\n        <CardContent className='h-120'>\n          <List mediaList>\n            {props.reports.map((report) =>\n              <ListItem\n                className={'fs-11 '}\n                key={crypto.lib.WordArray.random(32)}\n                link={'/' + report.target_type + '/' + report.target_id}\n                text={profileLink(report.profile)}\n                title={report.title}\n              >\n                <img slot=\"media\" src={report.profile.avatar} width=\"32\" height=\"32\" />\n              </ListItem>\n            )}\n          </List>\n        </CardContent>\n        <CardFooter></CardFooter>\n      </Card>\n    )\n  } else {\n    return (<ul></ul>)\n  }\n}\nexport default ReportList;\n","import React from \"react\";\nimport { List, ListItem, Card, CardHeader, CardContent, CardFooter } from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { defaults, Bar } from 'react-chartjs-2';\nimport { dict } from \"../../Dict\";\n\ndefaults.global.defaultFontFamily = 'iransans';\n\nconst TimeSeries = (props) => {\n    function series() {\n        var result = []\n        var colors = ['#ff6384', '#36a2eb', '#cc65fe', '#ffce56', '#20f08b', '#944dab', '#67f71d', '#650512', '#2f5561', '#e4ae5c']\n        props.tasksVisits.map((v) => {\n            var d = []\n            Object.keys(v.series.data).map(function (key, index) { d.push({ x: new window.ODate(key), y: index }) })\n            result.push({\n                label: v.series.title,\n                backgroundColor: colors[Math.floor(Math.random() * 10)],\n                borderColor: 'blue',\n                data: d\n            })\n        }\n        )\n        return result\n\n    }\n    var s1 = {\n        label: 's1',\n        borderColor: 'blue',\n        data: [\n            { x: '2017-01-06 18:39:30', y: 100 },\n            { x: '2017-01-07 18:39:28', y: 101 },\n        ]\n    };\n\n    var s2 = {\n        label: 's2',\n        borderColor: 'red',\n        data: [\n            { x: '2017-01-07 18:00:00', y: 90 },\n            { x: '2017-01-08 18:00:00', y: 105 },\n        ]\n    };\n    if (props.tasksVisits) {\n        return (\n            <Card>\n                <CardHeader></CardHeader>\n                <CardContent className='h-200'>\n                    <Bar\n                        data={{ datasets: series() }}\n                        options={{\n                            maintainAspectRatio: false,\n                            responsive: true,\n                            scales: {\n                                xAxes: [{\n                                    type: 'time',\n                                    time: {\n                                        displayFormats: {\n                                            day: 'MM/D'\n                                        },\n                                    },\n                                        scaleLabel: {\n                                        display: true,\n                                        labelString:  dict.date\n                                    }\n                                }]\n                            }\n                        }\n                        }\n                    />\n                </CardContent>\n                <CardFooter></CardFooter>\n            </Card>\n        )\n    } else {\n        return (null)\n    }\n\n}\nexport default TimeSeries;","import React from \"react\";\nimport { List, ListItem, Link, Card, CardHeader, CardContent, CardFooter } from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\n\nconst StatusChange = (props) => {\n    if (props.statusChanges && props.statusChanges.length > 0) {\n        function profileLink(profile) {\n            return (<Link href='/profiles/'>{profile.fullname}</Link>)\n        }\n\n        function chip(status, prev) {\n            return (\n                <div>\n\n                    <div className=\"chip fs-11 ml-2\" >\n                        <div className=\"chip-media\" style={{ backgroundColor: prev.color }} >\n                            <i className=\"icon f7-icons if-not-md\">plus_circle</i>\n                            <i className=\"icon material-icons md-only\"></i>\n                        </div>\n                        <div className=\"chip-label\">{prev.title}</div>\n                    </div>\n                    {dict.to}\n                    <div className=\"chip fs-11 \" >\n                        <div className=\"chip-media\" style={{ backgroundColor: status.color }} >\n                            <i className=\"icon f7-icons if-not-md\">plus_circle</i>\n                            <i className=\"icon material-icons md-only\"></i>\n                        </div>\n                        <div className=\"chip-label\">{status.title}</div>\n                    </div>\n\n                </div>\n            )\n        }\n\n        function item(statusChange) {\n            if (statusChange.prev_status && statusChange.prev_status.title !== statusChange.current_status.title) {\n                return (\n                    <ListItem\n                        className={'fs-11 home-status'}\n                        key={crypto.lib.WordArray.random(32)}\n                        link={'/' + statusChange.statusable_type_pl + '/' + statusChange.statusable_id}\n                        title={profileLink(statusChange.profile)}\n                        text={statusChange.title}\n                        after={chip(statusChange.current_status, statusChange.prev_status)}\n                    >\n                        <img slot=\"media\" src={statusChange.profile.avatar} width=\"32\" height=\"32\" />\n                    </ListItem>\n                )\n            }\n        }\n\n        return (\n            <Card>\n                <CardHeader>{dict.statusChanges}</CardHeader>\n                <CardContent className='h-120'>\n                    <List mediaList>\n                        {props.statusChanges.map((statusChange) =>\n                            item(statusChange)\n                        )}\n                    </List>\n                </CardContent>\n                <CardFooter></CardFooter>\n            </Card>\n        )\n    } else {\n        return (<ul></ul>)\n    }\n}\nexport default StatusChange;\n","import React from \"react\";\nimport { Page, Navbar, Row, BlockTitle, Col, Fab, Icon, Card, Link, CardContent, CardHeader } from 'framework7-react';\nimport TaskList from \"../tasks/list\"\nimport WorkList from \"../tasks/workList\"\nimport NotificationList from \"../notifications/homeList\"\nimport ReportList from \"../reports/homeList\"\nimport VisitChart from \"../visits/timeseries\"\nimport StatusChanges from \"../statuses/changes\"\n\nimport { dict } from '../../Dict';\n\nconst HomeIndex = (props) => {\n\n    return (\n        <Page onPageAfterIn={props.pageAfterIn.bind(this)}>\n            <Navbar title={dict.home} >\n                <Link panelOpen=\"right\">\n                    <Icon f7=\"bars\"></Icon>\n                </Link>\n            </Navbar>\n            <Row>\n                <Col width='100' tabletWidth='50'>\n                    <Card>\n                        <TaskList tasks={props.tasks} header={dict.your_tasks} sortChange={props.sortChange} />\n                    </Card>\n                </Col>\n\n                <Col width='100' tabletWidth='50'>\n                    <VisitChart tasksVisits={props.tasksVisits} header={dict.your_newest_works} sortChange={props.sortChange} />\n                </Col>\n\n\n\n            </Row>\n            <Row>\n                <Col width='100' tabletWidth='50'>\n                    <Card>\n                        <WorkList works={props.works} header={dict.your_newest_works} sortChange={props.sortChange} />\n                    </Card>\n                </Col>\n                <Col width='100' tabletWidth='50'>\n                    <Card>\n                        <CardHeader>{dict.events_calendar}</CardHeader>\n                        <CardContent className='home'>\n                            <div className=\"block block-strong no-padding\">\n                                <div id=\"demo-calendar-inline-container\"></div>\n                            </div>\n                        </CardContent>\n                    </Card>\n                </Col>\n            </Row>\n            <Row>\n                <Col width='100' tabletWidth='50'>\n                    <NotificationList notifications={props.notifications} header={dict.your_newest_works} sortChange={props.sortChange} />\n                </Col>\n\n                <Col width='100' tabletWidth='50'>\n                    <ReportList reports={props.reports} header={dict.your_newest_works} sortChange={props.sortChange} />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col width='100' tabletWidth='50'>\n                    <StatusChanges statusChanges={props.statusChanges} header={dict.your_newest_works} sortChange={props.sortChange} />\n                </Col>\n\n\n            </Row>\n\n        </Page>\n    )\n}\nexport default HomeIndex;\n","import React, { Component } from 'react';\nimport { NavLeft, Link, Page, Navbar, Icon, Row, Col, Card } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport Framework7 from 'framework7/framework7.esm.bundle'\nimport HomeContent from \"../../containers/home/index\"\n\nexport default class HomePage extends Component {\n  constructor() {\n    super();\n    this.getMutipleList = this.getMutipleList.bind(this);\n    this.sortChange = this.sortChange.bind(this);\n\n    this.loadData = this.loadData.bind(this);\n    this.loadCalender = this.loadCalender.bind(this);\n    this.pageAfterIn = this.pageAfterIn.bind(this);\n    \n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      tasks: null,\n      works: null,\n      notifications: null,\n      reports: null,\n      events: null,\n      statusChanges: null,\n    }\n  }\n\n\n  componentWillMount() {\n    ModelStore.on(\"got_multiple_list\", this.getMutipleList);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_multiple_list\", this.getMutipleList);\n  }\n\n  componentDidMount() {\n    if (this.state.token && this.state.token.length > 10) {\n\n    }\n  }\n  loadCalender() {\n    const self = this;\n    const app = self.$f7;\n    var events = []\n    if (self.state.events) {\n      self.state.events.map((ev) =>{\n        events.push({date: new window.ODate(ev.date), color: ev.color})\n      })\n    }\n\n    console.log(events)\n\n\n    var monthNames = ['فروردين', 'ارديبهشت', 'خرداد', 'تیر', 'مرداد', 'شهریور', 'مهر', 'آبان', 'آذر', 'دی', 'بهمن', 'اسفند']\n    var calendarInline = app.calendar.create({\n      containerEl: '#demo-calendar-inline-container',\n      value: [new Date()],\n      weekHeader: false,\n      events: events,\n      renderToolbar: function () {\n        return '<div class=\"toolbar calendar-custom-toolbar no-shadow\">' +\n          '<div class=\"toolbar-inner\">' +\n          '<div class=\"left\">' +\n          '<a href=\"#\" class=\"link icon-only\"><i class=\"icon icon-back ' + (app.theme === 'md' ? 'color-black' : '') + '\"></i></a>' +\n          '</div>' +\n          '<div class=\"center\"></div>' +\n          '<div class=\"right\">' +\n          '<a href=\"#\" class=\"link icon-only\"><i class=\"icon icon-forward ' + (app.theme === 'md' ? 'color-black' : '') + '\"></i></a>' +\n          '</div>' +\n          '</div>' +\n          '</div>';\n      },\n      on: {\n        init: function (c) {\n          self.$$('.calendar-custom-toolbar .center').text(monthNames[c.currentMonth] + ', ' + c.currentYear);\n          self.$$('.calendar-custom-toolbar .left .link').on('click', function () {\n            calendarInline.prevMonth();\n          });\n          self.$$('.calendar-custom-toolbar .right .link').on('click', function () {\n            calendarInline.nextMonth();\n          });\n        },\n        monthYearChangeStart: function (c) {\n          self.$$('.calendar-custom-toolbar .center').text(monthNames[c.currentMonth] + ', ' + c.currentYear);\n        },\n        dayClick: function (calendar, dayEl, year, month, day) {\n          console.log(year, month, day)\n        }\n      }\n    });\n  }\n\n\n  pageAfterIn() {\n    //this.loadCalender();\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  loadData() {\n    const f7: Framework7 = Framework7.instance;\n    f7.toast.show({ text: dict.receiving, closeTimeout: 2000, position: 'top' });\n    MyActions.getMultipleList('home', this.state.page, {}, this.state.token);\n  }\n\n  getMutipleList() {\n    var multiple = ModelStore.getMutipleList()\n    var klass = ModelStore.getKlass()\n    console.log(multiple)\n    if (multiple && klass === 'Home') {\n      this.setState({\n        tasks: multiple.tasks,\n        works: multiple.works,\n        notifications: multiple.notifications,\n        reports: multiple.reports,\n        tasksVisits: multiple.tasks_visits,\n        events: multiple.events,\n        statusChanges: multiple.status_change,\n      }, () => this.loadCalender());\n    }\n  }\n\n  sortChange(i) {\n    MyActions.getList('tasks', this.state.page, { order: i.title }, this.state.token);\n  }\n\n  render() {\n    const { tasks, works, notifications, reports, tasksVisits,statusChanges } = this.state;\n    return (<HomeContent \n      notifications={notifications} tasksVisits={tasksVisits}\n       reports={reports} tasks={tasks} works={works} sortChange={this.sortChange} \n       pageAfterIn={this.pageAfterIn} statusChanges={statusChanges}\n       />)\n  }\n}","import React, { Component } from 'react';\nimport { Menu, MenuItem, MenuDropdown, MenuDropdownItem, Page, Navbar, Block, BlockTitle, List, ListItem, FabButton, FabButtons, Fab, Icon } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\n\nexport default class PanelRightPage extends Component {\n  constructor() {\n    super();\n    this.logout = this.logout.bind(this);\n    this.getInstance = this.getInstance.bind(this);\n    this.check_ability = this.check_ability.bind(this);\n\n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      ability: null,\n    }\n  }\n\n  logout() {\n    this.setState({ token: null });\n    window.localStorage.removeItem('token');\n    window.location.replace('/')\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n  }\n\n  componentDidMount() {\n    if (this.state.token && this.state.token.length > 10) {\n      MyActions.getInstance('users', 'role', this.state.token);\n    }\n  }\n\n  getInstance() {\n    var user = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (user && klass === 'UserRole') {\n      console.log(user)\n      this.setState({\n        ability: user.the_ability\n      });\n    }\n\n  }\n\n  check_ability(a, link, icon) {\n    var result = []\n    if (this.state.ability) {\n      this.state.ability.map((ab) => {\n        if (ab.title === a && ab.value) {\n          result.push(\n            <ListItem link={\"/\" + link + \"/\"} ignoreCache={true} key={'panel' + link} view=\"#main-view\" panelClose>\n              <i className={\"va ml-5 fa fa-\" + icon}></i>\n              <span>{dict[link]}</span>\n            </ListItem>\n          )\n        }\n      })\n    }\n    return result\n  }\n\n  logged_in(token) {\n    if (token) {\n      return (\n        <React.Fragment>\n          <BlockTitle> <i className=\"va ml-5 fa fa-tachometer\"></i>{dict.dashboard}</BlockTitle>\n          <List className='fs-13'>\n          <ListItem link=\"/\" view=\"#main-view\" panelClose>\n              <i className=\"va ml-5 fa fa-home\"></i>\n              <span>{dict.home}</span>\n            </ListItem>\n\n            <ListItem link=\"/tasks/\" view=\"#main-view\" panelClose>\n              <i className=\"va ml-5 fa fa-tasks\"></i>\n              <span>{dict.tasks}</span>\n            </ListItem>\n\n            <ListItem link=\"/time_sheets/\" view=\"#main-view\" panelClose>\n              <i className=\"va ml-5 fa fa-file-excel-o\"></i>\n              <span>{dict.time_sheets}</span>\n            </ListItem>\n\n\n            <ListItem link=\"/notifications/\" ignoreCache={false} reloadCurrent={false} view=\"#main-view\" panelClose>\n              <i className=\"va ml-5 fa fa-circle-o-notch\"></i>\n              <span>{dict.notifications}</span>\n            </ListItem>\n          </List>\n\n          <BlockTitle><i className=\"va ml-5 fa fa-cogs\"></i>{dict.user_settings}</BlockTitle>\n          <List>\n            <ListItem link=\"/settings/\" ignoreCache={true} view=\"#main-view\" panelClose>\n              <i className=\"va ml-5 fa fa-user-secret\"></i>\n              <span>{dict.privacy}</span>\n            </ListItem>\n            <ListItem link=\"/profiles/\" view=\"#main-view\" panelClose>\n              <i className=\"va ml-5 fa fa-user-circle-o\"></i>\n              <span>{dict.profile}</span>\n            </ListItem>\n            <ListItem view=\"#main-view\" panelClose onClick={this.logout}>\n              <i className=\"va ml-5 fa fa-power-off\"></i>\n              <span>{dict.logout}</span>\n            </ListItem>\n          </List>\n\n\n          <BlockTitle> <i className=\"va ml-5 fa fa-cog\"></i>{dict.settings}</BlockTitle>\n          <List className='fs-13'>\n            {this.check_ability('change_role', \"roles\", \"shield\")}\n\n            {this.check_ability('change_statuses', \"statuses\", \"circle-o\")}\n\n            {this.check_ability('add_tags', \"tags\", \"tags\")}\n\n            {this.check_ability('change_groups', \"groups\", \"bullseye\")}\n          </List>\n        </React.Fragment>\n      )\n    } else {\n      return (\n        <React.Fragment>\n          <BlockTitle>{dict.user_settings}</BlockTitle>\n          <List>\n            <ListItem link=\"/login/\" title={dict.login} view=\"#main-view\" panelClose></ListItem>\n          </List>\n        </React.Fragment>\n      )\n    }\n  }\n\n  render() {\n    const { token } = this.state;\n    return (\n      <Page >\n        <Navbar title={dict.tavan} />\n        {this.logged_in(token)}\n      </Page>\n    );\n  }\n}","import React from \"react\";\nimport { List, ListItem, Button, Icon} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport crypto from 'crypto-js';\nconst UserOptions = (props) => {\n  var options = [<option value=''></option>]\n  if(props.users){\n    for (let i = 0; i < props.users.length; i++) {\n      options.push(\n        <option value={props.users[i].id}>\n          {props.users[i].email}\n        </option>\n      )\n    }\n\n  }\n  return options\n\n}\nexport default UserOptions;\n","import React from \"react\";\nimport { List, ListItem, BlockTitle, Block, Row, Button,Link } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport UserOptions from \"../users/options\";\n\nconst AssignmentForm = (props) => {\n  return (\n    <React.Fragment>\n      <BlockTitle>{dict.assignment_form}</BlockTitle>\n      <List inset>\n        <ListItem\n          title={dict.email}\n          smartSelect\n        >\n          <select name=\"content\"\n            onChange={(e) => { props.handleChange({ user_id: e.target.value }) }}>\n            <UserOptions users={props.users} />\n          </select>\n        </ListItem>\n      </List>\n      <Block strong inset>\n        <Row tag=\"p\">\n          <Link className=\"btn-notice\"></Link>\n          <Button className=\"col btn\" fill onClick={props.submit}>{dict.submit}</Button>\n        </Row>\n      </Block>\n    </React.Fragment>\n  )\n}\nexport default AssignmentForm;\n","  \nimport React from \"react\";\nimport { List, ListItem, Button, Icon} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport crypto from 'crypto-js';\nconst UserList = (props) => {\n    var body = []\n  if(props.users){\n\n    \n    for (let i = 0; i < props.users.length; i++) {\n        var td = []\n        body.push(<tr key={crypto.lib.WordArray.random(32)}>\n        <td key={crypto.lib.WordArray.random(32)}>{props.users[i].id}</td>\n        <td key={crypto.lib.WordArray.random(32)}>{props.users[i].email}</td>\n        <td className=\"checkbox-cell\" key={crypto.lib.WordArray.random(32)}>\n            <Button color='gray' onClick={() => props.removeRole(props.users[i].id)}>\n              <Icon ios=\"f7:trash\" aurora=\"f7:trash\" md=\"material:trash\"></Icon>\n            </Button>\n          </td>\n        </tr>)\n    }\n\n  return(\n    <div className=\"data-table card\">\n      <table>\n        <thead>\n          <tr>\n            <td>ID</td>\n            <td>Email</td>\n          </tr>\n        </thead>\n\n        <tbody>\n          {body}\n        </tbody>\n      </table>\n    </div>\n\n  )\n}\nelse {\n  return(null)\n}\n}\nexport default UserList;","import React from \"react\";\nimport { List, Link, ListInput, Block, Row, Button, BlockTitle } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport crypto from 'crypto-js';\nimport UserOptions from \"../users/options\";\n\nconst AccessControlForm = (props) => {\n    return (\n        <React.Fragment>\n            <BlockTitle>{dict.access_control_form}</BlockTitle>\n            <List  inset>\n                <ListInput\n                    label={dict.item}\n                    type=\"text\"\n                    placeholder='...'\n                    onInput={(e) => {\n                        props.handleChange({ abilityTitle: e.target.value })\n                    }}\n                />\n                <ListInput\n                    label={dict.value}\n                    type=\"select\"\n                    defaultValue={true}\n                    placeholder=\"Please choose...\"\n                    onChange={(e) => {\n                        props.handleChange({ abilityValue: e.target.value })\n                    }}\n                >\n                    <option value={true}>{dict.true}</option>\n                    <option value={false}>{dict.false}</option>\n                </ListInput>\n            </List>\n            <Block strong inset>\n                <Row tag=\"p\">\n                 <Link className=\"btn-notice\"></Link>\n                    <Button className=\"col btn\" fill onClick={props.addAbility}>{dict.submit}</Button>\n                </Row>\n            </Block>\n        </React.Fragment>\n    )\n}\nexport default AccessControlForm;\n","\nimport React from \"react\";\nimport { List, ListItem, Button, Icon, BlockTitle } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport crypto from 'crypto-js';\nconst AbilityList = (props) => {\n    var body = []\n    if (props.ability) {\n\n\n        for (let i = 0; i < props.ability.length; i++) {\n            var td = []\n            body.push(<tr key={crypto.lib.WordArray.random(32)}>\n                <td key={crypto.lib.WordArray.random(32)}>{props.ability[i].title}</td>\n                <td key={crypto.lib.WordArray.random(32)}>{dict[props.ability[i].value]}</td>\n                <td className=\"checkbox-cell\" key={crypto.lib.WordArray.random(32)}>\n                    <Button color='gray' onClick={() => props.removeAbility(props.ability[i].title)}>\n                        <Icon ios=\"f7:trash\" aurora=\"f7:trash\" md=\"material:trash\"></Icon>\n                    </Button>\n                </td>\n            </tr>)\n        }\n\n        return (\n            <React.Fragment>\n            <BlockTitle>{dict.access_control_list}</BlockTitle>\n            <div className=\"data-table card\">\n                <table>\n                    <thead>\n                        <tr>\n                            <td>{dict.title}</td>\n                            <td>{dict.value}</td>\n                        </tr>\n                    </thead>\n\n                    <tbody>\n                        {body}\n                    </tbody>\n                </table>\n            </div>\n            </React.Fragment>\n\n        )\n    }\n    else {\n        return (null)\n    }\n}\nexport default AbilityList;","import React from \"react\";\nimport { Page, Navbar, List, BlockTitle, ListItem, Fab, Icon,Preloader, Block} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport AssignmentForm from \"../assignments/form\";\nimport AssignmentList from \"../assignments/list\";\n\nimport AccessControlForm from \"../access_controls/form\";\nimport AccessControlList from \"../access_controls/list\";\n\nconst RoleShow = (props) => {\n  if (props.role){\n    return(\n      <React.Fragment>\n        <BlockTitle>{dict.title}</BlockTitle>\n        <List simple-list>\n          <ListItem>{props.role.title}</ListItem>\n        </List>\n\n        <AccessControlList  ability={props.ability} removeAbility={props.removeAbility}/>\n        <AccessControlForm  addAbility={props.addAbility} handleChange={props.handleChange} />\n        \n\n        <AssignmentList users={props.assignedUsers} removeRole={props.removeRole} />\n        <AssignmentForm users={props.users}  submit={props.submit} handleChange={props.handleChange}/>\n\n        \n      </React.Fragment>\n    )\n  } else {\n    return(null)\n  }\n}\nexport default RoleShow;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon, Fab\n} from 'framework7-react';\nimport { dict } from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport RoleShow from \"../../containers/roles/show\"\n\nexport default class Layout extends Component {\n  constructor() {\n    super();\n    this.getInstance = this.getInstance.bind(this);\n    this.getList = this.getList.bind(this);\n    this.submit = this.submit.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.removeRole = this.removeRole.bind(this);\n    this.addAbility = this.addAbility.bind(this);\n    this.removeAbility = this.removeAbility.bind(this);\n\n    \n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      role: null,\n      id: null,\n      users: null,\n      assignedUsers: null,\n      user_id: null,\n      abilityTitle: '',\n      abilityValue: true,\n      ability: null,\n    }\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.getInstance);\n    ModelStore.on(\"got_list\", this.getList);\n    ModelStore.on(\"deleted_instance\", this.getInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.getInstance);\n    ModelStore.removeListener(\"got_list\", this.getList);\n    ModelStore.removeListener(\"deleted_instance\", this.getInstance);\n  }\n\n  componentDidMount() {\n    MyActions.getInstance('roles', this.$f7route.params['roleId'], this.state.token);\n    MyActions.getList('users', this.state.page, {}, this.state.token);\n  }\n\n  getInstance() {\n    var role = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (role && klass === 'Role') {\n      this.setState({\n        role: role,\n        id: role.id,\n        assignedUsers: role.users,\n        ability: role.ability\n      });\n    }\n    this.$$('.btn').show();\n  }\n\n  getList() {\n    var users = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    if (users && klass === 'User') {\n      this.setState({\n        users: users,\n      });\n    }\n  }\n\n  submit() {\n    this.$$('.btn').hide();\n    this.$$('.btn-notice').text(dict.submitting);\n    var data = { role_id: this.state.id, user_id: this.state.user_id }\n    MyActions.setInstance('users/assignments', data, this.state.token);\n  }\n\n  addAbility() {\n    var data = { id: this.state.id, ability_title: this.state.abilityTitle, ability_value: this.state.abilityValue}\n    MyActions.setInstance('roles/abilities', data, this.state.token);\n  }\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  fab() {\n    if (this.state.role) {\n      return (\n        <Fab href={\"/roles/\" + this.state.role.id + \"/edit\"} target=\"#main-view\" position=\"left-bottom\" slot=\"fixed\" color=\"lime\">\n          <Icon ios=\"f7:edit\" aurora=\"f7:edit\" md=\"material:edit\"></Icon>\n          <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n        </Fab>\n      )\n    }\n  }\n\n  removeRole(user_id) {\n    MyActions.removeInstance('users/assignments', { user_id: user_id, role_id: this.state.id }, this.state.token);\n  }\n\n  removeAbility(title){\n    MyActions.removeInstance('roles/abilities', { id: this.state.id, title: title }, this.state.token);\n  }\n\n  render() {\n    const { role, users, assignedUsers, ability } = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.roles} backLink={dict.back} />\n        <BlockTitle></BlockTitle>\n        {this.fab()}\n        <RoleShow role={role} users={users} ability={ability} removeAbility={this.removeAbility} assignedUsers={assignedUsers} addAbility={this.addAbility} removeRole={this.removeRole} submit={this.submit} handleChange={this.handleChangeValue} />\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { List, ListItem} from 'framework7-react';\nimport crypto from 'crypto-js';\n\nconst RoleList = (props) => {\n\n  if (props.roles) {\n    return (\n      <List mediaList>\n        {props.roles.map((role) =>\n          <ListItem\n            key={crypto.lib.WordArray.random(32)}\n            link={\"/roles/\" + role.id}\n            ignoreCache={true}\n            title={role.title}\n            after=\"\"\n            subtitle=\"\"\n            text=\"\"\n            ></ListItem>\n        )}\n      </List>\n    )} else {\n      return (<ul></ul>)\n    }\n  }\n  export default RoleList;\n","import React from \"react\";\nimport { Page, Navbar, List, BlockTitle, ListItem, Fab, Icon,Preloader, Block} from 'framework7-react';\nimport RoleList from \"./list\"\nimport { dict} from '../../Dict';\n\nconst RoleIndex = (props) => {\n  return(\n    <Page>\n      <Navbar title={dict.roles} backLink={dict.back} >\n      </Navbar>\n      <BlockTitle>{dict.list}</BlockTitle>\n      <Fab href=\"/roles/new\" target=\"#main-view\"  position=\"left-bottom\" slot=\"fixed\" color=\"deeporange\">\n        <Icon ios=\"f7:add\" aurora=\"f7:add\" md=\"material:add\"></Icon>\n        <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n      </Fab>\n      <RoleList roles={props.roles}/>\n    </Page>\n  )\n}\nexport default RoleIndex;\n","import React from \"react\"\nimport { Page,Fab, Icon } from 'framework7-react';\nimport ModelStore from \"../../stores/ModelStore\";\nimport RoleIndex from \"../../containers/roles/index\"\nimport * as MyActions from \"../../actions/MyActions\";\nimport { dict} from '../../Dict';\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\n\nexport default class Layout extends React.Component {\n  constructor() {\n    super();\n    this.getList = this.getList.bind(this);\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      roles: null,\n    }\n  }\n  componentWillMount() {\n    ModelStore.on(\"got_list\", this.getList);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_list\", this.getList);\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  loadData(){\n    const f7: Framework7 = Framework7.instance;\n    f7.toast.show({ text: dict.receiving, closeTimeout: 2000, position: 'top'});\n    MyActions.getList('roles', this.state.page, {}, this.state.token);\n  }\n\n  getList() {\n    var roles = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    if (roles && klass === 'Role'){\n      this.setState({\n        roles: roles,\n      });\n    }\n  }\n\n  render() {\n    const {roles} = this.state;\n    return(<RoleIndex roles={roles}/>)\n  }\n}\n","import React from \"react\";\nimport { List, ListItem, ListInput, Block, Row, Button, BlockTitle,Link } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport crypto from 'crypto-js';\n\n\nconst RoleForm = (props) => {\n  if (props.defaultRole) {\n    var isDefaultRole = true;\n  } else {\n    var isDefaultRole = false\n  }\n  \n  return (\n    <React.Fragment>\n      <BlockTitle>{dict.role}</BlockTitle>\n      <List >\n        <ListInput\n          label={dict.title}\n          key='role-title'\n          type=\"text\"\n          placeholder='...'\n          defaultValue={props.role.title}\n          onInput={(e) => {\n            props.handleChange({ title: e.target.value })\n          }}\n        />\n        <ListItem radio value={false} checked={!isDefaultRole} name=\"defaultRole\" title={dict.NonDefault}\n          onChange={(e) => {\n            console.log(e)\n            props.handleChange({ defaultRole: JSON.parse(e.target.value) })\n          }}>\n        </ListItem>\n        <ListItem radio value={true} checked={isDefaultRole} name=\"defaultRole\" title={dict.Default}\n          onChange={(e) => {\n            console.log(e)\n            props.handleChange({ defaultRole: JSON.parse(e.target.value) });\n          }}>\n        </ListItem>\n      </List>\n\n      <Block strong>\n        <Row tag=\"p\">\n        <Link className=\"btn-notice\"></Link>\n          <Button className=\"col btn\" fill disabled={!props.editing} onClick={props.submit}>{dict.submit}</Button>\n        </Row>\n      </Block>\n    </React.Fragment>\n  )\n}\nexport default RoleForm;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport RoleForm from \"../../containers/roles/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\nexport default class RoleCreate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      role: {},\n      defaultRole: true,\n    }\n  }\n\n\n  componentWillMount() {\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n  }\n\n  submit(){\n    var data = {title: this.state.title, default_role: this.state.defaultRole}\n    MyActions.setInstance('roles', data, this.state.token);\n  }\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  setInstance(){\n    const self = this;\n    this.$f7router.navigate('/roles/');\n  }\n\n\n\n  render() {\n    const {role, defaultRole} = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.role_form} backLink={dict.back} />\n        <BlockTitle>{dict.role_form}</BlockTitle>\n        <RoleForm role={role} defaultRole={defaultRole} submit={this.submit} editing={true} handleChange={this.handleChangeValue}/>\n      </Page>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport RoleForm from \"../../containers/roles/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\n\nexport default class DocumentUpdate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.getInstance = this.getInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n\n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      role : {},\n      defaultRole: null,\n    }\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n\n  }\n\n\n  submit(){\n    var data = {id:this.state.id, title: this.state.title, default_role: this.state.defaultRole}\n    MyActions.updateInstance('roles', data,  this.state.token);\n  }\n  componentDidMount(){\n    this.loadData();\n  }\n\n  loadData(){\n    const f7: Framework7 = Framework7.instance;\n    f7.toast.show({ text: dict.receiving, closeTimeout: 2000, position: 'top'});\n    if (this.$f7route.params['roleId']) {\n      MyActions.getInstance('roles', this.$f7route.params['roleId'],  this.state.token);\n    }\n  }\n\n\n  getInstance(){\n    var role = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (role && klass === 'Role'){\n      this.setState({\n        title: role.title,\n        id: role.id,\n        role: role,\n        defaultRole: role.default_role\n      });\n    }\n  }\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n\n  setInstance(){\n    const self = this;\n    this.$f7router.navigate('/roles/');\n  }\n\n\n  render() {\n        const {role, defaultRole} = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.role_form} backLink={dict.back} />\n        <BlockTitle>{dict.role_form}</BlockTitle>\n        <RoleForm role={role} defaultRole={defaultRole} submit={this.submit} editing={true} handleChange={this.handleChangeValue}/>\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { Page, Navbar, List, BlockTitle, ListItem, Fab, Icon,Preloader, Block} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport AssignmentForm from \"../assignments/form\";\nimport AssignmentList from \"../assignments/list\";\n\nimport AccessControlForm from \"../access_controls/form\";\nimport AccessControlList from \"../access_controls/list\";\n\nconst TagShow = (props) => {\n  if (props.tag){\n    return(\n      <React.Fragment>\n        <BlockTitle>{dict.title}</BlockTitle>\n        <List simple-list>\n          <ListItem>{props.tag.title}</ListItem>\n        </List>\n\n        <BlockTitle>{dict.confirmed}</BlockTitle>\n        <List simple-list>\n          <ListItem>{dict[props.tag.confirmed]}</ListItem>\n        </List>\n\n        \n      </React.Fragment>\n    )\n  } else {\n    return(null)\n  }\n}\nexport default TagShow;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon, Fab\n} from 'framework7-react';\nimport { dict } from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport TagShow from \"../../containers/tags/show\"\n\nexport default class Layout extends Component {\n  constructor() {\n    super();\n    this.getInstance = this.getInstance.bind(this);\n    this.submit = this.submit.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      tag: null,\n      id: null,\n      users: null,\n      user_id: null,\n      editable: false,\n    }\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.getInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.getInstance);\n  }\n\n  componentDidMount() {\n    MyActions.getInstance('tags', this.$f7route.params['tagId'], this.state.token);\n  }\n\n  getInstance() {\n    var tag = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (tag && klass === 'Tag') {\n      this.setState({\n        tag: tag,\n        id: tag.id,\n        assignedUsers: tag.users,\n        ability: tag.ability,\n        editable: tag.editable\n      });\n    }\n    this.$$('.btn').show();\n  }\n\n\n  submit() {\n    this.$$('.btn').hide();\n    this.$$('.btn-notice').text(dict.submitting);\n    var data = { tag_id: this.state.id, user_id: this.state.user_id }\n    MyActions.setInstance('users/assignments', data, this.state.token);\n  }\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  fab() {\n    if (this.state.tag && this.state.editable) {\n      return (\n        <Fab href={\"/tags/\" + this.state.tag.id + \"/edit\"} target=\"#main-view\" position=\"left-bottom\" slot=\"fixed\" color=\"lime\">\n          <Icon ios=\"f7:edit\" aurora=\"f7:edit\" md=\"material:edit\"></Icon>\n          <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n        </Fab>\n      )\n    }\n  }\n\n\n  render() {\n    const { tag, editable} = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.tags} backLink={dict.back} />\n        <BlockTitle></BlockTitle>\n        {this.fab()}\n        <TagShow \n          tag={tag} editable={editable} \n           submit={this.submit} handleChange={this.handleChangeValue} />\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { List, ListItem} from 'framework7-react';\nimport crypto from 'crypto-js';\n\nconst TagList = (props) => {\n\n  if (props.tags) {\n    return (\n      <List mediaList>\n        {props.tags.map((tag) =>\n          <ListItem\n            key={crypto.lib.WordArray.random(32)}\n            link={\"/tags/\" + tag.id}\n            ignoreCache={true}\n            title={tag.title}\n            after=\"\"\n            subtitle=\"\"\n            text=\"\"\n            ></ListItem>\n        )}\n      </List>\n    )} else {\n      return (<ul></ul>)\n    }\n  }\n  export default TagList;\n","import React from \"react\";\nimport { Page, Navbar, List, BlockTitle, ListItem, Fab, Icon,Preloader, Block} from 'framework7-react';\nimport TagList from \"./list\"\nimport { dict} from '../../Dict';\n\nconst TagIndex = (props) => {\n  return(\n    <Page>\n      <Navbar title={dict.tags} backLink={dict.back} >\n      </Navbar>\n      <BlockTitle>{dict.list}</BlockTitle>\n      <Fab href=\"/tags/new\" target=\"#main-view\"  position=\"left-bottom\" slot=\"fixed\" color=\"deeporange\">\n        <Icon ios=\"f7:add\" aurora=\"f7:add\" md=\"material:add\"></Icon>\n        <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n      </Fab>\n      <TagList tags={props.tags}/>\n    </Page>\n  )\n}\nexport default TagIndex;\n","import React from \"react\"\nimport { Page,Fab, Icon } from 'framework7-react';\nimport ModelStore from \"../../stores/ModelStore\";\nimport TagIndex from \"../../containers/tags/index\"\nimport * as MyActions from \"../../actions/MyActions\";\nimport { dict} from '../../Dict';\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\n\nexport default class Layout extends React.Component {\n  constructor() {\n    super();\n    this.getList = this.getList.bind(this);\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      tags: null,\n    }\n  }\n  componentWillMount() {\n    ModelStore.on(\"got_list\", this.getList);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_list\", this.getList);\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  loadData(){\n    const f7: Framework7 = Framework7.instance;\n    f7.toast.show({ text: dict.receiving, closeTimeout: 2000, position: 'top'});\n    MyActions.getList('tags', this.state.page, {}, this.state.token);\n  }\n\n  getList() {\n    var tags = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    if (tags && klass === 'Tag'){\n      this.setState({\n        tags: tags,\n      });\n    }\n  }\n\n  render() {\n    const {tags} = this.state;\n    return(<TagIndex tags={tags}/>)\n  }\n}\n","import React from \"react\";\nimport { List, ListItem, ListInput, Block, Row, Button, BlockTitle, Link } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport crypto from 'crypto-js';\n\n\nconst TagForm = (props) => {\n\n  if (props.isConfirmed) {\n    var isConfirmedTag = true;\n  } else {\n    var isConfirmedTag = false\n  }\n\n  function confirm() {\n    if (props.confirmable) {\n      return (\n        <List>\n          <ListItem radio value={false} checked={!isConfirmedTag} name=\"selectedMode\" title={dict.not_confirmed}\n            onChange={(e) => {\n              props.handleChange({ isConfirmed: JSON.parse(e.target.value) });\n            }}>\n          </ListItem>\n          <ListItem radio value={true} checked={isConfirmedTag} name=\"selectedMode\" title={dict.confirmed}\n            onChange={(e) => {\n              props.handleChange({ isConfirmed: JSON.parse(e.target.value) })\n            }}>\n          </ListItem>\n        </List>\n      )\n    }\n\n  }\n  return (\n    <React.Fragment>\n      <BlockTitle>{dict.tag}</BlockTitle>\n      <List >\n        <ListInput\n          label={dict.title}\n          type=\"text\"\n          placeholder='...'\n          defaultValue={props.tag.title}\n          onInput={(e) => {\n            props.handleChange({ title: e.target.value })\n          }}\n        />\n      </List>\n      {confirm()}\n\n      <Block strong>\n        <Row tag=\"p\">\n        <Link className=\"btn-notice\"></Link>\n          <Button className=\"col btn\" fill disabled={!props.editing} onClick={props.submit}>{dict.submit}</Button>\n        </Row>\n      </Block>\n    </React.Fragment>\n  )\n}\nexport default TagForm;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport TagForm from \"../../containers/tags/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\nexport default class TagCreate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      tag: {},\n      isConfirmed: false,\n      confirmable: false,\n    }\n  }\n\n\n  componentWillMount() {\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n  }\n\n  submit(){\n    var data = {title: this.state.title, confirmed: this.state.isConfirmed}\n    MyActions.setInstance('tags', data, this.state.token);\n  }\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  setInstance(){\n    const self = this;\n    this.$f7router.navigate('/tags/');\n  }\n\n\n\n  render() {\n    const {tag, isConfirmed, confirmable} = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.tag_form} backLink={dict.back} />\n        <BlockTitle>{dict.tag_form}</BlockTitle>\n        <TagForm \n          tag={tag} submit={this.submit} editing={true} confirmable={confirmable}\n          handleChange={this.handleChangeValue} isConfirmed={isConfirmed}\n          />\n      </Page>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport TagForm from \"../../containers/tags/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\n\nexport default class DocumentUpdate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.getInstance = this.getInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n\n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      tag : {},\n      isConfirmed: false,\n      confirmable: false,\n    }\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n\n  }\n\n\n  submit(){\n    var data = {\n      id:this.state.id, title: this.state.title, \n      confirmed: this.state.isConfirmed}\n    MyActions.updateInstance('tags', data,  this.state.token);\n  }\n  componentDidMount(){\n    this.loadData();\n  }\n\n  loadData(){\n    const f7: Framework7 = Framework7.instance;\n    f7.toast.show({ text: dict.receiving, closeTimeout: 2000, position: 'top'});\n    if (this.$f7route.params['tagId']) {\n      MyActions.getInstance('tags', this.$f7route.params['tagId'],  this.state.token);\n    }\n  }\n\n\n  getInstance(){\n    var tag = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (tag && klass === 'Tag'){\n      this.setState({\n        title: tag.title,\n        id: tag.id,\n        tag: tag,\n        isConfirmed: tag.confirmed,\n        confirmable: tag.confirmable\n      });\n    }\n  }\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n\n  setInstance(){\n    const self = this;\n    this.$f7router.navigate('/tags/');\n  }\n\n\n  render() {\n        const {tag, isConfirmed, confirmable} = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.tag_form} backLink={dict.back} />\n        <BlockTitle>{dict.tag_form}</BlockTitle>\n        <TagForm \n          tag={tag} isConfirmed={isConfirmed} submit={this.submit} confirmable={confirmable}\n          editing={true} handleChange={this.handleChangeValue}/>\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { Page, Navbar, List, BlockTitle, ListItem, Fab, Icon,Preloader, Block} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport AssignmentForm from \"../assignments/form\";\nimport AssignmentList from \"../assignments/list\";\n\nimport AccessControlForm from \"../access_controls/form\";\nimport AccessControlList from \"../access_controls/list\";\n\nconst StatusShow = (props) => {\n  if (props.status){\n    return(\n      <React.Fragment>\n        <BlockTitle>{dict.title}</BlockTitle>\n        <List simple-list>\n          <ListItem>{props.status.title}</ListItem>\n        </List>\n        <BlockTitle>{dict.confirmed}</BlockTitle>\n        <List simple-list>\n          <ListItem>{dict[props.status.confirmed]}</ListItem>\n        </List>\n\n        <List simple-list>\n          <ListItem style={{backgroundColor: props.status.the_color}}>{props.status.the_color}</ListItem>\n        </List>\n\n        \n      </React.Fragment>\n    )\n  } else {\n    return(null)\n  }\n}\nexport default StatusShow;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon, Fab\n} from 'framework7-react';\nimport { dict } from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport StatusShow from \"../../containers/statuses/show\"\n\nexport default class Layout extends Component {\n  constructor() {\n    super();\n    this.getInstance = this.getInstance.bind(this);\n    this.submit = this.submit.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);    \n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      status: null,\n      id: null,\n      editable: false,\n    }\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.getInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.getInstance);\n  }\n\n  componentDidMount() {\n    MyActions.getInstance('statuses', this.$f7route.params['statusId'], this.state.token);\n  }\n\n  getInstance() {\n    var status = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (status && klass === 'Status') {\n      this.setState({\n        status: status,\n        id: status.id,\n        editable: status.editable,\n      });\n    }\n    this.$$('.btn').show();\n  }\n\n\n  submit() {\n    this.$$('.btn').hide();\n    this.$$('.btn-notice').text(dict.submitting);\n    var data = { status_id: this.state.id, user_id: this.state.user_id }\n    MyActions.setInstance('users/assignments', data, this.state.token);\n  }\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  fab() {\n    if (this.state.status && this.state.editable) {\n      return (\n        <Fab href={\"/statuses/\" + this.state.status.id + \"/edit\"} target=\"#main-view\" position=\"left-bottom\" slot=\"fixed\" color=\"lime\">\n          <Icon ios=\"f7:edit\" aurora=\"f7:edit\" md=\"material:edit\"></Icon>\n          <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n        </Fab>\n      )\n    }\n  }\n\n  render() {\n    const { status, editable } = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.statuses} backLink={dict.back} />\n        <BlockTitle></BlockTitle>\n        {this.fab()}\n        <StatusShow status={status} editable={editable} \n          submit={this.submit} handleChange={this.handleChangeValue} />\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { List, ListItem} from 'framework7-react';\nimport crypto from 'crypto-js';\n\nconst StatusList = (props) => {\n\n  if (props.statuses) {\n    return (\n      <List mediaList>\n        {props.statuses.map((status) =>\n          <ListItem\n            key={crypto.lib.WordArray.random(32)}\n            link={\"/statuses/\" + status.id}\n            ignoreCache={true}\n            title={status.title}\n            after=\"\"\n            subtitle=\"\"\n            text=\"\"\n            ></ListItem>\n        )}\n      </List>\n    )} else {\n      return (<ul></ul>)\n    }\n  }\n  export default StatusList;\n","import React from \"react\";\nimport { Page, Navbar, List, BlockTitle, ListItem, Fab, Icon,Preloader, Block} from 'framework7-react';\nimport StatusList from \"./list\"\nimport { dict} from '../../Dict';\n\nconst StatusIndex = (props) => {\n  return(\n    <Page>\n      <Navbar title={dict.statuses} backLink={dict.back} >\n      </Navbar>\n      <BlockTitle>{dict.list}</BlockTitle>\n      <Fab href=\"/statuses/new\" target=\"#main-view\"  position=\"left-bottom\" slot=\"fixed\" color=\"deeporange\">\n        <Icon ios=\"f7:add\" aurora=\"f7:add\" md=\"material:add\"></Icon>\n        <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n      </Fab>\n      <StatusList statuses={props.statuses}/>\n    </Page>\n  )\n}\nexport default StatusIndex;\n","import React from \"react\"\nimport { Page,Fab, Icon } from 'framework7-react';\nimport ModelStore from \"../../stores/ModelStore\";\nimport StatusIndex from \"../../containers/statuses/index\"\nimport * as MyActions from \"../../actions/MyActions\";\nimport { dict} from '../../Dict';\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\n\nexport default class Layout extends React.Component {\n  constructor() {\n    super();\n    this.getList = this.getList.bind(this);\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      statuses: null,\n    }\n  }\n  componentWillMount() {\n    ModelStore.on(\"got_list\", this.getList);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_list\", this.getList);\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  loadData(){\n    const f7: Framework7 = Framework7.instance;\n    f7.toast.show({ text: dict.receiving, closeTimeout: 2000, position: 'top'});\n    MyActions.getList('statuses', this.state.page, {}, this.state.token);\n  }\n\n  getList() {\n    var statuses = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    if (statuses && klass === 'Status'){\n      this.setState({\n        statuses: statuses,\n      });\n    }\n  }\n\n  render() {\n    const {statuses} = this.state;\n    return(<StatusIndex statuses={statuses}/>)\n  }\n}\n","import React from \"react\";\nimport { List, ListItem, ListInput, Block, Row, Button, BlockTitle, Link } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport crypto from 'crypto-js';\n\n\nconst StatusForm = (props) => {\n  if (props.status) {\n    if (props.isConfirmed) {\n      var isConfirmedTag = true;\n    } else {\n      var isConfirmedTag = false\n    }\n    function confirm() {\n      if (props.confirmable) {\n        return (\n          <List>\n            <ListItem radio value={false} checked={!isConfirmedTag} name=\"selectedMode\" title={dict.not_confirmed}\n              onChange={(e) => {\n                props.handleChange({ isConfirmed: JSON.parse(e.target.value) });\n              }}>\n            </ListItem>\n            <ListItem radio value={true} checked={isConfirmedTag} name=\"selectedMode\" title={dict.confirmed}\n              onChange={(e) => {\n                props.handleChange({ isConfirmed: JSON.parse(e.target.value) })\n              }}>\n            </ListItem>\n          </List>\n        )\n      }\n\n    }\n    return (\n      <React.Fragment>\n        <BlockTitle>{dict.status}</BlockTitle>\n        <List >\n          <ListInput\n            label={dict.title}\n            type=\"text\"\n            placeholder='...'\n            defaultValue={props.title}\n            onInput={(e) => {\n              props.handleChange({ title: e.target.value })\n            }}\n          />\n        </List>\n\n        {confirm()}\n\n        <div className=\"list \">\n          <ul>\n            <li>\n              <div className=\"item-content item-input\">\n                <div className=\"item-media\">\n                  <i class=\"fa fa-2x fa-circle-o demo-list-icon\" aria-hidden=\"true\" id=\"demo-color-picker-spectrum-value\"></i>\n                </div>\n                <div className=\"item-inner\">\n                  <div className=\"item-input-wrap\">\n                    <input type=\"text\" placeholder=\"Color\" value={props.color} readonly=\"readonly\" id=\"demo-color-picker-spectrum\" />\n                  </div>\n                </div>\n              </div>\n            </li>\n          </ul>\n        </div>\n\n        <Block strong>\n          <Row tag=\"p\">\n          <Link className=\"btn-notice\"></Link>\n            <Button className=\"col btn\" fill disabled={!props.editing} onClick={props.submit}>{dict.submit}</Button>\n          </Row>\n        </Block>\n      </React.Fragment>\n    )\n  } else {\n    return (null)\n  }\n\n}\nexport default StatusForm;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport StatusForm from \"../../containers/statuses/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\nexport default class StatusCreate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      status: {},\n      title: '',\n      color: '',\n      isConfirmed: false,\n    }\n  }\n\n\n  componentWillMount() {\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n  }\n\n\n  pageAfterIn() {\n    this.loadPalette();\n  }\n\n  loadPalette() {\n    const self = this;\n    const app = self.$f7;\n    app.colorPicker.create({\n      inputEl: '#demo-color-picker-spectrum',\n      targetEl: '#demo-color-picker-spectrum-value',\n      targetElSetBackgroundColor: true,\n      modules: ['sb-spectrum', 'hue-slider'],\n      openIn: 'popover',\n      value: {\n        hex: '#ff0000',\n      },\n      on: {\n        closed: function (c) {\n          self.setState({ color: c.value.hex });\n        }\n      }\n    });\n  }\n\n  submit(){\n    var data = {title: this.state.title, color: this.state.color, confirmed: this.state.isConfirmed}\n    MyActions.setInstance('statuses', data, this.state.token);\n  }\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  setInstance(){\n    const self = this;\n    this.$f7router.navigate('/statuses/');\n  }\n\n\n\n  render() {\n    const {status, isConfirmed} = this.state;\n    return (\n      <Page onPageAfterIn={this.pageAfterIn.bind(this)}>\n        <Navbar title={dict.status_form} backLink={dict.back} />\n        <BlockTitle>{dict.status_form}</BlockTitle>\n        <StatusForm \n        status={status} submit={this.submit} isConfirmed={isConfirmed}\n        editing={true} handleChange={this.handleChangeValue}\n        />\n      </Page>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport StatusForm from \"../../containers/statuses/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\n\nexport default class DocumentUpdate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.getInstance = this.getInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.loadPalette = this.loadPalette.bind(this);\n\n    \n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      status : {},\n      title: null,\n      id: '',\n      color: '#fff',\n      isConfirmed: false,\n      confirmable: false,\n    }\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  pageAfterIn() {\n    this.loadPalette();\n  }\n\n  loadPalette() {\n    \n    const self = this;\n    const app = self.$f7;\n\n    app.colorPicker.create({\n      inputEl: '#demo-color-picker-spectrum',\n      targetEl: '#demo-color-picker-spectrum-value',\n      targetElSetBackgroundColor: true,\n      modules: ['sb-spectrum', 'hue-slider'],\n      openIn: 'popover',\n      value: {\n        hex: this.state.color,\n      },\n      on: {\n        closed: function (c) {\n          self.setState({ color: c.value.hex });\n        }\n      }\n    });\n  }\n\n\n  submit(){\n    var data = {id:this.state.id, title: this.state.title, color: this.state.color, confirmed: this.state.isConfirmed}\n    MyActions.updateInstance('statuses', data,  this.state.token);\n  }\n\n  loadData(){\n    const f7: Framework7 = Framework7.instance;\n    f7.toast.show({ text: dict.receiving, closeTimeout: 2000, position: 'top'});\n    if (this.$f7route.params['statusId']) {\n      MyActions.getInstance('statuses', this.$f7route.params['statusId'],  this.state.token);\n    }\n  }\n\n\n  getInstance(){\n    var status = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (status && klass === 'Status'){\n      this.setState({\n        title: status.title,\n        id: status.id,\n        color: status.the_color,\n        status: status,\n        isConfirmed: status.confiremd,\n        confirmable: status.confirmable,\n      }, () => this.loadPalette());\n    } \n    console.log(status)\n  }\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n\n  setInstance(){\n    const self = this;\n    this.$f7router.navigate('/statuses/');\n  }\n\n\n  render() {\n        const {status, title, color, isConfirmed, confirmable} = this.state;\n    return (\n      <Page onPageAfterIn={this.pageAfterIn.bind(this)}>\n        <Navbar title={dict.status_form} backLink={dict.back} />\n        <BlockTitle>{dict.status_form}</BlockTitle>\n        <StatusForm \n        status={status} title={title} color={color} isConfirmed={isConfirmed}\n        submit={this.submit} editing={true} handleChange={this.handleChangeValue}\n        confirmable={confirmable}\n        />\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { List, ListItem, Link } from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\nimport Moment from 'react-moment';\nimport JDate from 'jalali-date';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\n\nconst ParticipantList = (props) => {\n  function removeLink(involvement){\n    if (involvement.role !== 'Creator' && props.editable){\n      return(<Link className=\"mt-4\" onClick={() => props.removeProfile(involvement.profile.id)}>{dict.remove}</Link>)\n    }\n  }\n\n  if (props.involvements) {\n    function select(involvement) {\n      if ( props.editable) {\n        return (\n          <select name=\"role\" onChange={(e) => { props.changeRole(involvement.profile.id, e.target.value) }}>\n            {option('Admin', involvement)}\n            {option('Confirmer', involvement)}\n            {option('Colleague', involvement)}\n            {option('Observer', involvement)}\n          </select>\n        )\n      }\n    }\n    function option(role, involvement) {\n      var selected = false\n      if (involvement.role == role) {\n        selected = true\n      }\n      return (<option value={role} selected={selected}>{dict[role]}</option>)\n    }\n    function addLink(involvement) {\n      if (props.removeProfile) {\n        return (\n          <div className='inline'>\n           {removeLink(involvement)}\n            <a className=\" fs-10 smart-select smart-select-init\" data-open-in=\"popover\">\n              {select(involvement)}\n              <div className=\"item-content\">\n                <div className=\"item-inner bg-w-after\">\n                  <div className=\"item-title\">{dict.role}</div>\n                  <div className=\"item-after mt-2\">{dict[involvement.role]}</div>\n                </div>\n              </div>\n            </a>\n          </div>\n        )\n      }\n    }\n    return (\n      <List className='fs-11'>\n        {props.involvements.map((involvement) =>\n          <ListItem\n            key={involvement.profile.id}\n            title={involvement.profile.fullname}\n            after={addLink(involvement)}>\n            <img slot=\"media\" src={involvement.profile.avatar} width=\"27\" height=\"27\" />\n          </ListItem>\n        )}\n      </List>\n    )\n  } else {\n    return (<ul></ul>)\n  }\n}\nexport default ParticipantList;\n","import React from \"react\";\nimport { List, ListItem, Link} from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\nimport Moment from 'react-moment';\nimport JDate from 'jalali-date';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\n\nconst SimpleList = (props) => {\n  if (props.profiles) {\n    function addLink(profile){\n        if (props.addProfile){\n            return(<Link onClick={()=> props.addProfile(profile.id)}>{dict.add}</Link>)\n        } \n        if (props.removeProfile){\n            return(<Link onClick={()=> props.removeProfile(profile.id)}>{dict.remove}</Link>)\n        } \n    }\n    return (\n      <List>\n        {props.profiles.map((profile) =>\n          <ListItem\n          title={profile.fullname}\n          subtitle=\"...\"\n          after={addLink(profile)}>\n          <img slot=\"media\" src={profile.avatar} width=\"27\" height=\"27\"/>\n          </ListItem>\n        )}\n      </List>\n    )\n  } else {\n    return (<ul></ul>)\n  }\n}\nexport default SimpleList;\n","import React from \"react\";\nimport { Toggle, AccordionContent, Card, CardHeader, CardContent, List, ListItem, CardFooter, ListInput, Col } from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\nimport Moment from 'react-moment';\nimport JDate from 'jalali-date';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\nimport InvolvementList from \"./involvementList\";\nimport SimpleList from \"../profiles/simpleList\";\n\nconst Partcipants = (props) => {\n    function editable() {\n        if (props.editable) {\n            return (\n                <List accordionList className='w-100'>\n                    <ListItem accordionItem className='fs-10' title={\"+ \" + dict.add}>\n                        <AccordionContent>\n                            <List simpleList>\n                                {props.task.groups.map((group) =>\n                                    <ListItem>\n                                        <span>{group.title}</span>\n                                        <Toggle onChange={(e) => props.addGroup(e,group.id)}/>\n                                    </ListItem>\n                                )}\n                            </List>\n                            <List >\n                                <ListInput\n                                    outline\n                                    label={dict.search}\n                                    floatingLabel\n                                    type=\"text\"\n                                    placeholder=\"\"\n                                    clearButton\n                                    onInput={(e) => {\n                                        props.searchProfile({ query: e.target.value })\n                                    }}\n                                />\n                            </List>\n                            <SimpleList profiles={props.profiles} addProfile={props.addProfile} />\n                        </AccordionContent>\n                    </ListItem>\n                </List>\n            )\n        }\n    }\n    if (props.task) {\n        return (\n            <Card>\n                <CardHeader>\n                    {dict.coworkers}\n                </CardHeader>\n                <CardContent className='mh-90'>\n                    <List>\n                        <InvolvementList\n                            involvements={props.task.the_involvements} removeProfile={props.removeProfile}\n                            changeRole={props.changeRole} editable={props.editable}\n                        />\n                    </List>\n                </CardContent>\n                <CardFooter>\n                    {editable()}\n                </CardFooter>\n            </Card>\n        )\n    } else {\n        return (<ul></ul>)\n    }\n}\nexport default Partcipants;\n","import React from \"react\";\nimport { List, ListItem, Link, Icon, Chip } from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\nimport Moment from 'react-moment';\nimport JDate from 'jalali-date';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\n\nconst SimpleList = (props) => {\n  if (props.statuses) {\n    function addLink(status) {\n      if (props.addStatus) {\n        return (<Link onClick={() => props.addStatus(status.id)}>{dict.select}</Link>)\n      }\n    }\n    return (\n      <List>\n        {props.statuses.map((status) =>\n          <ListItem\n            title={\n              <div className=\"chip\" >\n                <div className=\"chip-media\" style={{ backgroundColor: status.the_color }} >\n                  <i className=\"icon f7-icons if-not-md\">plus_circle</i>\n                  <i className=\"icon material-icons md-only\"></i>\n                </div>\n                <div className=\"chip-label\">{status.title}</div>\n              </div>}\n            after={addLink(status)}\n          />\n        )}\n      </List>\n    )\n  } else {\n    return (<ul></ul>)\n  }\n}\nexport default SimpleList;\n","import React from \"react\";\nimport { Block, AccordionContent, Icon, Chip, CardContent, List, ListItem, CardFooter, ListInput, Col } from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\nimport Moment from 'react-moment';\nimport JDate from 'jalali-date';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\nimport SimpleList from \"../statuses/simpleList\";\n\nconst Statuses = (props) => {\n    function chip(status){\n        if(status) {\n            return(\n                <div>\n                <div className=\"chip\" >\n                    <div className=\"chip-media\" style={{ backgroundColor: status.color }} >\n                        <i className=\"icon f7-icons if-not-md\">plus_circle</i>\n                        <i className=\"icon material-icons md-only\"></i>\n                    </div>\n                    <div className=\"chip-label\">{status.title}</div>\n                </div>\n            </div>\n            )\n        } else {\n        return(<div>{dict.add_stauts}</div>)\n        }\n    }\n    function editable() {\n        if (props.editable) {\n            return (\n                <AccordionContent>\n                <List >\n                    <ListInput\n                        outline\n                        label={dict.search}\n                        floatingLabel\n                        type=\"text\"\n                        placeholder=\"\"\n                        clearButton\n                        onInput={(e) => {\n                            props.searchStatus({ query: e.target.value })\n                        }}\n                    />\n                </List>\n                <SimpleList statuses={props.statuses} addStatus={props.addStatus} />\n            </AccordionContent>)\n        }\n    }\n    if (props.task) {\n        \n        return (\n            <List accordionList className='w-100'>\n                <ListItem accordionItem className='fs-10'\n                    title={chip(props.task.status)}\n                >\n                {editable()}\n                </ListItem>\n            </List>\n        )\n    } else {\n        return (<ul></ul>)\n    }\n}\nexport default Statuses;\n","import React from \"react\";\nimport { Searchbar, Card, CardHeader, Link, CardContent, List, ListItem, CardFooter, Row, Col } from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\nimport Moment from 'react-moment';\nimport JDate from 'jalali-date';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\n\nconst Works = (props) => {\n\n    function chip(work) {\n        var result = []\n\n        if (work.deadline_alert) {\n            result.push(\n                <span className='color-red ml-5'>\n                    <i class=\"fa fa-bell-o\" aria-hidden=\"true\"></i>\n                </span>\n            )\n        }\n\n        if (work.comment_alert) {\n            result.push(\n                <span className='color-green ml-5'>\n                    <i class=\"fa fa-comments-o \" aria-hidden=\"true\"></i>\n                </span>\n            )\n        }\n        if (work.report_alert) {\n            result.push(\n                <span className='color-blue ml-5'>\n                    <i class=\"fa fa-file-text-o \" aria-hidden=\"true\"></i>\n                </span>\n            )\n        }\n        if (work.status) {\n            result.push(\n\n                <div className=\"chip\" key={'work-status-chip' + work.id }>\n                    <div className=\"chip-media\" style={{ backgroundColor: work.status.color }} >\n                        <i className=\"icon f7-icons if-not-md\">plus_circle</i>\n                        <i className=\"icon material-icons md-only\"></i>\n                    </div>\n                    <div className=\"chip-label\">{work.status.title}</div>\n                </div>\n            )\n\n        } else {\n            result.push(<span className='mr-5'>{dict.add_stauts}</span>)\n        }\n        return (result)\n    }\n\n    function editable() {\n        if (props.editable) {\n            return (<Link href={'/works/new/' + props.task.id}><i className=\"ml-5 fa fa-plus\"></i> {dict.new}</Link>)\n        }\n    }\n\n    function title(work){        \n        return(<span>{work.title}</span>)\n    }\n\n    function text(work) {\n        var result = []\n        if (work.priority === 'high'){\n            result.push(<span className='va-2 fs-8 bg-yellow ml-10'>{dict[work.priority]}</span> )\n        }\n        if (work.priority === 'urgent'){\n            result.push(<span className='va-2 fs-8 bg-orange ml-10'>{dict[work.priority]}</span> )\n        }\n        result.push(<span  className='pd-5'>{work.details}</span>)\n        return(result)\n    }\n\n    if (props.task) {\n        return (\n            <Card>\n                <CardHeader>\n                    {dict.works}\n                    {editable()}\n                </CardHeader>\n                <CardContent>\n                    <List mediaList >\n                        {props.task.works.map((work) =>\n                            <ListItem\n                                key={'work'+work.id}\n                                className='fs-11 work-media'\n                                link={\"/works/\" + work.id}\n                                title={title(work)}\n                                after={chip(work)}\n                                text={text(work)}\n                            >\n                            </ListItem>\n                        )}\n                    </List>\n                </CardContent>\n                <CardFooter>\n\n                    <Searchbar\n                        className='p-static fs-10'\n                        disableButtonText={dict.cancel}\n                        placeholder={dict.search}\n                        inline={true}\n                    ></Searchbar>\n\n                </CardFooter>\n            </Card>\n        )\n    } else {\n        return (<ul></ul>)\n    }\n}\nexport default Works;\n","import React from \"react\";\nimport { Searchbar, Card, CardHeader, Link, CardContent, List, ListItem, CardFooter, ListInput, Col } from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\nimport Moment from 'react-moment';\nimport JDate from 'jalali-date';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\n\nconst Reports = (props) => {\n    if (props.task) {\n        function creation(t) {\n            var date = new Date(new window.ODate(t))\n            return (<Moment date={date} fromNow></Moment>)\n        }\n        function editable() {\n            if (props.editable) {\n                return (<Link href={'/reports/new/tasks/' + props.task.id}><i className=\"ml-5 fa fa-plus\"></i> {dict.new}</Link>)\n            }\n        }\n        return (\n            <Card>\n                <CardHeader>\n                    {dict.reports}\n                    {editable()}\n                </CardHeader>\n                <CardContent>\n                    <List mediaList >\n                        {props.task.reports.map((report) =>\n                            <ListItem\n                                key={'report' + report.id}\n                                className='fs-11 work-media'\n                                link={\"/reports/\" + report.id}\n                                title={report.title}\n                                after={creation(report.creation_date)}\n                                text={report.content}\n                            >\n                            </ListItem>\n                        )}\n                    </List>\n                </CardContent>\n                <CardFooter>\n                    <Searchbar\n                        className='p-static fs-10'\n                        disableButtonText={dict.cancel}\n                        placeholder={dict.search}\n                        inline={true}\n                    ></Searchbar>\n                </CardFooter>\n            </Card>\n        )\n    } else {\n        return (<ul></ul>)\n    }\n}\nexport default Reports;\n","import React from \"react\";\nimport { List, ListInput, BlockTitle, Block, Link, Button, Card, CardHeader, CardFooter } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport InputTrigger from 'react-input-trigger';\n\n\nconst CommentForm = (props) => {\n  return (\n    <Card>\n      <CardHeader>{dict.comment_form}</CardHeader>\n     <List >\n        <ListInput\n          label={dict.comment}\n          id=\"cm-form\"\n          type=\"textarea\"\n          placeholder='...'\n          maxlength='300'\n          resizable\n          clearButton={true}\n          onInput={(e) => {\n            props.handleChange({ commentContent: e.target.value })\n          }}\n        />\n        </List>\n      <CardFooter>\n        <Link></Link>\n        <Link className=\"btn-notice\"></Link>\n        <Button className=\"col btn\" fill onClick={props.submit}>{dict.submit}</Button>\n      </CardFooter>\n    </Card>\n  )\n}\nexport default CommentForm;\n","import React from \"react\";\nimport { List, ListItem, BlockTitle, Row, Link, Col } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport Moment from 'react-moment';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\n\nconst CommentList = (props) => {\n    var items = []\n    function editLink(comment) {\n        if (comment.editable) {\n            return (\n                <Link onClick={() => props.deleteCommentConfirm(comment.id)}>\n                    <i className=\"va ml-5 fa fa-trash\"></i>\n                </Link>\n            )\n        }\n    }\n    if (props.comments) {\n\n        for (let i = 0; i < props.comments.length; i++) {\n            var date = new Date(new window.ODate(props.comments[i].created_at))\n            var time =\n                <React.Fragment>\n                    {editLink(props.comments[i])}\n                    <Moment locale=\"fa\" fromNow ago>{date}</Moment>\n                    {dict.ago}\n                </React.Fragment>\n            items.push(\n                <ListItem\n                    key={'comment' + props.comments[i].id}\n                    className='fs-10'\n                    text={time}\n                    title={props.comments[i].profile.fullname + ':'}\n                    subtitle={props.comments[i].content}\n                >\n                    <img slot=\"media\" src={props.comments[i].profile.avatar} width=\"44\" height=\"44\" />\n                </ListItem>\n\n\n\n            )\n        }\n\n        return (\n            <React.Fragment>\n                <BlockTitle>{dict.comments}</BlockTitle>\n                <List mediaList inset>\n                    {items}\n                </List>\n                <Row noGap>\n                    <Col></Col>\n                    <Col className='center'>\n                        <a className=\"gray-color\" onClick={() => props.loadMore()}>\n                            {dict.more}\n                        </a>\n                    </Col>\n                    <Col></Col>\n                </Row>\n                <BlockTitle></BlockTitle>\n            </React.Fragment>\n        )\n    }\n    else {\n        return (<BlockTitle></BlockTitle>)\n    }\n}\nexport default CommentList;","import React from \"react\";\nimport { Block, AccordionContent, Card, Row, Col, CardHeader, CardContent, List, ListItem, Chip, Icon, CardFooter, BlockTitle, Link } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport Involvements from './involvements';\nimport Statuses from \"./status\";\nimport Works from \"./works\";\nimport Reports from \"./reports\";\nimport CommentForm from \"../comments/form\"\nimport CommentList from \"../comments/list\"\nimport 'moment-timezone';\nimport 'moment/locale/fa';\n\n\nconst TaskShow = (props) => {\n  if (props.task && props.access) {\n    function tags() {\n      var arr = []\n      props.task.the_tags.map((tag) =>\n        arr.push(<Chip key={'task-tag' + tag.id} text={tag.title} />)\n      )\n      return (arr)\n    }\n\n    function archived(){\n      if(props.task.archived){\n        return(\n          <Row>\n          <Col width='100' tabletWidth='100'>\n          <Card className='fs-11 card-orange'>\n            <CardContent>\n            <i class=\"ml-2 fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>\n            {dict.archived} <br/>\n            {props.task.archive_note}\n            </CardContent>\n            \n          </Card>\n          </Col>\n        </Row>\n        )\n      }\n\n    }\n\n    function isPublic() {\n      if (props.task.is_public) {\n        return (dict.public)\n      } else {\n        return (dict.private)\n      }\n    }\n\n    function access(segment) {\n      if (segment === 'statuses') {\n        var editable = false\n        if (props.access.includes('statuses')) {\n          editable = true\n        }\n        return (\n          <Statuses\n            task={props.task} searchStatus={props.searchStatus} editable={editable}\n            statuses={props.statuses} addStatus={props.addStatus}\n          />)\n      }\n\n      if (segment === 'involvements') {\n        var editable = false\n        if (props.access.includes('involvements')) {\n          editable = true\n        }\n        return (\n          <Involvements\n            task={props.task} searchProfile={props.searchProfile}\n            removeProfile={props.removeProfile} addProfile={props.addProfile}\n            profiles={props.profiles} changeRole={props.changeRole}\n            editable={editable} addGroup={props.addGroup}\n          />)\n      }\n\n\n      if (segment === 'works') {\n        var editable = false\n        if (props.access.includes('works')) {\n          editable = true\n        }\n        return (<Works task={props.task} editable={editable} ></Works>)\n      }\n\n      if (segment === 'reports') {\n        var editable = false\n        if (props.access.includes('reports')) {\n          editable = true\n        }\n        return (<Reports task={props.task} editable={editable} ></Reports>)\n      }\n\n      if (segment === 'comments') {\n        if (props.access.includes('comments')) {\n          return (\n            <CommentForm\n              model={props.task} submit={props.submitComment}\n              handleChange={props.handleChange} \n        \n             \n            />\n          )\n        }\n      }\n\n      if (segment === 'edit') {\n        if (props.access.includes('edit')) {\n          return (<Link href={'/tasks/' + props.task.id + '/edit'}><i className=\"ml-5 fa fa-cog\"></i></Link>)\n        }\n      }\n\n      if (segment === 'view') {\n        if (props.access.includes('view')) {\n          return (\n            <React.Fragment>\n              {archived()}\n              <Row>\n                <Col width='100' tabletWidth='50'>\n                  <Card>\n                    <CardHeader>\n                      {props.task.title}\n                      {access('edit')}\n                    </CardHeader>\n                    <CardContent>\n                      <List simple-list>\n                        <ListItem className='fs-11' title=''>{tags()}</ListItem>\n                        <ListItem className='fs-11' title=''>{isPublic()}</ListItem>\n                        <ListItem className='fs-11' title=''>{props.task.details}</ListItem>\n                      </List>\n\n                    </CardContent>\n                    <CardFooter>\n                      {access('statuses')}\n                    </CardFooter>\n                  </Card>\n                </Col>\n\n                <Col width='100' tabletWidth='50'>\n                  {access('involvements')}\n                </Col>\n              </Row>\n\n\n              <Row>\n                <Col width='100' tabletWidth='100'>\n                  {access('works')}\n                </Col>\n              </Row>\n\n              <Row>\n                <Col width='100' tabletWidth='100'>\n                  {access('reports')}\n                </Col>\n              </Row>\n\n              <BlockTitle>{dict.discussions}</BlockTitle>\n\n              {access('comments')}\n              <CommentList\n                comments={props.comments} deleteCommentConfirm={props.deleteCommentConfirm}\n                loadMore={props.loadMore} />\n\n\n            </React.Fragment>\n\n          )\n        }\n      }\n\n    }\n\n\n    return (<React.Fragment>{access('view')}</React.Fragment>)\n  } else {\n    return (null)\n  }\n}\nexport default TaskShow;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  Link,\n  Icon, Fab\n} from 'framework7-react';\nimport { dict } from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport TaskShow from \"../../containers/tasks/show\"\nimport { messaging } from \"../../init-fcm.js\";\n\nexport default class Layout extends Component {\n  constructor() {\n    super();\n    this.getInstance = this.getInstance.bind(this);\n    this.getList = this.getList.bind(this);\n    this.submit = this.submit.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.removeTask = this.removeTask.bind(this);\n    this.searchProfile = this.searchProfile.bind(this);\n    this.addProfile = this.addProfile.bind(this);\n    this.removeProfile = this.removeProfile.bind(this);\n    this.searchStatus = this.searchStatus.bind(this);\n    this.addStatus = this.addStatus.bind(this);\n    this.deleteComment = this.deleteComment.bind(this);\n    this.submitComment = this.submitComment.bind(this);\n    this.loadMore = this.loadMore.bind(this);\n    this.changeRole = this.changeRole.bind(this);\n    this.deleteCommentConfirm = this.deleteCommentConfirm.bind(this);\n    this.addGroup = this.addGroup.bind(this);\n    \n\n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      task: null,\n      id: null,\n      users: null,\n      assignedUsers: null,\n      user_id: null,\n      abilityTitle: '',\n      abilityValue: true,\n      ability: null,\n      comments: null,\n      works: null,\n      query: null,\n      profiles: [],\n      statuses: [],\n      access: [],\n      commentContent: '',\n\n    }\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.getInstance);\n    ModelStore.on(\"got_list\", this.getList);\n    ModelStore.on(\"deleted_instance\", this.getInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.getInstance);\n    ModelStore.removeListener(\"got_list\", this.getList);\n    ModelStore.removeListener(\"deleted_instance\", this.getInstance);\n  }\n\n  componentDidMount() {\n    MyActions.getInstance('tasks', this.$f7route.params['taskId'], this.state.token);\n  }\n\n  getInstance() {\n    var task = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (task && klass === 'Task') {\n      this.setState({\n        task: task,\n        id: task.id,\n        assignedUsers: task.users,\n        works: task.works,\n        comments: task.the_comments,\n        access: task.user_access\n      });\n    }\n    this.$$('.btn').show();\n  }\n\n\n  loadMore() {\n    this.setState({ page: this.state.page + 1 }, () => {\n      MyActions.getInstance('tasks', this.$f7route.params['taskId'], this.state.token, this.state.page);\n    });\n  }\n\n  getList() {\n    var list = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    if (list && klass === 'User') {\n      this.setState({\n        users: list,\n      });\n    }\n    if (list && klass === 'Profile') {\n      this.setState({\n        profiles: list,\n      });\n    }\n    if (list && klass === 'Status') {\n      this.setState({\n        statuses: list,\n      });\n    }\n  }\n\n  submit() {\n    this.$$('.btn').hide();\n    this.$$('.btn-notice').text(dict.submitting);\n    var data = { task_id: this.state.id, user_id: this.state.user_id }\n    MyActions.setInstance('users/assignments', data, this.state.token);\n  }\n\n  searchProfile(obj) {\n    this.setState({ profiles: [] });\n    this.setState(obj, () => {\n      MyActions.getList('profiles/search', this.state.page, { q: this.state.query });\n    });\n  }\n\n  searchStatus(obj) {\n    this.setState({ statuses: [] });\n    this.setState(obj, () => {\n      MyActions.getList('statuses/search', this.state.page, { q: this.state.query });\n    });\n  }\n\n  addProfile(profileId) {\n    var data = { id: this.state.id, profile_id: profileId }\n    MyActions.setInstance('tasks/involvements', data, this.state.token);\n  }\n\n  addStatus(statusId) {\n    var data = { id: this.state.id, status_id: statusId }\n    MyActions.setInstance('tasks/status', data, this.state.token);\n  }\n\n  removeProfile(profileId) {\n    var data = { id: this.state.id, profile_id: profileId }\n    MyActions.removeInstance('tasks/involvements', data, this.state.token);\n  }\n\n  changeRole(profile_id, role) {\n    var data = { id: this.state.id, profile_id: profile_id, role: role }\n    MyActions.setInstance('tasks/change_role', data, this.state.token);\n  }\n\n  submitComment() {\n    var data = { commentable_type: 'Task', commentable_id: this.state.id, content: this.state.commentContent }\n    MyActions.setInstance('comments', data, this.state.token);\n  }\n\n\n  deleteCommentConfirm(id) {\n    const self = this;\n    const app = self.$f7;\n    app.dialog.confirm(dict.are_you_sure, dict.alert, () => self.deleteComment(id))\n  }\n\n  deleteComment(id) {\n    var data = { id: id }\n    MyActions.removeInstance('comments', data, this.state.token, this.state.page);\n  }\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  fab() {\n    if (this.state.task) {\n      return (\n        <Fab href={\"/tasks/\" + this.state.task.id + \"/edit\"} target=\"#main-view\" position=\"left-bottom\" slot=\"fixed\" color=\"lime\">\n          <Icon ios=\"f7:edit\" aurora=\"f7:edit\" md=\"material:edit\"></Icon>\n          <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n        </Fab>\n      )\n    }\n  }\n\n\n\n  removeTask(user_id) {\n    MyActions.removeInstance('users/assignments', { user_id: user_id, task_id: this.state.id }, this.state.token);\n  }\n\n  addGroup(e, id) {\n    var data = { id: this.state.id, group_id: id }\n    if (e.target.checked) {\n      MyActions.setInstance('tasks/group_involvements', data, this.state.token);\n    } else {\n      MyActions.removeInstance('tasks/group_involvements', data, this.state.token);\n    }\n  }\n\n\n\n  render() {\n    const {\n      task, users, assignedUsers, ability,\n      profiles, statuses, works, commentContent,\n      comments, access, } = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.tasks} backLink={dict.back} backLinkForce={true}>\n          <Link panelOpen=\"right\">\n            <Icon f7=\"bars\"></Icon>\n          </Link>\n        </Navbar>\n        <TaskShow\n          task={task} users={users} ability={ability} profiles={profiles} statuses={statuses}\n          removeProfile={this.removeProfile} addProfile={this.addProfile}\n          searchProfile={this.searchProfile} removeAbility={this.removeAbility}\n          assignedUsers={assignedUsers} addAbility={this.addAbility}\n          removeTask={this.removeTask} submit={this.submit} handleChange={this.handleChangeValue}\n          searchStatus={this.searchStatus} addStatus={this.addStatus} works={works}\n          submitComment={this.submitComment} deleteCommentConfirm={this.deleteCommentConfirm}\n          commentContent={commentContent} comments={comments} loadMore={this.loadMore}\n          changeRole={this.changeRole} access={access} addGroup={this.addGroup}\n        />\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { Page, Navbar, Row, BlockTitle, Col, Fab, Icon, Card, Link } from 'framework7-react';\nimport TaskList from \"./list\"\nimport WorkList from \"./workList\"\nimport { dict } from '../../Dict';\n\nconst TaskIndex = (props) => {\n  function fab(a) {\n    if (props.ability) {\n      var result = []\n      props.ability.map((ab) => {\n        if (ab.title === a && ab.value) {\n          result.push(\n            <Fab href=\"/tasks/new\" target=\"#main-view\" position=\"left-bottom\" slot=\"fixed\" color=\"deeporange\">\n              <Icon ios=\"f7:add\" aurora=\"f7:add\" md=\"material:add\"></Icon>\n              <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n            </Fab>\n          )\n        }\n      })\n    }\n    return result\n  }\n  return (\n    <Page>\n      <Navbar title={dict.tasks} >\n        <Link panelOpen=\"right\">\n          <Icon f7=\"bars\"></Icon>\n        </Link>\n      </Navbar>\n      <BlockTitle>{dict.list}</BlockTitle>\n    {fab('create_task')}\n      <Row>\n        <Col width='100' tabletWidth='50'>\n          <Card>\n            <TaskList tasks={props.tasks} header={dict.your_tasks} sortChange={props.sortChange} />\n          </Card>\n        </Col>\n        <Col width='100' tabletWidth='50'>\n          <Card>\n            <WorkList works={props.works} header={dict.your_newest_works} sortChange={props.sortChange} />\n          </Card>\n        </Col>\n\n      </Row>\n\n    </Page>\n  )\n}\nexport default TaskIndex;\n","import React from \"react\"\nimport { Page,Fab, Icon } from 'framework7-react';\nimport ModelStore from \"../../stores/ModelStore\";\nimport TaskIndex from \"../../containers/tasks/index\"\nimport * as MyActions from \"../../actions/MyActions\";\nimport { dict} from '../../Dict';\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\n\nexport default class Layout extends React.Component {\n  constructor() {\n    super();\n    this.getList = this.getList.bind(this);\n    this.sortChange = this.sortChange.bind(this);\n    \n    this.state = {\n      token: window.localStorage.getItem('token'),\n      tasks: null,\n      works: null,\n      ability: null,\n    }\n  }\n  componentWillMount() {\n    ModelStore.on(\"got_list\", this.getList);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_list\", this.getList);\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  sortChange(i){\n    MyActions.getList('tasks', this.state.page, {order: i.title}, this.state.token);\n  }\n\n  loadData(){\n    const f7: Framework7 = Framework7.instance;\n    f7.toast.show({ text: dict.receiving, closeTimeout: 2000, position: 'top'});\n    MyActions.getList('tasks', this.state.page, {}, this.state.token);\n    MyActions.getList('works', this.state.page, {}, this.state.token);\n  }\n\n  getList() {\n    var list = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    if (list && klass === 'Task'){\n      this.setState({\n        tasks: list,\n        ability: list[0].ability\n      });\n    }\n    if (list && klass === 'Work'){\n      this.setState({\n        works: list,\n      });\n    }\n  }\n\n  render() {\n    const {tasks, works, ability} = this.state;\n    return(<TaskIndex tasks={tasks} ability={ability} works={works} sortChange={this.sortChange}/>)\n  }\n}\n","import React from \"react\";\nimport { List, Chip, ListInput, Block, Row, Button, BlockTitle, Card, ListItem, Col, Link } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport crypto from 'crypto-js';\n\n\nconst TaskForm = (props) => {\n  if (props.isPublic) {\n    var isPublicTask = true;\n  } else {\n    var isPublicTask = false;\n  }\n  function tags() {\n    if (props.tags) {\n      var chips = [\n        <div>\n          <a className='fs-11 ' href=\"#\" id='autocomplete-standalone-ajax'>\n            <div className=\"item-title fs-11\">\n              <i className=\"va-minus-2 ml-5 fa fa-plus\"></i>\n              {dict.tags}:\n        </div>\n          </a>\n        </div>]\n      props.tags.map((tag) =>\n        chips.push(<Chip text={tag.title} deleteable onClick={() => props.removeTag(tag.id)} />)\n      )\n      return chips\n    }\n  }\n\n  function deleteButton() {\n    if (props.editing) {\n      return (\n        <Col>\n          <Button className=\"col btn ml-5\" outline color='red' disabled={!props.editing} onClick={() => props.deleteTaskConfirm()}>{dict.delete}</Button>\n        </Col>\n      )\n    }\n  }\n\n  function archive() {\n    if (props.editing) {\n      return (\n        <List>\n          <ListItem checkbox value={props.archived} checked={props.archived} title={dict.archived}\n            onChange={(e) => {\n              props.handleChange({ archived: !JSON.parse(e.target.value) })\n            }}\n          ></ListItem>\n          <ListInput\n            label={dict.archive_note}\n            type=\"textarea\"\n            placeholder={dict.write_archive_note}\n            value={props.archiveNote}\n            onInput={(e) => {\n              props.handleChange({ archiveNote: e.target.value })\n            }}\n          />\n\n        </List>)\n    }\n\n  }\n  return (\n    <Card>\n      <BlockTitle>{dict.task}</BlockTitle>\n      <List >\n        <ListInput\n          label={dict.title}\n          type=\"text\"\n          placeholder={dict.select_appropriate_title}\n          defaultValue={props.task.title}\n          required={true}\n          onInput={(e) => {\n            props.handleChange({ title: e.target.value })\n          }}\n        />\n\n        <ListInput\n          label={dict.details}\n          type=\"textarea\"\n          placeholder={dict.write_appropriate_description}\n          value={props.details}\n          onInput={(e) => {\n            props.handleChange({ details: e.target.value })\n          }}\n        />\n\n        <ListItem radio value={false} checked={!isPublicTask} name=\"selectedMode\" title={dict.private}\n          onChange={(e) => {\n            console.log(e)\n            props.handleChange({ isPublic: JSON.parse(e.target.value) });\n          }}>\n        </ListItem>\n        <ListItem radio value={true} checked={isPublicTask} name=\"selectedMode\" title={dict.public}\n          onChange={(e) => {\n            console.log(e)\n            props.handleChange({ isPublic: JSON.parse(e.target.value) })\n          }}>\n        </ListItem>\n\n\n        <ListItem title={tags()}></ListItem>\n\n      </List>\n\n      {archive()}\n\n      <Block strong>\n        <Row tag=\"p\">\n          {deleteButton()}\n          <Col>\n            <Link className=\"btn-notice\"></Link>\n            <Button className=\"col btn\" fill onClick={props.submit}>{dict.submit}</Button>\n          </Col>\n        </Row>\n      </Block>\n    </Card >\n\n  )\n}\nexport default TaskForm;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  BlockTitle,\n} from 'framework7-react';\nimport { dict } from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport TaskForm from \"../../containers/tasks/form\"\nimport { conf } from '../../conf';\n\nexport default class TaskCreate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.loadTags = this.loadTags.bind(this);\n    this.pageAfterIn = this.pageAfterIn.bind(this);\n    this.removeTag = this.removeTag.bind(this);\n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      task: {},\n      title: null,\n      details: null,\n      deadline: new Date(),\n      start: new Date(),\n      startTime: '0:00',\n      deadlineTime: '0:00',\n      privateTask: true,\n      tags: [],\n      isPublic: false,\n    }\n  }\n\n\n  componentWillMount() {\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n  }\n\n  loadTags() {\n    const self = this;\n    const app = self.$f7;\n\n    app.autocomplete.create({\n      openIn: 'popup', //open in page\n      openerEl: '#autocomplete-standalone-ajax', //link that opens autocomplete\n      multiple: true, //allow multiple values\n      valueProperty: 'id', //object's \"value\" property name\n      textProperty: 'title', //object's \"text\" property name\n      searchbarDisableText: dict.cancel,\n      popupCloseLinkText: dict.close,\n      notFoundText: dict.not_found,\n      limit: 50,\n      searchbarPlaceholder: dict.search,\n      preloader: true, //enable preloader\n      source: function (query, render) {\n        var autocomplete = this;\n        var results = [];\n        if (query.length === 0) {\n          render(results);\n          return;\n        }\n        // Show Preloader\n        autocomplete.preloaderShow();\n        // Do Ajax request to Autocomplete data\n        app.request({\n          url: conf.server + '/tags/search',\n          method: 'GET',\n          dataType: 'json',\n          //send \"query\" to server. Useful in case you generate response dynamically\n          data: {\n            q: query\n          },\n          success: function (item) {\n            // Find matched items\n            for (var i = 0; i < item.data.length; i++) {\n              if (item.data[i].title.indexOf(query) >= 0) results.push(item.data[i]);\n            }\n            // Hide Preoloader\n            autocomplete.preloaderHide();\n            // Render items by passing array with result items\n            render(results);\n          }\n        });\n      },\n      on: {\n        change: function (value) {\n          if (value && value[value.length - 1]) {\n            self.setState({ tags: self.state.tags.concat({ title: value[value.length - 1].title, id: value[value.length - 1].id }) })\n          }\n        },\n      },\n    });\n  }\n\n  pageAfterIn() {\n    this.loadTags();\n  }\n\n  submit() {\n    this.$$('.btn').hide();\n    this.$$('.btn-notice').text(dict.submitting);\n    var data = {\n      title: this.state.title, public: this.state.isPublic,\n      details: this.state.details, tags: this.state.tags\n    }\n    if (this.state.title && this.state.title.length > 0) {\n      MyActions.setInstance('tasks', data, this.state.token);\n    } else {\n      const self = this;\n      self.$f7.dialog.alert(dict.incomplete_data, dict.alert);\n    }\n\n  }\n\n  removeTag(id) {\n    this.setState({\n      tags: this.state.tags.filter(function (tag) {\n        return tag.id !== id\n      })\n    });\n  }\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  setInstance() {\n    this.$$('.btn').show();\n    this.$f7router.navigate('/tasks/');\n  }\n\n\n\n  render() {\n    const { task, tags, isPublic } = this.state;\n    return (\n      <Page onPageAfterIn={this.pageAfterIn.bind(this)} backLink={dict.back} backLinkForce={true}>\n        <Navbar title={dict.task_form} backLink={dict.back} />\n        <BlockTitle>{dict.task_form}</BlockTitle>\n        <TaskForm\n          task={task} removeTag={this.removeTag} tags={tags} isPublic={isPublic}\n          submit={this.submit} editing={false} handleChange={this.handleChangeValue} />\n      </Page>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon\n} from 'framework7-react';\nimport { dict } from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport TaskForm from \"../../containers/tasks/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\nimport { conf } from '../../conf';\n\nexport default class DocumentUpdate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.getInstance = this.getInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.pageAfterIn = this.pageAfterIn.bind(this);\n    this.loadTags = this.loadTags.bind(this);\n    this.removeTag = this.removeTag.bind(this);\n    this.deleteTaskConfirm = this.deleteTaskConfirm.bind(this);\n    this.deleteTask = this.deleteTask.bind(this);\n    this.deleteInstance = this.deleteInstance.bind(this);\n\n     \n    this.state = {\n      token: window.localStorage.getItem('token'),\n      task: {},\n      id: null,\n      title: null,\n      details: null,\n      privateTask: true,\n      details: null,\n      tags: [],\n      isPublic: false,\n      selectedMode: false,\n      archived: false,\n      archiveNote: null,\n    }\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.setInstance);\n    ModelStore.on(\"deleted_instance\", this.deleteInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n    ModelStore.removeListener(\"deleted_instance\", this.deleteInstance);\n\n  }\n\n  pageAfterIn() {\n    this.loadTags();\n  }\n\n  loadTags() {\n    const self = this;\n    const app = self.$f7;\n\n    app.autocomplete.create({\n      openIn: 'popup', //open in page\n      openerEl: '#autocomplete-standalone-ajax', //link that opens autocomplete\n      multiple: true, //allow multiple values\n      valueProperty: 'id', //object's \"value\" property name\n      textProperty: 'title', //object's \"text\" property name\n      limit: 50,\n      searchbarPlaceholder: dict.search,\n      searchbarDisableText: dict.cancel,\n      popupCloseLinkText: dict.close,\n      notFoundText: dict.not_found,\n      preloader: true, //enable preloader\n      source: function (query, render) {\n        var autocomplete = this;\n        var results = [];\n        if (query.length === 0) {\n          render(results);\n          return;\n        }\n        // Show Preloader\n        autocomplete.preloaderShow();\n        // Do Ajax request to Autocomplete data\n        app.request({\n          url: conf.server + '/tags/search',\n          method: 'GET',\n          dataType: 'json',\n          //send \"query\" to server. Useful in case you generate response dynamically\n          data: {\n            q: query\n          },\n          success: function (item) {\n            // Find matched items\n            for (var i = 0; i < item.data.length; i++) {\n              if (item.data[i].title.indexOf(query) >= 0) results.push(item.data[i]);\n            }\n            // Hide Preoloader\n            autocomplete.preloaderHide();\n            // Render items by passing array with result items\n            render(results);\n          }\n        });\n      },\n      on: {\n        change: function (value) {\n          if (value && value[value.length - 1]) {\n            self.setState({ tags: self.state.tags.concat({ title: value[value.length - 1].title, id: value[value.length - 1].id }) })\n          }\n        },\n      },\n    });\n  }\n\n\n\n  submit() {\n    this.$$('.btn').hide();\n    this.$$('.btn-notice').text(dict.submitting);\n    var data = {\n      id: this.state.id, title: this.state.title, public: this.state.isPublic,\n      details: this.state.details, tags: this.state.tags, archive_note: this.state.archiveNote,\n      archived: this.state.archived\n    }\n    if (this.state.title && this.state.title.length > 0) {\n      MyActions.updateInstance('tasks', data, this.state.token);\n    } else {\n      const self = this;\n      self.$f7.dialog.alert(dict.incomplete_data, dict.alert);\n    }\n\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  loadData() {\n    const f7: Framework7 = Framework7.instance;\n    f7.toast.show({ text: dict.receiving, closeTimeout: 2000, position: 'top' });\n    if (this.$f7route.params['taskId']) {\n      MyActions.getInstance('tasks', this.$f7route.params['taskId'], this.state.token);\n    }\n  }\n\n\n  getInstance() {\n    var task = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (task && klass === 'Task') {\n      this.setState({\n        title: task.title,\n        details: task.details,\n        id: task.id,\n        task: task,\n        defaultTask: task.default_task,\n        tags: task.the_tags,\n        isPublic: task.is_public,\n        archived: task.archived, \n        archiveNote: task.archive_note, \n      }, () => this.loadTags());\n    }\n\n  }\n\n  removeTag(id) {\n    this.setState({\n      tags: this.state.tags.filter(function (tag) {\n        return tag.id !== id\n      })\n    });\n  }\n\n  handleChangeValue(obj) {\n    console.log(obj)\n    this.setState(obj);\n  }\n\n  deleteTaskConfirm(){\n    const self = this;\n    const app = self.$f7;\n    app.dialog.confirm(dict.are_you_sure, dict.alert, self.deleteTask)\n  }\n\n  deleteTask(){\n    var data = { id: this.state.id}\n    MyActions.removeInstance('tasks', data, this.state.token);\n  }\n\n\n  deleteInstance() {\n    this.$f7router.navigate('/tasks/');\n  }\n\n\n  setInstance() {\n    var task = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (task && klass === 'Task') {\n      this.$$('.btn').show();\n      this.$f7router.navigate('/tasks/' + task.id);\n    }\n  }\n\n\n  render() {\n    const { task, defaultTask, title, details, isPublic, tags, selectedMode, archived, archiveNote } = this.state;\n    return (\n      <Page onPageAfterIn={this.pageAfterIn.bind(this)} backLink={dict.back} backLinkForce={true}>\n        <Navbar title={dict.task_form} backLink={dict.back} />\n        <BlockTitle>{dict.task_form}</BlockTitle>\n        <TaskForm\n          task={task} title={title} isPublic={isPublic}\n          tags={tags} removeTag={this.removeTag} selectedMode={selectedMode}\n          details={details} defaultTask={defaultTask} submit={this.submit}\n          editing={true} handleChange={this.handleChangeValue}\n          deleteTaskConfirm={this.deleteTaskConfirm}\n          archived={archived} archiveNote={archiveNote}\n          />\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { List, ListItem, Link } from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\nimport Moment from 'react-moment';\nimport JDate from 'jalali-date';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\n\nconst InvolvementList = (props) => {\n\n  if (props.involvements) {\n    function removeLink(involvement){\n      if (involvement.role !== 'Creator' && props.editable){\n        return(<Link className=\"mt-4\" onClick={() => props.removeProfile(involvement.profile.id)}>{dict.remove}</Link>)\n      }\n    }\n\n    function select(involvement) {\n      if (involvement.role !== 'Creator' && props.editable) {\n        return (\n          <select name=\"role\" onChange={(e) => { props.changeRole(involvement.profile.id, e.target.value) }}>\n            {option('Admin', involvement)}\n            {option('Confirmer', involvement)}\n            {option('Colleague', involvement)}\n            {option('Observer', involvement)}\n          </select>\n        )\n      }\n    }\n    function option(role, involvement) {\n      var selected = false\n      if (involvement.role == role) {\n        selected = true\n      }\n      return (<option value={role} selected={selected}>{dict[role]}</option>)\n    }\n    function addLink(involvement) {\n      if (props.removeProfile) {\n        return (\n          <div className='inline'>\n             {removeLink(involvement)}\n            <a className=\" fs-10 smart-select smart-select-init\" data-open-in=\"popover\">\n              {select(involvement)}\n              <div className=\"item-content\">\n                <div className=\"item-inner bg-w-after\">\n                  <div className=\"item-title\">{dict.role}</div>\n                  <div className=\"item-after mt-2\">{dict[involvement.role]}</div>\n                </div>\n              </div>\n            </a>\n          </div>\n        )\n      }\n    }\n    return (\n      <List className='fs-11'>\n        {props.involvements.map((involvement) =>\n          <ListItem\n            key={'involvement' + involvement.profile.id}\n            title={involvement.profile.fullname}\n            after={addLink(involvement)}>\n            <img slot=\"media\" src={involvement.profile.avatar} width=\"27\" height=\"27\" />\n          </ListItem>\n        )}\n      </List>\n    )\n  } else {\n    return (<ul></ul>)\n  }\n}\nexport default InvolvementList;\n","import React from \"react\";\nimport { Link, AccordionContent, Card, CardHeader, CardContent, List, ListItem, CardFooter, ListInput, Col } from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\nimport Moment from 'react-moment';\nimport JDate from 'jalali-date';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\nimport InvolvementList from \"./involvementList\";\nimport  SimpleList from \"../profiles/simpleList\";\n\nconst Partcipants = (props) => {\n    function editable() {\n        if (props.editable) {\n            return (\n                <List accordionList className='w-100'>\n                <ListItem accordionItem className='fs-10' title={\"+ \" + dict.add}>\n                    <AccordionContent>\n                        <List >\n                            <ListInput\n                                outline\n                                label={dict.search}\n                                floatingLabel\n                                type=\"text\"\n                                placeholder=\"\"\n                                clearButton\n                                onInput={(e) => {\n                                    props.searchProfile({ query: e.target.value })\n                                  }}\n                            />\n                        </List>\n                        <SimpleList profiles={props.profiles} addProfile={props.addProfile}  />\n                    </AccordionContent>\n                </ListItem>\n            </List>\n                )\n        }\n    }\n    if (props.work) {\n        return (\n            <Card>\n                <CardHeader>\n                    {dict.coworkers}\n                </CardHeader>\n                <CardContent className='mh-90'>\n                    <List>\n                        <InvolvementList \n                            involvements={props.work.the_involvements} removeProfile={props.removeProfile} \n                            changeRole={props.changeRole} editable={props.editable} />\n                    </List>\n                </CardContent>\n                <CardFooter>\n                    {editable()}\n                </CardFooter>\n            </Card>\n        )\n    } else {\n        return (<ul></ul>)\n    }\n}\nexport default Partcipants;\n","import React from \"react\";\nimport { Block, AccordionContent, Icon, Chip, CardContent, List, ListItem, CardFooter, ListInput, Col } from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\nimport Moment from 'react-moment';\nimport JDate from 'jalali-date';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\nimport SimpleList from \"../statuses/simpleList\";\n\nconst Statuses = (props) => {\n    function chip(status) {\n        if (status) {\n            return (\n                <div>\n                    <div className=\"chip\" >\n                        <div className=\"chip-media\" style={{ backgroundColor: status.color }} >\n                            <i className=\"icon f7-icons if-not-md\">plus_circle</i>\n                            <i className=\"icon material-icons md-only\"></i>\n                        </div>\n                        <div className=\"chip-label\">{status.title}</div>\n                    </div>\n                </div>\n            )\n        } else {\n            return (<div>{dict.add_stauts}</div>)\n        }\n    }\n    function editable() {\n        if (props.editable) {\n            return (\n                <AccordionContent>\n                    <List >\n                        <ListInput\n                            outline\n                            label={dict.search}\n                            floatingLabel\n                            type=\"text\"\n                            placeholder=\"\"\n                            clearButton\n                            onInput={(e) => {\n                                props.searchStatus({ query: e.target.value })\n                            }}\n                        />\n                    </List>\n                    <SimpleList statuses={props.statuses} addStatus={props.addStatus} />\n                </AccordionContent>)\n        }\n    }\n    if (props.work) {\n\n        return (\n            <List accordionList className='w-100'>\n                <ListItem accordionItem className='fs-10'\n                    key={'status' + props.work.id}\n                    title={chip(props.work.status)}\n                >\n                    {editable()}\n                </ListItem>\n            </List>\n        )\n    } else {\n        return (<ul></ul>)\n    }\n}\nexport default Statuses;\n","import React from \"react\";\nimport { Block, Card, CardHeader, Link, CardContent, List, ListItem, CardFooter, ListInput, Col } from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\nimport Moment from 'react-moment';\nimport JDate from 'jalali-date';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\n\nconst Reports = (props) => {\n    if (props.work) {\n        function creation(t) {\n            var date = new Date(new window.ODate(t))\n            return(<Moment date={date} fromNow></Moment>)\n        }\n        function editable() {\n            if (props.editable) {\n                return ( <Link href={'/reports/new/works/' + props.work.id}><i className=\"ml-5 fa fa-plus\"></i> {dict.new}</Link>)\n            }\n        }\n        return (\n            <Card>\n                <CardHeader>\n                    {dict.reports}\n                    {editable()}\n                </CardHeader>\n                <CardContent>\n                    <List mediaList >\n                        {props.work.reports.map((report) =>\n                            <ListItem\n                                key={'report' + report.id}\n                                className='fs-11 work-media'\n                                link={\"/reports/\" + report.id}\n                                title={report.title}\n                                after={creation(report.creation_date)}\n                                text={report.content}\n                            >\n                            </ListItem>\n                        )}\n                    </List>\n                </CardContent>\n                <CardFooter>\n                    +\n              </CardFooter>\n            </Card>\n        )\n    } else {\n        return (<ul></ul>)\n    }\n}\nexport default Reports;\n","import React from \"react\";\nimport { List, ListItem, Chip, Link } from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\nimport Moment from 'react-moment';\nimport JDate from 'jalali-date';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\n\nconst TodosInvolvementsList = (props) => {\n\n  function addInvolvements(todo) {\n    var chips = []\n    todo.involvements.map((involvement) =>\n      chips.push(<Chip key={'chip' + '-' + todo.id + '-' + involvement.profile.id} className=\"ml-5\" text={involvement.profile.fullname} />)\n    )\n    if (props.editable) {\n      chips.push(<Link key={'todoEdit' + todo.id} href={'/todos/' + todo.id + '/edit'}><i className=\"ml-5 fa fa-edit\"></i></Link>)\n      chips.push(<Link key={'todoDelete' + todo.id} onClick={() => props.deleteTodoConfirm(todo.id)}><i className=\"ml-5 fa fa-trash\"></i></Link>)\n    }\n\n    return (chips)\n\n  }\n  function lt(todo) {\n    if (todo.check) {\n      return ('of-scroll line-through ')\n    } else {\n      return ('of-scroll')\n    }\n  }\n  if (props.todos) {\n    return (\n      <List className='fs-11 ' >\n        {props.todos.map((todo) =>\n\n          <li className={lt(todo)} key={'todo' + todo.id}>\n            <label className=\"item-content item-checkbox\">\n              <input type=\"checkbox\" value=\"\" checked={todo.check} onChange={(e) => props.todoChecked(todo.id, e)}></input>\n              <i className=\"icon icon-checkbox\"></i>\n              <div className=\"item-inner of-scroll\">\n                <div className=\"item-title of-visible mw-auto\">{todo.title}</div>\n                <div className=\"item-after\">\n                  <span>\n                    {addInvolvements(todo)}\n                  </span>\n                </div>\n              </div>\n            </label>\n          </li>\n        )}\n      </List>\n\n    )\n  } else {\n    return (<ul></ul>)\n  }\n}\nexport default TodosInvolvementsList;\n        /*<ListItem\nclassName={lt(todo)}\ncheckbox\nchecked={todo.check}\nonChange={(e) => props.todoChecked(todo.id,e)}\ntitle={todo.title}\nafter={addInvolvements(todo)}>\n</ListItem>*/","import React from \"react\";\nimport { List, ListItem, ListInput, Block, Row, Button, Link, Col } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport crypto from 'crypto-js';\n\n\nconst TodoForm = (props) => {\n  if (true) {\n    function involvementChecked(workInvolvement) {\n      var flag = false\n      props.involvements.map((involvement) => {\n        if (involvement.id === workInvolvement.profile.id) {\n          flag = true\n        }\n      }\n      )\n      return flag\n    }\n    return (\n      <List>\n        <ListInput\n          key='todos-form-title'\n          label={dict.title}\n          type=\"text\"\n          placeholder={dict.select_appropriate_title}\n          defaultValue={props.title}\n          required={true}\n          onInput={(e) => {\n            props.handleChange({ title: e.target.value })\n          }}\n        />\n\n        <List className='fs-11 ' >\n          {props.workInvolvements.map((workInvolvement) =>\n            <ListItem\n              key={workInvolvement.id}\n              checkbox\n              checked={involvementChecked(workInvolvement)}\n              onChange={(e) => props.involvementCheck(workInvolvement.profile.id, e)}\n              title={workInvolvement.profile.fullname}\n              after=''>\n            </ListItem>\n\n          )}\n        </List>\n\n\n\n        <Block strong>\n          <Row tag=\"p\">\n            <Col>\n            <Link className=\"btn-notice\"></Link>\n              <Button className=\"col btn\" fill disabled={!props.editing} onClick={props.submit}>{dict.submit}</Button>\n            </Col>\n          </Row>\n        </Block>\n      </List>\n    )\n  } else {\n    return (null)\n  }\n\n}\nexport default TodoForm;\n","import React from \"react\";\nimport { Link, AccordionContent, Card, CardHeader, CardContent, List, ListItem, CardFooter, ListInput, Button } from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\nimport Moment from 'react-moment';\nimport JDate from 'jalali-date';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\nimport TodosInvolvementsList from \"./todosInvolvementList\";\nimport  SimpleList from \"../profiles/simpleList\";\nimport  TodoForm from \"./form\";\n\nconst TodoList = (props) => {\n    if (props.work) {\n        function editable() {\n            if (props.editable) {\n                return ( <Link href={'/todos/new/' + props.work.id}><i className=\"ml-5 fa fa-plus\"></i> {dict.new}</Link>)\n            }\n        }\n        return (\n            <Card className='bg-gray'>\n                <CardHeader>\n                    {dict.todo_list}\n                    {editable()}\n                </CardHeader>\n                <CardContent>\n                    <List>\n                        <TodosInvolvementsList \n                        todos={props.todos} todoChecked={props.todoChecked} \n                        deleteTodoConfirm={props.deleteTodoConfirm} editable={props.editable}\n                        />\n                    </List>\n                </CardContent>\n                <CardFooter>\n                    \n                </CardFooter>\n            </Card>\n        )\n    } else {\n        return (<ul></ul>)\n    }\n}\nexport default TodoList;\n","import React from \"react\";\nimport { Block, AccordionContent, Card, Row, Col, CardHeader, CardContent, List, ListItem, Chip, Icon, CardFooter, BlockTitle, Link } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport Involvements from './involvements';\nimport Statuses from \"./status\";\nimport Reports from \"./reports\";\nimport Moment from 'react-moment';\nimport JDate from 'jalali-date';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\nimport CommentForm from \"../comments/form\"\nimport CommentList from \"../comments/list\"\nimport TodoList from \"../todos/list\"\n\nconst WorkShow = (props) => {\nconsole.log(props.work)\n  function archived(){\n    if(props.work.archived){\n      return(\n        <Row>\n        <Col width='100' tabletWidth='100'>\n        <Card className='fs-11 card-orange'>\n          <CardContent>\n          <i class=\"ml-2 fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>\n          {dict.archived} <br/>\n          {props.work.task.archive_note}\n          </CardContent>\n          \n        </Card>\n        </Col>\n      </Row>\n      )\n    }\n\n  }\n\n  function access(segment) {\n    if (segment === 'statuses') {\n      var editable = false\n      if (props.access.includes('statuses')) {\n        editable = true\n      }\n      return (\n        <Statuses\n          work={props.work} searchStatus={props.searchStatus} editable={editable}\n          statuses={props.statuses} addStatus={props.addStatus}\n        />\n      )\n    }\n\n    if (segment === 'involvements') {\n      var editable = false\n      if (props.access.includes('involvements')) {\n        editable = true\n      }\n      return (\n        <Involvements\n          work={props.work} searchProfile={props.searchProfile}\n          removeProfile={props.removeProfile} addProfile={props.addProfile}\n          profiles={props.profiles} changeRole={props.changeRole}\n          editable={editable} />\n      )\n    }\n\n    if (segment === 'todos') {\n      var editable = false\n      if (props.access.includes('todos')) {\n        editable = true\n      }\n      return (\n        <TodoList \n        work={props.work} todos={props.todos} \n        editable={editable} todoChecked={props.todoChecked}\n        deleteTodoConfirm={props.deleteTodoConfirm}\n        />\n      )\n    }\n\n\n    if (segment === 'reports') {\n      var editable = false\n      if (props.access.includes('reports')) {\n        editable = true\n      }\n      return (<Reports work={props.work} editable={editable} ></Reports>)\n    }\n\n    if (segment === 'comments') {\n      if (props.access.includes('comments')) {\n        return (<CommentForm model={props.work} submit={props.submitComment} handleChange={props.handleChange} />)\n      }\n    }\n\n    if (segment === 'edit') {\n      if (props.access.includes('edit')) {\n        return (<Link href={'/works/' + props.work.id + '/edit'}><i className=\"ml-5 fa fa-cog\"></i></Link>)\n      }\n    }\n\n\n    if (segment === 'view') {\n      if (props.access.includes('view')) {\n        return (\n          <React.Fragment>\n            {archived()}\n            <Row>\n              <Col width='100' tabletWidth='50'>\n                <Card>\n                  <CardHeader>\n                    {props.work.title}\n                    {access('edit')}\n                  </CardHeader>\n                  <CardContent>\n                    <List simple-list>\n                      <ListItem className='fs-11' title={dict.task + ': ' + props.work.task.title} href={'/tasks/' + props.work.task.id}></ListItem>\n                      <ListItem className='fs-11' title={dict.start_date + ': ' + props.work.start_date_j}></ListItem>\n                      <ListItem className='fs-11' title={dict.deadline + ': ' + props.work.deadline_date_j}></ListItem>\n\n                      <ListItem className='fs-11' title=''></ListItem>\n                    </List>\n                    <span className='fs-11'>{props.work.details}</span>\n\n                  </CardContent>\n                  <CardFooter>\n                    {access('statuses')}\n                  </CardFooter>\n                </Card>\n              </Col>\n\n              <Col width='100' tabletWidth='50'>\n                {access('involvements')}\n              </Col>\n            </Row>\n\n            <Row>\n              <Col width='100' tabletWidth='100'>\n                {access('todos')}\n              </Col>\n            </Row>\n\n            <Row>\n              <Col width='100' tabletWidth='100'>\n                {access('reports')}\n              </Col>\n            </Row>\n            {access('comments')}\n\n            <CommentList comments={props.comments} deleteCommentConfirm={props.deleteCommentConfirm}  />\n\n          </React.Fragment>\n        )\n      }\n    }\n\n  }\n\n  if (props.work && props.access) {\n    return (<React.Fragment>{access('view')}</React.Fragment>)\n  } else {\n    return (null)\n  }\n}\nexport default WorkShow;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  Link,\n  Icon, Fab\n} from 'framework7-react';\nimport { dict } from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport WorkShow from \"../../containers/works/show\"\n\nexport default class Layout extends Component {\n  constructor() {\n    super();\n    this.getInstance = this.getInstance.bind(this);\n    this.getList = this.getList.bind(this);\n    this.submit = this.submit.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.removeWork = this.removeWork.bind(this);\n    this.addAbility = this.addAbility.bind(this);\n    this.removeAbility = this.removeAbility.bind(this);\n    this.searchProfile = this.searchProfile.bind(this);\n    this.addProfile = this.addProfile.bind(this);\n    this.removeProfile = this.removeProfile.bind(this);\n    this.searchStatus = this.searchStatus.bind(this);\n    this.addStatus = this.addStatus.bind(this);\n    this.deleteComment = this.deleteComment.bind(this);\n    this.deleteCommentConfirm = this.deleteCommentConfirm.bind(this);\n    this.submitComment = this.submitComment.bind(this);\n    this.loadMore = this.loadMore.bind(this);\n    this.changeRole = this.changeRole.bind(this);\n    this.todoChecked = this.todoChecked.bind(this);\n    this.deleteTodoConfirm = this.deleteTodoConfirm.bind(this);\n    this.deleteTodo = this.deleteTodo.bind(this);\n    \n    \n    \n    this.state = {\n      token: window.localStorage.getItem('token'),\n      work: null,\n      id: null,\n      users: null,\n      assignedUsers: null,\n      user_id: null,\n      abilityTitle: '',\n      abilityValue: true,\n      ability: null,\n      query: null,\n      profiles: [],\n      statuses: [],\n      commentContent: '',\n      access: null,\n      comments: null,\n      todos: [],\n    }\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.getInstance);\n    ModelStore.on(\"got_list\", this.getList);\n    ModelStore.on(\"deleted_instance\", this.getInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.getInstance);\n    ModelStore.removeListener(\"got_list\", this.getList);\n    ModelStore.removeListener(\"deleted_instance\", this.getInstance);\n  }\n\n  componentDidMount() {\n    MyActions.getInstance('works', this.$f7route.params['workId'], this.state.token);\n  }\n\n  getInstance() {\n    var work = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (work && klass === 'Work') {\n      this.setState({\n        work: work,\n        id: work.id,\n        assignedUsers: work.users,\n        ability: work.ability,\n        comments: work.the_comments,\n        access: work.user_access,\n        todos: work.the_todos,\n        //involvementss: work.the_involvementss\n      });\n    }\n    this.$$('.btn').show();\n  }\n\n  getList() {\n    var list = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    if (list && klass === 'User') {\n      this.setState({\n        users: list,\n      });\n    }\n    if (list && klass === 'Profile') {\n      this.setState({\n        profiles: list,\n      });\n    }\n    if (list && klass === 'Status') {\n      this.setState({\n        statuses: list,\n      });\n    }\n  }\n\n  submit() {\n    this.$$('.btn').hide();\n    this.$$('.btn-notice').text(dict.submitting);\n    var data = { work_id: this.state.id, user_id: this.state.user_id }\n    MyActions.setInstance('users/assignments', data, this.state.token);\n  }\n\n  searchProfile(obj){\n    this.setState({ profiles: []});\n    this.setState(obj, () => {\n      MyActions.getList('profiles/search', this.state.page, {q: this.state.query});\n  });  \n  }\n\n  searchStatus(obj){\n    this.setState({ statuses: []});\n    this.setState(obj, () => {\n      MyActions.getList('statuses/search', this.state.page, {q: this.state.query});\n  });  \n  }\n\n  addProfile(profileId){\n    var data = { id: this.state.id, profile_id: profileId}\n    MyActions.setInstance('works/involvements', data, this.state.token);\n  }\n\n  addStatus(statusId){\n    var data = { id: this.state.id, status_id: statusId}\n    MyActions.setInstance('works/status', data, this.state.token);\n  }\n\n  removeProfile(profileId) {\n    var data = { id: this.state.id, profile_id: profileId}\n    MyActions.removeInstance('works/involvements', data, this.state.token);\n  }\n\n  addAbility() {\n    var data = { id: this.state.id, ability_title: this.state.abilityTitle, ability_value: this.state.abilityValue}\n    MyActions.setInstance('works/abilities', data, this.state.token);\n  }\n\n  changeRole(profile_id, role) {\n    var data = { id: this.state.id, profile_id: profile_id, role: role}\n    MyActions.setInstance('works/change_role', data, this.state.token);\n  }\n\n\n  loadMore() {\n    this.setState({ page: this.state.page + 1 }, () => {\n      MyActions.getInstance('works', this.$f7route.params['workId'], this.state.token, this.state.page);\n    });\n  }\n\n\n  submitComment() {\n    var data = { commentable_type: 'Work' ,commentable_id: this.state.id, content: this.state.commentContent }\n    MyActions.setInstance('comments', data, this.state.token);\n  }\n\n\n  deleteCommentConfirm(id){\n    const self = this;\n    const app = self.$f7;\n    app.dialog.confirm(dict.are_you_sure, dict.alert, () => self.deleteComment(id))\n  }\n\n  deleteComment(id) {\n    var data = { id: id }\n    MyActions.removeInstance('comments', data, this.state.token, this.state.page);\n  }\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  todoChecked(id, e){\n    var data={id: id, is_done: e.target.checked}\n    MyActions.setInstance('todos/check_todo', data, this.state.token);\n  }\n\n  fab() {\n    if (this.state.work) {\n      return (\n        <Fab href={\"/works/\" + this.state.work.id + \"/edit\"} target=\"#main-view\" position=\"left-bottom\" slot=\"fixed\" color=\"lime\">\n          <Icon ios=\"f7:edit\" aurora=\"f7:edit\" md=\"material:edit\"></Icon>\n          <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n        </Fab>\n      )\n    }\n  }\n\n  deleteTodoConfirm(id){\n    const self = this;\n    const app = self.$f7;\n    app.dialog.confirm(dict.are_you_sure, dict.alert, () => self.deleteTodo(id))\n  }\n\n  deleteTodo(id){\n    var data = {id: id}\n    MyActions.removeInstance('todos', data, this.state.token);\n  }\n\n  removeWork(user_id) {\n    MyActions.removeInstance('users/assignments', { user_id: user_id, work_id: this.state.id }, this.state.token);\n  }\n\n  removeAbility(title){\n    MyActions.removeInstance('works/abilities', { id: this.state.id, title: title }, this.state.token);\n  }\n\n  render() {\n    const { work, users, assignedUsers, ability, profiles, statuses, comments, commentContent, access, todos } = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.works} backLinkForce={true} backLink={dict.back} >\n        <Link panelOpen=\"right\">\n          <Icon f7=\"bars\"></Icon>\n        </Link>\n        </Navbar>\n        <WorkShow \n          work={work} users={users} ability={ability} profiles={profiles} statuses={statuses}\n          removeProfile={this.removeProfile} addProfile={this.addProfile}\n          searchProfile={this.searchProfile} removeAbility={this.removeAbility}\n          assignedUsers={assignedUsers} addAbility={this.addAbility} \n          removeWork={this.removeWork} submit={this.submit} handleChange={this.handleChangeValue}\n          searchStatus={this.searchStatus} addStatus={this.addStatus}\n          submitComment={this.submitComment} deleteCommentConfirm={this.deleteCommentConfirm}\n          commentContent={commentContent} comments={comments} loadMore={this.loadMore}\n          changeRole={this.changeRole} access={access} todos={todos} \n          todoChecked={this.todoChecked} deleteTodoConfirm={this.deleteTodoConfirm}\n          />\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { List, ListItem} from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\nimport Moment from 'react-moment';\nimport JDate from 'jalali-date';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\n\nconst WorkList = (props) => {\n  function title(t) {\n    var date = new Date(new window.ODate(t))\n    return(<Moment date={date} fromNow></Moment>)\n  }\n  if (props.works) {\n    console.log(props.works)\n    \n    return (\n      <List>\n        {props.works.map((work) =>\n        <ListItem key={'worklist' + work.id} header={work.title} title={title(work.deadline_date)} link={'/works/'+work.id}></ListItem>\n        )}\n      </List>\n    )\n  } else {\n    return (<ul></ul>)\n  }\n}\nexport default WorkList;\n","import React from \"react\";\nimport { Page, Navbar, List, BlockTitle, ListItem, Fab, Icon,Preloader, Block} from 'framework7-react';\nimport WorkList from \"./list\"\nimport { dict} from '../../Dict';\n\nconst WorkIndex = (props) => {\n  return(\n    <Page>\n      <Navbar title={dict.works} backLink={dict.back} >\n      </Navbar>\n      <BlockTitle>{dict.list}</BlockTitle>\n      <WorkList works={props.works}/>\n    </Page>\n  )\n}\nexport default WorkIndex;\n","import React from \"react\"\nimport { Page,Fab, Icon } from 'framework7-react';\nimport ModelStore from \"../../stores/ModelStore\";\nimport WorkIndex from \"../../containers/works/index\"\nimport * as MyActions from \"../../actions/MyActions\";\nimport { dict} from '../../Dict';\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\n\nexport default class Layout extends React.Component {\n  constructor() {\n    super();\n    this.getList = this.getList.bind(this);\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      works: null,\n    }\n  }\n  componentWillMount() {\n    ModelStore.on(\"got_list\", this.getList);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_list\", this.getList);\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  loadData(){\n    const f7: Framework7 = Framework7.instance;\n    f7.toast.show({ text: dict.receiving, closeTimeout: 2000, position: 'top'});\n    MyActions.getList('works', this.state.page, {}, this.state.token);\n  }\n\n  getList() {\n    var works = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    if (works && klass === 'Work'){\n      this.setState({\n        works: works,\n      });\n    }\n  }\n\n  render() {\n    const {works} = this.state;\n    return(<WorkIndex works={works}/>)\n  }\n}\n","import React from \"react\";\nimport { List, Col, ListInput, Block, Row, Button, BlockTitle, Card, Link } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport crypto from 'crypto-js';\n\n\nconst WorkForm = (props) => {\n  if (props.privateWork) {\n    var isPrivateWork = true;\n  } else {\n    var isPrivateWork = false\n  }\n\n  function deleteButton() {\n    if (props.editing) {\n      return (\n        <Col>\n          <Button className=\"col btn ml-5\" outline color='red' disabled={!props.editing} onClick={() => props.deleteWorkConfirm()}>{dict.delete}</Button>\n        </Col>\n      )\n    }\n  }\n  return (\n    <Card>\n      <BlockTitle>{dict.work}</BlockTitle>\n      <List >\n        <ListInput\n          label={dict.title}\n          type=\"text\"\n          placeholder={dict.select_appropriate_title}\n          defaultValue={props.work.title}\n          required={true}\n          onInput={(e) => {\n            props.handleChange({ title: e.target.value })\n          }}\n        />\n\n        <ListInput\n          label={dict.details}\n          type=\"textarea\"\n          placeholder={dict.write_appropriate_description}\n          value={props.content}\n          onInput={(e) => {\n            props.handleChange({ details: e.target.value })\n          }}\n        />\n\n        <ListInput\n          label={dict.priority}\n          type=\"select\"\n          defaultValue={props.priority}\n          onChange={(e) => {\n            props.handleChange({ priority: e.target.value })\n          }}\n        >\n          <option value=\"normal\">{dict.normal}</option>\n          <option value=\"high\">{dict.high}</option>\n          <option value=\"urgent\">{dict.urgent}</option>\n        </ListInput>\n\n\n        <li>\n          <div class=\"item-content item-input\">\n            <div class=\"item-inner\">\n              <div class=\"item-title item-label\">{dict.start_date}</div>\n              <div class=\"item-input-wrap\">\n                <input type=\"text\" placeholder={dict.select_a_date} readonly=\"readonly\" id=\"start-calendar\" />\n              </div>\n            </div>\n          </div>\n        </li>\n\n        <li>\n          <div class=\"item-content item-input\">\n            <div class=\"item-inner\">\n              <div class=\"item-title item-label\">{dict.start_time}</div>\n              <div class=\"item-input-wrap\">\n                <input type=\"text\" placeholder={dict.select_a_time} value={props.startTime} readonly=\"readonly\" id=\"start-time-picker\" />\n              </div>\n            </div>\n          </div>\n        </li>\n        <li>\n          <div class=\"item-content item-input\">\n\n          </div>\n        </li>\n        <li>\n          <div class=\"item-content item-input\">\n            <div class=\"item-inner\">\n              <div class=\"item-title item-label\">{dict.deadline}</div>\n              <div class=\"item-input-wrap\">\n                <input type=\"text\" placeholder={dict.select_a_date} readonly=\"readonly\" id=\"deadline-calendar\" />\n              </div>\n            </div>\n          </div>\n        </li>\n\n        <li>\n          <div class=\"item-content item-input\">\n            <div class=\"item-inner\">\n              <div class=\"item-title item-label\">{dict.deadline_time}</div>\n              <div class=\"item-input-wrap\">\n                <input type=\"text\" placeholder={dict.select_a_time} value={props.deadlineTime} readonly=\"readonly\" id=\"deadline-time-picker\" />\n              </div>\n            </div>\n          </div>\n        </li>\n      </List>\n\n      <Block strong>\n        <Row tag=\"p\">\n          {deleteButton()}\n          <Link className=\"btn-notice\"></Link>\n          <Button className=\"col btn\" fill onClick={props.submit}>{dict.submit}</Button>\n        </Row>\n      </Block>\n    </Card >\n\n  )\n}\nexport default WorkForm;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  BlockTitle,\n} from 'framework7-react';\nimport { dict } from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport WorkForm from \"../../containers/works/form\"\n\nexport default class WorkCreate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.loadCalender = this.loadCalender.bind(this);\n    this.pageAfterIn = this.pageAfterIn.bind(this);\n    \n    this.state = {\n      token: window.localStorage.getItem('token'),\n      work: {},\n      title: null,\n      details: null,\n      deadline: new Date(),\n      start: new Date(),\n      startTime:  '0:00',\n      deadlineTime: '0:00',\n      privateWork: true,\n      priority: 'normal',\n    }\n  }\n\n\n  componentWillMount() {\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n  }\n\n  componentDidMount() {\n\n  }\n\n  pageAfterIn() {\n    this.loadCalender();\n    this.loadTime();\n  }\n\n  loadTime(){\n    var today = new Date();\n    const self = this;\n    const app = self.$f7;\n    \n    app.picker.create({\n      inputEl: '#start-time-picker',\n        rotateEffect: true,\n        on: {\n          closed: function (picker) {\n            self.setState({ startTime: picker.value[1]+':'+picker.value[0]});\n          }\n        },\n        cols: [\n          {\n            values: ('00 15 30 45').split(' ')\n          },\n          {\n            textAlign: 'left',\n            values: ('0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23').split(' ')\n          },\n\n        ]\n    });\n    app.picker.create({\n      inputEl: '#deadline-time-picker',\n        rotateEffect: true,        on: {\n          closed: function (picker) {\n            self.setState({ deadlineTime: picker.value[1]+':'+picker.value[0]});\n          }\n        },\n        cols: [\n          {\n            values: ('00 15 30 45').split(' ')\n          },\n          {\n            textAlign: 'left',\n            values: ('0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23').split(' ')\n          },\n\n        ]\n    });\n  }\n\n  loadCalender(){\n    const self = this;\n    const app = self.$f7;\n\n    app.calendar.create({\n      inputEl: '#start-calendar',\n      value: [new Date()],\n      closeOnSelect: true,\n      firstDay: 6,\n      weekendDays: [4, 5],\n      monthNames: ['فروردين', 'ارديبهشت', 'خرداد', 'تیر', 'مرداد', 'شهریور', 'مهر', 'آبان', 'آذر', 'دی', 'بهمن', 'اسفند'],\n      dayNames: ['یکشنبه', 'دوشنبه', 'سه شنبه', 'چهارشنبه', 'پنج‌شنبه', 'جمعه', 'شنبه'],\n      dayNamesShort: ['یک', 'دو', 'سه ', 'چهار', 'پنج‌', 'جمعه', 'شنبه'],\n      on: {\n        closed: function (c) {\n          console.log(c.value[0].a)\n          self.setState({ start: c.value[0].a });\n        }\n      }\n    });\n\n    app.calendar.create({\n      inputEl: '#deadline-calendar',\n      closeOnSelect: true,\n      value: [new Date()],\n      firstDay: 6,\n      weekendDays: [4, 5],\n      monthNames: ['فروردين', 'ارديبهشت', 'خرداد', 'تیر', 'مرداد', 'شهریور', 'مهر', 'آبان', 'آذر', 'دی', 'بهمن', 'اسفند'],\n      dayNames: ['یکشنبه', 'دوشنبه', 'سه شنبه', 'چهارشنبه', 'پنج‌شنبه', 'جمعه', 'شنبه'],\n      dayNamesShort: ['یک', 'دو', 'سه ', 'چهار', 'پنج‌', 'جمعه', 'شنبه'],\n      on: {\n        closed: function (c) {\n          self.setState({ deadline: c.value[0].a });\n        }\n      }\n\n    });\n  }\n\n  submit() {\n    this.$$('.btn').hide();\n    this.$$('.btn-notice').text(dict.submitting);\n    var data = { \n      title: this.state.title, details: this.state.details, \n      start: this.state.start, start_time: this.state.startTime, \n      deadline: this.state.deadline, deadline_time: this.state.deadlineTime,\n      task_id: this.$f7route.params['taskId'], priority: this.state.priority\n    }\n    if (this.state.title && this.state.title.length > 0) {\n      MyActions.setInstance('works', data, this.state.token);\n    } else {\n      const self = this;\n      self.$f7.dialog.alert(dict.incomplete_data, dict.alert);\n    }\n\n  }\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  setInstance() {\n    var work = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (work && klass === 'Work') {\n      this.$$('.btn').show();\n      this.$f7router.navigate('/works/'+work.id);\n    } else {\n      this.$$('.btn').show();\n      this.$f7router.navigate('/tasks/');\n    }\n    \n  }\n\n\n\n  render() {\n    const { work } = this.state;\n    return (\n      <Page onPageAfterIn={this.pageAfterIn.bind(this)}>\n        <Navbar title={dict.work_form} backLink={dict.back} />\n        <BlockTitle>{dict.work_form}</BlockTitle>\n        <WorkForm work={work} submit={this.submit} editing={false} handleChange={this.handleChangeValue} />\n      </Page>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon\n} from 'framework7-react';\nimport { dict } from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport WorkForm from \"../../containers/works/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\nexport default class DocumentUpdate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.getInstance = this.getInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.loadTime = this.loadTime.bind(this);\n    this.loadCalender = this.loadCalender.bind(this);\n    this.pageAfterIn = this.pageAfterIn.bind(this);\n    this.deleteWorkConfirm = this.deleteWorkConfirm.bind(this);\n    this.deleteWork = this.deleteWork.bind(this);\n    this.deleteInstance = this.deleteInstance.bind(this);\n\n    \n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      work: {},\n      id: null,\n      title: null,\n      details: null,\n      deadline: new Date(),\n      start: new Date(),\n      startTime: '0 00',\n      deadlineTime: '0 00',\n      privateWork: true,\n      priority: 'normal',\n    }\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.setInstance);\n    ModelStore.on(\"deleted_instance\", this.deleteInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n    ModelStore.removeListener(\"deleted_instance\", this.deleteInstance);\n\n  }\n\n  pageAfterIn() {\n    this.loadTime();\n  }\n\n  loadTime() {\n    var today = new Date();\n    const self = this;\n    const app = self.$f7;\n\n    app.picker.create({\n      inputEl: '#start-time-picker',\n      rotateEffect: true,\n      on: {\n        closed: function (picker) {\n          self.setState({ startTime: picker.value[1] + ':' + picker.value[0] });\n        }\n      },\n      cols: [\n        {\n          values: ('00 15 30 45').split(' ')\n        },\n        {\n          textAlign: 'left',\n          values: ('0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23').split(' ')\n        },\n\n      ]\n    });\n    app.picker.create({\n      inputEl: '#deadline-time-picker',\n      rotateEffect: true, on: {\n        closed: function (picker) {\n          self.setState({ deadlineTime: picker.value[1] + ':' + picker.value[0] });\n        }\n      },\n      cols: [\n        {\n          values: ('00 15 30 45').split(' ')\n        },\n        {\n          textAlign: 'left',\n          values: ('0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23').split(' ')\n        },\n\n      ]\n    });\n  }\n\n  loadCalender() {\n    const self = this;\n    const app = self.$f7;\n\n    app.calendar.create({\n      inputEl: '#start-calendar',\n      value: [this.state.start],\n      closeOnSelect: true,\n      firstDay: 6,\n      weekendDays: [4, 5],\n      monthNames: ['فروردين', 'ارديبهشت', 'خرداد', 'تیر', 'مرداد', 'شهریور', 'مهر', 'آبان', 'آذر', 'دی', 'بهمن', 'اسفند'],\n      dayNames: ['یکشنبه', 'دوشنبه', 'سه شنبه', 'چهارشنبه', 'پنج‌شنبه', 'جمعه', 'شنبه'],\n      dayNamesShort: ['یک', 'دو', 'سه ', 'چهار', 'پنج‌', 'جمعه', 'شنبه'],\n      on: {\n        closed: function (c) {\n          self.setState({ start: c.value[0].a });\n        }\n      }\n    });\n\n    app.calendar.create({\n      inputEl: '#deadline-calendar',\n      closeOnSelect: true,\n      value: [this.state.deadline],\n      firstDay: 6,\n      weekendDays: [4, 5],\n      monthNames: ['فروردين', 'ارديبهشت', 'خرداد', 'تیر', 'مرداد', 'شهریور', 'مهر', 'آبان', 'آذر', 'دی', 'بهمن', 'اسفند'],\n      dayNames: ['یکشنبه', 'دوشنبه', 'سه شنبه', 'چهارشنبه', 'پنج‌شنبه', 'جمعه', 'شنبه'],\n      dayNamesShort: ['یک', 'دو', 'سه ', 'چهار', 'پنج‌', 'جمعه', 'شنبه'],\n      on: {\n        closed: function (c) {\n          //console.log(c.value[0].a)\n          self.setState({ deadline: c.value[0].a });\n        }\n      }\n\n    });\n  }\n\n\n\n  submit() {\n    this.$$('.btn').hide();\n    this.$$('.btn-notice').text(dict.submitting);\n    var data = { \n      id: this.state.id, title: this.state.title, details: this.state.details,\n      start: this.state.start, start_time: this.state.startTime, \n      deadline: this.state.deadline, deadline_time: this.state.deadlineTime,\n      priority: this.state.priority\n    }// start: new Date(this.state.start.setHours(startTime[0], startTime[1], 0, 0)).toISOString(), deadline:  new Date(this.state.deadline.setHours(deadlineTime[0], deadlineTime[1], 0, 0)).toISOString() }\n    if (this.state.title && this.state.title.length > 0) {\n      MyActions.updateInstance('works', data, this.state.token);\n    } else {\n      const self = this;\n      self.$f7.dialog.alert(dict.incomplete_data, dict.alert);\n    }\n\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  loadData() {\n    const f7: Framework7 = Framework7.instance;\n    f7.toast.show({ text: dict.receiving, closeTimeout: 2000, position: 'top' });\n    if (this.$f7route.params['workId']) {\n      MyActions.getInstance('works', this.$f7route.params['workId'], this.state.token);\n    }\n  }\n\n\n  getInstance() {\n    var work = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (work && klass === 'Work') {\n      this.setState({\n        title: work.title,\n        content: work.details,\n        id: work.id,\n        work: work,\n        start: new window.ODate(work.start_date),\n        deadline: new window.ODate(work.deadline_date),\n        startTime: work.start_time,\n        deadlineTime: work.deadline_time,\n        defaultWork: work.default_work,\n        priority: work.priority\n      }, () => this.loadCalender());\n    }\n  }\n\n  deleteWorkConfirm(){\n    const self = this;\n    const app = self.$f7;\n    app.dialog.confirm(dict.are_you_sure, dict.alert, self.deleteWork)\n  }\n\n  deleteWork(){\n    var data = { id: this.state.id}\n    MyActions.removeInstance('works', data, this.state.token);\n  }\n\n  deleteInstance() {\n    this.$f7router.navigate('/tasks/');\n  }\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n\n  setInstance() {\n    this.$$('.btn').show();\n    this.$f7router.navigate('/works/'+this.state.id);\n  }\n\n\n  render() {\n    const { work, defaultWork, title, content, startTime, deadlineTime, priority } = this.state;\n    return (\n      <Page onPageAfterIn={this.pageAfterIn.bind(this)}>\n        <Navbar title={dict.work_form} backLink={dict.back} />\n        <BlockTitle>{dict.work_form}</BlockTitle>\n        <WorkForm \n        work={work} title={title} startTime={startTime} \n        deadlineTime={deadlineTime} content={content} \n        defaultWork={defaultWork} submit={this.submit} \n        editing={true} handleChange={this.handleChangeValue} \n        deleteWorkConfirm={this.deleteWorkConfirm}\n        priority={priority}\n        />\n      </Page>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  BlockTitle,\n} from 'framework7-react';\nimport { dict } from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport TodoForm from \"../../containers/todos/form\"\n\nexport default class TodoCreate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.getInstance = this.getInstance.bind(this);\n    this.involvementCheck = this.involvementCheck.bind(this);\n    \n    \n    this.state = {\n      token: window.localStorage.getItem('token'),\n      todo: {},\n      title: null,\n      involvements: [],\n      workInvolvements: [],\n    }\n  }\n\n\n  componentWillMount() {\n    ModelStore.on(\"set_instance\", this.setInstance);\n    ModelStore.on(\"got_instance\", this.getInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n  }\n\n  componentDidMount() {\n    MyActions.getInstance('works', this.$f7route.params['workId'], this.state.token);\n  }\n\n\n  submit() {\n    this.$$('.btn').hide();\n    this.$$('.btn-notice').text(dict.submitting);\n    var data = { \n        title: this.state.title, work_id: this.$f7route.params['workId'],\n        involvements: this.state.involvements\n    }\n    if (this.state.title && this.state.title.length > 0) {\n      MyActions.setInstance('todos', data, this.state.token);\n    } else {\n      const self = this;\n      self.$f7.dialog.alert(dict.incomplete_data, dict.alert);\n    }\n\n  }\n\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  setInstance() {\n    var todo = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (todo && klass === 'Todo') {\n      this.$$('.btn').show();\n      this.$f7router.navigate('/works/'+todo.work_id);\n    } \n  }\n\n  getInstance() {\n    var work = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (work && klass === 'Work') {\n      this.setState({\n        workInvolvements: work.the_involvements\n      });\n    }\n  }\n\n  involvementCheck(id, e){\n    if (e.target.checked) {\n      this.setState({ involvements: this.state.involvements.concat({ id: id })})\n    } else {\n      this.setState({\n        involvements: this.state.involvements.filter(function (involvement) {\n          return involvement.id !== id\n        })\n      });\n    }\n  }\n\n\n\n  render() {\n    const { todo, involvements, workInvolvements } = this.state;\n    return (\n      <Page  backLink={dict.back} backLinkForce={true}>\n        <Navbar title={dict.work_form} backLink={dict.back} />\n        <BlockTitle>{dict.work_form}</BlockTitle>\n        <TodoForm \n        todo={todo} workInvolvements={workInvolvements}\n         involvements={involvements} removeInvolvement={this.removeInvolvement}\n        submit={this.submit} editing={true} involvementCheck={this.involvementCheck}\n        handleChange={this.handleChangeValue} />\n      </Page>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  BlockTitle,\n} from 'framework7-react';\nimport { dict } from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport TodoForm from \"../../containers/todos/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\nexport default class TodoCreate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.removeInvolvement = this.removeInvolvement.bind(this);\n    this.getInstance = this.getInstance.bind(this);\n    this.involvementCheck = this.involvementCheck.bind(this);\n    this.setInvolvements = this.setInvolvements.bind(this);\n    \n    \n    this.state = {\n      token: window.localStorage.getItem('token'),\n      todo: {},\n      title: null,\n      id: null, \n      involvements: [],\n      workInvolvements: [],\n    }\n  }\n\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  loadData() {\n    const f7: Framework7 = Framework7.instance;\n    f7.toast.show({ text: dict.receiving, closeTimeout: 2000, position: 'top' });\n    if (this.$f7route.params['todoId']) {\n      MyActions.getInstance('todos', this.$f7route.params['todoId'], this.state.token);\n    }\n  }\n\n\n  submit() {\n    this.$$('.btn').hide();\n    this.$$('.btn-notice').text(dict.submitting);\n    var data = { \n        id: this.state.id,\n        title: this.state.title,\n        involvements: this.state.involvements\n    }\n    if (this.state.title && this.state.title.length > 0) {\n      MyActions.updateInstance('todos', data, this.state.token);\n    } else {\n      const self = this;\n      self.$f7.dialog.alert(dict.incomplete_data, dict.alert);\n    }\n\n  }\n\n  removeInvolvement(id) {\n    this.setState({\n      involvements: this.state.involvements.filter(function (involvement) {\n        return involvement.id !== id\n      })\n    });\n  }\n\n  getInstance() {\n    var todo = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (todo && klass === 'Todo') {\n      this.setState({\n        title: todo.title,\n        id: todo.id,\n        //involvements: todo.involvement_tags,\n        workInvolvements: todo.work_involvements\n      }, () =>  this.setInvolvements());\n    }\n  }\n\n  setInvolvements(){\n    this.setState({ involvements: [] });\n    var arr = []\n    this.state.workInvolvements.map((workInvolvement) => {\n      if(workInvolvement.check){\n        arr.push({ id: workInvolvement.profile.id })\n      }\n    })\n    this.setState({ involvements: arr})\n  }\n\n\n  involvementCheck(id, e){\n    if (e.target.checked) {\n      this.setState({ involvements: this.state.involvements.concat({ id: id })})\n    } else {\n      this.setState({\n        involvements: this.state.involvements.filter(function (involvement) {\n          return involvement.id !== id\n        })\n      });\n    }\n  }\n\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  setInstance() {\n    var todo = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (todo && klass === 'Todo') {\n      this.$$('.btn').show();\n      this.$f7router.navigate('/works/'+todo.work_id);\n    } \n  }\n\n\n\n  render() {\n    const { todo, involvements, title , workInvolvements} = this.state;\n    return (\n      <Page  backLink={dict.back} backLinkForce={true}>\n        <Navbar title={dict.work_form} backLink={dict.back} />\n        <BlockTitle>{dict.work_form}</BlockTitle>\n        <TodoForm \n        todo={todo} workInvolvements={workInvolvements}\n         title={title} involvements={involvements} involvementCheck={this.involvementCheck}\n        removeInvolvement={this.removeInvolvement} submit={this.submit} editing={true} handleChange={this.handleChangeValue} />\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { Page, Navbar, List, BlockTitle, ListItem, Chip, Icon, Preloader, Block } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport CommentForm from \"../comments/form\"\nimport CommentList from \"../comments/list\"\n\n\nconst TimeSheetShow = (props) => {\n  function association(kind) {\n    var chips = [\n      <div>\n        <div className=\"item-title fs-11\">\n          {dict.associations}:\n        </div>\n      </div>\n    ]\n    if (props.time_sheet.the_associations) {\n      props.time_sheet.the_associations.map((association) => {\n        if (association.kind == kind) {\n          chips.push(<a href={'/' + association.a_type + '/' + association.id + '/'}><Chip text={association.title} /></a>)\n        }\n      }\n      )\n    }\n    return chips\n  }\n\n  if (props.time_sheet) {\n    return (\n      <React.Fragment>\n        <BlockTitle>{dict.sheet_date}</BlockTitle>\n        <List simple-list>\n          <ListItem>{props.time_sheet.jdate}</ListItem>\n        </List>\n\n        <List className='fs-11'>\n        {props.time_sheet.the_involvements.map((involvement) =>\n          <ListItem\n            key={'involvement' + involvement.profile.id}\n            title={involvement.profile.fullname}\n            after=''>\n            <img slot=\"media\" src={involvement.profile.avatar} width=\"27\" height=\"27\" />\n          </ListItem>\n        )}\n      </List>\n\n        <BlockTitle>{dict.morning_report}</BlockTitle>\n        <List simple-list>\n          <ListItem>{props.time_sheet.morning_report}</ListItem>\n          <ListItem>{association('Morning')}</ListItem>\n        </List>\n\n        <BlockTitle>{dict.afternoon_report}</BlockTitle>\n        <List simple-list>\n          <ListItem>{props.time_sheet.afternoon_report}</ListItem>\n          <ListItem>{association('Afternoon')}</ListItem>\n        </List>\n\n        <BlockTitle>{dict.extra_report}</BlockTitle>\n        <List simple-list>\n          <ListItem>{props.time_sheet.extra_report}</ListItem>\n          <ListItem>{association('Extra')}</ListItem>\n        </List>\n\n        <CommentForm model={props.time_sheet} submit={props.submitComment} handleChange={props.handleChange}/>\n\n        <CommentList\n                comments={props.comments} deleteCommentConfirm={props.deleteCommentConfirm}\n                loadMore={props.loadMore} />\n      </React.Fragment>\n    )\n  } else {\n    return (null)\n  }\n}\nexport default TimeSheetShow;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon, Fab\n} from 'framework7-react';\nimport { dict } from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport TimeSheetShow from \"../../containers/time_sheets/show\"\n\nexport default class Layout extends Component {\n  constructor() {\n    super();\n    this.getInstance = this.getInstance.bind(this);\n    this.getList = this.getList.bind(this);\n    this.submit = this.submit.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.deleteComment = this.deleteComment.bind(this);\n    this.submitComment = this.submitComment.bind(this);\n    this.deleteCommentConfirm = this.deleteCommentConfirm.bind(this);\n    \n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      time_sheet: null,\n      id: null,\n      user_id: null,\n      comments: null,\n    }\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.getInstance);\n    ModelStore.on(\"got_list\", this.getList);\n    ModelStore.on(\"deleted_instance\", this.getInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.getInstance);\n    ModelStore.removeListener(\"got_list\", this.getList);\n    ModelStore.removeListener(\"deleted_instance\", this.getInstance);\n  }\n\n  componentDidMount() {\n    MyActions.getInstance('time_sheets', this.$f7route.params['timeSheetId'], this.state.token);\n  }\n\n  getInstance() {\n    var time_sheet = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (time_sheet && klass === 'TimeSheet') {\n      this.setState({\n        time_sheet: time_sheet,\n        id: time_sheet.id,\n        comments: time_sheet.the_comments,\n      });\n    }\n    this.$$('.btn').show();\n  }\n\n  getList() {\n    var users = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    if (users && klass === 'User') {\n      this.setState({\n        users: users,\n      });\n    }\n  }\n\n  submit() {\n    this.$$('.btn').hide();\n    this.$$('.btn-notice').text(dict.submitting);\n    var data = { time_sheet_id: this.state.id, user_id: this.state.user_id }\n    MyActions.setInstance('users/assignments', data, this.state.token);\n  }\n\n  submitComment() {\n    var data = { commentable_type: 'TimeSheet' ,commentable_id: this.state.id, content: this.state.commentContent }\n    MyActions.setInstance('comments', data, this.state.token);\n  }\n\n\n  deleteCommentConfirm(id){\n    const self = this;\n    const app = self.$f7;\n    app.dialog.confirm(dict.are_you_sure, dict.alert, () => self.deleteComment(id))\n  }\n\n  deleteComment(id) {\n    var data = { id: id }\n    MyActions.removeInstance('comments', data, this.state.token, this.state.page);\n  }\n\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  fab() {\n    if (this.state.time_sheet) {\n      return (\n        <Fab href={\"/time_sheets/\" + this.state.time_sheet.id + \"/edit\"} target=\"#main-view\" position=\"left-bottom\" slot=\"fixed\" color=\"lime\">\n          <Icon ios=\"f7:edit\" aurora=\"f7:edit\" md=\"material:edit\"></Icon>\n          <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n        </Fab>\n      )\n    }\n  }\n\n  render() {\n    const { time_sheet, comments } = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.time_sheets} backLink={dict.back} />\n        <BlockTitle></BlockTitle>\n        {this.fab()}\n        <TimeSheetShow \n          time_sheet={time_sheet} \n          submit={this.submit} handleChange={this.handleChangeValue} \n          comments={comments}\n          submitComment={this.submitComment} deleteCommentConfirm={this.deleteCommentConfirm}\n          />\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { List, ListItem, CardHeader, CardContent, CardFooter, Card, Button, Link } from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\n\nconst TimeSheetList = (props) => {\n\n  if (props.time_sheets) {\n    return (\n      <Card>\n        <CardHeader>\n          {props.header}\n        </CardHeader>\n        <CardContent>\n          <List mediaList className='fs-11'>\n            {props.time_sheets.map((time_sheet) =>\n              <ListItem\n              className='fs-11'\n                key={crypto.lib.WordArray.random(32)}\n                link={\"/time_sheets/\" + time_sheet.id}\n                ignoreCache={true}\n                title={time_sheet.jdate}\n                after=\"\"\n                subtitle={time_sheet.profile.fullname}\n                text=\"\"\n              >\n                 <img slot=\"media\" src={time_sheet.profile.avatar} width=\"28\" height=\"28\"/>\n              </ListItem>\n            )}\n          </List>\n        </CardContent>\n        <CardFooter>\n          <Link></Link>\n            <Button  onClick={() => props.loadMore(props.page)}>{dict.more}</Button>\n        </CardFooter>\n      </Card>\n    )\n  } else {\n    return (<ul></ul>)\n  }\n}\nexport default TimeSheetList;\n","import React from \"react\";\nimport { Page, Navbar, Row, BlockTitle, Col, Fab, Icon, Preloader, Block, Card, CardFooter, CardContent, CardHeader } from 'framework7-react';\nimport TimeSheetList from \"./list\"\nimport { dict } from '../../Dict';\n\nconst TimeSheetIndex = (props) => {\n  return (\n    <Page>\n      <Navbar title={dict.time_sheets} backLink={dict.back} >\n      </Navbar>\n      <BlockTitle>{dict.list}</BlockTitle>\n      <Fab href=\"/time_sheets/new\" target=\"#main-view\" position=\"left-bottom\" slot=\"fixed\" color=\"deeporange\">\n        <Icon ios=\"f7:add\" aurora=\"f7:add\" md=\"material:add\"></Icon>\n        <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n      </Fab>\n      <Row>\n        <Col width='100' tabletWidth='50'>\n          <TimeSheetList\n            time_sheets={props.related_time_sheets} header={dict.sent_to_me}\n            page='page_related' loadMore={props.loadMore}\n          />\n        </Col>\n        <Col width='100' tabletWidth='50'>\n          <TimeSheetList\n            time_sheets={props.mine_time_sheets} header={dict.sent_by_me}\n            page='page_mine' loadMore={props.loadMore}\n          />\n        </Col>\n      </Row>\n\n    </Page>\n  )\n}\nexport default TimeSheetIndex;\n","import React from \"react\"\nimport { Page,Fab, Icon } from 'framework7-react';\nimport ModelStore from \"../../stores/ModelStore\";\nimport TimeSheetIndex from \"../../containers/time_sheets/index\"\nimport * as MyActions from \"../../actions/MyActions\";\nimport { dict} from '../../Dict';\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\n\nexport default class Layout extends React.Component {\n  constructor() {\n    super();\n    this.getMutipleList = this.getMutipleList.bind(this);\n    this.loadMore = this.loadMore.bind(this);\n    this.getList = this.getList.bind(this);\n    \n    this.state = {\n      token: window.localStorage.getItem('token'),\n      mine_time_sheets: [],\n      related_time_sheets: [],\n      page_mine: 1,\n      page_related: 1,\n    }\n  }\n  componentWillMount() {\n    ModelStore.on(\"got_multiple_list\", this.getMutipleList);\n    ModelStore.on(\"got_list\", this.getList);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_multiple_list\", this.getMutipleList);\n    ModelStore.removeListener(\"got_list\", this.getList);\n  }\n  \n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  loadData(){\n    const f7: Framework7 = Framework7.instance;\n    f7.toast.show({ text: dict.receiving, closeTimeout: 2000, position: 'top'});\n    MyActions.getMultipleList('time_sheets', this.state.page, {}, this.state.token);\n  }\n\n\n  loadMore(p) {\n\n    if( p === 'page_mine') {\n      this.setState({ page_mine: this.state.page_mine + 1 }, () => {\n        MyActions.getList('time_sheets/mine', this.state.page_mine, {}, this.state.token);\n      });\n    }\n    if( p === 'page_related') {\n      this.setState({ page_related: this.state.page_related + 1 }, () => {\n        MyActions.getList('time_sheets/related', this.state.page_related, {}, this.state.token);\n      });\n    }\n  }\n\n  getList(){\n    var list = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    console.log(list)\n    if (list && klass === 'TimeSheetMine'){\n      this.setState({\n        mine_time_sheets: this.state.mine_time_sheets.concat(list),\n      });\n    }\n    if (list && klass === 'TimeSheetRelated'){\n      this.setState({\n        related_time_sheets: this.state.related_time_sheets.concat(list),\n      });\n  }\n}\n\n  getMutipleList() {\n    var multiple = ModelStore.getMutipleList()\n    var klass = ModelStore.getKlass()\n    console.log(multiple)\n    if (multiple && klass === 'TimeSheet'){\n      this.setState({\n        mine_time_sheets: multiple.mine,\n        related_time_sheets: multiple.related,\n      });\n    }\n  }\n\n  render() {\n    const {mine_time_sheets, related_time_sheets} = this.state;\n    return(<TimeSheetIndex \n      mine_time_sheets={mine_time_sheets} related_time_sheets={related_time_sheets}\n      loadMore={this.loadMore}\n      />)\n  }\n}\n","import React from \"react\";\nimport { List, ListItem, ListInput, Col, Row, Button, Link, Chip, Card, CardHeader, CardContent, CardFooter } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport crypto from 'crypto-js';\n\n\nconst TimeSheetForm = (props) => {\n\n\n  function association(type) {\n    var chips = [\n      <div>\n        <a className='fs-11 ' href=\"#\" id={type + '-association'}>\n          <div className=\"item-title fs-11\">\n            <i className=\"va-minus-2 ml-5 fa fa-plus\"></i>\n            {dict.associations}:\n        </div>\n        </a>\n      </div>\n    ]\n    if (props.associations) {\n      props.associations.map((association) => {\n        if (association.kind == type) {\n          chips.push(<Chip text={association.title} deleteable onClick={() => props.removeAssociation(association.id, type)} />)\n        }\n      }\n      )\n    }\n    return chips\n  }\n\n  function involvements() {\n    var chips = [\n      <div>\n        <a className='fs-11 ' href=\"#\" id='time-sheet-involvements'>\n          <div className=\"item-title fs-11\">\n            <i className=\"va-minus-2 ml-5 fa fa-user-plus\"></i>\n            {dict.recipients}:\n        </div>\n        </a>\n      </div>\n    ]\n    if (props.involvements) {\n      props.involvements.map((involvement) => {\n        chips.push(<Chip text={involvement.fullname} deleteable onClick={() => props.removeInvolvement(involvement.id)} />)\n      }\n      )\n    }\n    return chips\n  }\n\n  if (props.time_sheet) {\n    return (\n      <Card>\n        <CardHeader>{dict.time_sheet}</CardHeader>\n        <CardContent>\n          <List >\n            <ListInput\n              label={dict.morning_report}\n              type=\"textarea\"\n              placeholder={dict.write_appropriate_details}\n              value={props.time_sheet.morning_report}\n              onInput={(e) => {\n                props.handleChange({ morningReport: e.target.value })\n              }}\n            />\n\n\n            <ListItem title={association('Morning')}></ListItem>\n\n            <ListInput\n              label={dict.afternoon_report}\n              type=\"textarea\"\n              placeholder={dict.write_appropriate_details}\n              value={props.time_sheet.afternoon_report}\n              onInput={(e) => {\n                props.handleChange({ afternoonReport: e.target.value })\n              }}\n            />\n\n            <ListItem title={association('Afternoon')}></ListItem>\n\n            <ListInput\n              label={dict.extra_report}\n              type=\"textarea\"\n              placeholder={dict.write_appropriate_details}\n              value={props.extra_report}\n              onInput={(e) => {\n                props.handleChange({ extraReport: e.target.value })\n              }}\n            />\n\n            <ListItem title={association('Extra')}></ListItem>\n\n            <li>\n              <div className=\"item-content item-input\">\n                <div className=\"item-inner\">\n                  <div className=\"item-title item-label\">{dict.sheet_date}</div>\n                  <div className=\"item-input-wrap\">\n                    <input className=\"date-input\" type=\"text\" placeholder={dict.select_a_date} readonly=\"readonly\" id=\"sheet-date-calendar\" />\n                  </div>\n                </div>\n              </div>\n            </li>\n\n            <ListItem title={involvements()}></ListItem>\n          </List>\n        </CardContent>\n        <CardFooter>\n\n          <Link></Link>\n          <Button fill disabled={!props.editing} onClick={props.submit}>{dict.submit}</Button>\n        </CardFooter>\n      </Card>\n    )\n  }\n  else {\n    return (null)\n  }\n}\nexport default TimeSheetForm;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport TimeSheetForm from \"../../containers/time_sheets/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\nimport { conf } from '../../conf';\n\nexport default class TimeSheetCreate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.loadCalender = this.loadCalender.bind(this);\n    this.loadAssociation = this.loadAssociation.bind(this);\n    this.removeAssociation = this.removeAssociation.bind(this);\n    this.removeInvolvement = this.removeInvolvement.bind(this);\n    \n    \n    \n    \n    this.state = {\n      token: window.localStorage.getItem('token'),\n      morningReport: null,\n      afternoonReport: null,\n      extraReport: null,\n      associations: [],\n      involvements: [],\n      time_sheet: {},\n      timeSheetDate:  new Date(),\n      isPublic: false,\n    }\n  }\n\n\n  componentWillMount() {\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n  }\n\n  submit(){\n    var data = {\n      associations: this.state.associations,\n      morning_report: this.state.morningReport, afternoon_report: this.state.afternoonReport,\n      extra_report: this.state.extraReport, sheet_date: this.state.timeSheetDate,\n      involvements: this.state.involvements\n    }\n    MyActions.setInstance('time_sheets', data, this.state.token);\n  }\n\n  loadAssociation() {\n    const self = this;\n    const app = self.$f7;\n\n    app.autocomplete.create({\n      openIn: 'popup', //open in page\n      openerEl: '#Morning-association', //link that opens autocomplete\n      multiple: true, //allow multiple values\n      valueProperty: 'id', //object's \"value\" property name\n      textProperty: 'title', //object's \"text\" property name\n      searchbarDisableText: dict.cancel,\n      popupCloseLinkText: dict.close,\n      notFoundText: dict.not_found,\n      limit: 50,\n      searchbarPlaceholder: dict.search,\n      preloader: true, //enable preloader\n      source: function (query, render) {\n        var autocomplete = this;\n        var results = [];\n        if (query.length === 0) {\n          render(results);\n          return;\n        }\n        // Show Preloader\n        autocomplete.preloaderShow();\n        // Do Ajax request to Autocomplete data\n        app.request({\n          url:  conf.server + '/time_sheets/search_ass',\n          method: 'GET',\n          dataType: 'json',\n          //send \"query\" to server. Useful in case you generate response dynamically\n          data: {\n            q: query\n          },\n          success: function (item) {\n            // Find matched items\n            for (var i = 0; i < item.data.length; i++) {\n              results.push(item.data[i]);\n            }\n            // Hide Preoloader\n            autocomplete.preloaderHide();\n            // Render items by passing array with result items\n            render(results);\n          }\n        });\n      },\n      on: {\n        change: function (value) {\n          if (value && value[value.length - 1]) {\n            console.log(value[value.length - 1])\n            self.setState({ associations: self.state.associations.concat({ title: value[value.length - 1].title, id: value[value.length - 1].id , a_type:  value[value.length - 1].a_type, kind: 'Morning'}) })\n          }\n        },\n      },\n    });\n\n    app.autocomplete.create({\n      openIn: 'popup', //open in page\n      openerEl: '#Afternoon-association', //link that opens autocomplete\n      multiple: true, //allow multiple values\n      valueProperty: 'id', //object's \"value\" property name\n      textProperty: 'title', //object's \"text\" property name\n      searchbarDisableText: dict.cancel,\n      popupCloseLinkText: dict.close,\n      notFoundText: dict.not_found,\n      limit: 50,\n      searchbarPlaceholder: dict.search,\n      //preloader: true, //enable preloader\n      source: function (query, render) {\n        var autocomplete = this;\n        var results = [];\n        if (query.length === 0) {\n          render(results);\n          return;\n        }\n        // Show Preloader\n       // autocomplete.preloaderShow();\n        // Do Ajax request to Autocomplete data\n        app.request({\n          url: conf.server +  '/time_sheets/search_ass',\n          method: 'GET',\n          dataType: 'json',\n          //send \"query\" to server. Useful in case you generate response dynamically\n          data: {\n            q: query\n          },\n          success: function (item) {\n            // Find matched items\n            for (var i = 0; i < item.data.length; i++) {\n              results.push(item.data[i]);\n            }\n            // Hide Preoloader\n            //autocomplete.preloaderHide();\n            // Render items by passing array with result items\n            render(results);\n          }\n        });\n      },\n      on: {\n        change: function (value) {\n          if (value && value[value.length - 1]) {\n            self.setState({ associations: self.state.associations.concat({ title: value[value.length - 1].title, id: value[value.length - 1].id ,  a_type:  value[value.length - 1].a_type, kind: 'Afternoon'}) })\n          }\n        },\n      },\n    });\n\n    app.autocomplete.create({\n      openIn: 'popup', //open in page\n      openerEl: '#Extra-association', //link that opens autocomplete\n      multiple: true, //allow multiple values\n      valueProperty: 'id', //object's \"value\" property name\n      textProperty: 'title', //object's \"text\" property name\n      searchbarDisableText: dict.cancel,\n      popupCloseLinkText: dict.close,\n      notFoundText: dict.not_found,\n      limit: 50,\n      searchbarPlaceholder: dict.search,\n      //preloader: true, //enable preloader\n      source: function (query, render) {\n        var autocomplete = this;\n        var results = [];\n        if (query.length === 0) {\n          render(results);\n          return;\n        }\n        // Show Preloader\n       // autocomplete.preloaderShow();\n        // Do Ajax request to Autocomplete data\n        app.request({\n          url: conf.server + '/time_sheets/search_ass',\n          method: 'GET',\n          dataType: 'json',\n          //send \"query\" to server. Useful in case you generate response dynamically\n          data: {\n            q: query\n          },\n          success: function (item) {\n            // Find matched items\n            for (var i = 0; i < item.data.length; i++) {\n              results.push(item.data[i]);\n            }\n            // Hide Preoloader\n            //autocomplete.preloaderHide();\n            // Render items by passing array with result items\n            render(results);\n          }\n        });\n      },\n      on: {\n        change: function (value) {\n          if (value && value[value.length - 1]) {\n            self.setState({ associations: self.state.associations.concat({ title: value[value.length - 1].title, id: value[value.length - 1].id ,  a_type:  value[value.length - 1].a_type, kind: 'Extra'}) })\n          }\n        },\n      },\n    });\n\n    app.autocomplete.create({\n      openIn: 'popup', //open in page\n      openerEl: '#time-sheet-involvements', //link that opens autocomplete\n      multiple: true, //allow multiple values\n      valueProperty: 'id', //object's \"value\" property name\n      textProperty: 'fullname', //object's \"text\" property name\n      searchbarDisableText: dict.cancel,\n      popupCloseLinkText: dict.close,\n      notFoundText: dict.not_found,\n      limit: 50,\n      searchbarPlaceholder: dict.search,\n      //preloader: true, //enable preloader\n      source: function (query, render) {\n        var autocomplete = this;\n        var results = [];\n        if (query.length === 0) {\n          render(results);\n          return;\n        }\n        // Show Preloader\n       // autocomplete.preloaderShow();\n        // Do Ajax request to Autocomplete data\n        app.request({\n          url: conf.server + '/profiles/search',\n          method: 'GET',\n          dataType: 'json',\n          //send \"query\" to server. Useful in case you generate response dynamically\n          data: {\n            q: query\n          },\n          success: function (item) {\n            // Find matched items\n            for (var i = 0; i < item.data.length; i++) {\n               results.push(item.data[i]);\n            }\n            // Hide Preoloader\n            //autocomplete.preloaderHide();\n            // Render items by passing array with result items\n            render(results);\n          }\n        });\n      },\n      on: {\n        change: function (value) {\n          if (value && value[value.length - 1]) {\n            self.setState({ involvements: self.state.involvements.concat({ fullname: value[value.length - 1].fullname, id: value[value.length - 1].id }) })\n          }\n        },\n      },\n    });\n  }\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  setInstance(){\n    const self = this;\n    this.$f7router.navigate('/time_sheets/');\n  }\n\n  pageAfterIn() {\n    this.loadCalender();\n    this.loadAssociation();\n  }\n\n\n  loadCalender() {\n    const self = this;\n    const app = self.$f7;\n    var today = new window.ODate();\n    var weekAgo = new window.ODate().setDate(today.getDate() - 7);  \n    app.calendar.create({\n      inputEl: '#sheet-date-calendar',\n      value: [new Date()],\n      closeOnSelect: true,\n      firstDay: 6,\n      weekendDays: [4, 5],\n      monthNames: ['فروردين', 'ارديبهشت', 'خرداد', 'تیر', 'مرداد', 'شهریور', 'مهر', 'آبان', 'آذر', 'دی', 'بهمن', 'اسفند'],\n      dayNames: ['یکشنبه', 'دوشنبه', 'سه شنبه', 'چهارشنبه', 'پنج‌شنبه', 'جمعه', 'شنبه'],\n      dayNamesShort: ['یک', 'دو', 'سه ', 'چهار', 'پنج‌', 'جمعه', 'شنبه'],\n      disabled: function (date) {\n        if (date > weekAgo && date < today) {\n            return false;\n        }\n        else {\n            return true;\n        }\n    },\n      on: {\n        closed: function (c) {\n          self.setState({ timeSheetDate: c.value[0].a });\n        }\n      }\n    });\n  }\n\n  removeAssociation(id, kind){\n    this.setState({\n      associations: this.state.associations.filter(function (association) {\n        return (association.id !== id || association.kind !== kind)\n      })\n    });\n  }\n\n  removeInvolvement(id){\n    this.setState({\n      involvements: this.state.involvements.filter(function (involvement) {\n        return involvement.id !== id\n      })\n    });\n  }\n\n\n\n\n  render() {\n    const {time_sheet, associations, involvements} = this.state;\n    return (\n      <Page onPageAfterIn={this.pageAfterIn.bind(this)}>\n        <Navbar title={dict.time_sheet_form} backLink={dict.back} />\n        <BlockTitle>{dict.time_sheet_form}</BlockTitle>\n        <TimeSheetForm \n          time_sheet={time_sheet} submit={this.submit}\n           editing={true} handleChange={this.handleChangeValue}\n           associations={associations} removeAssociation={this.removeAssociation}\n           involvements={involvements} removeInvolvement={this.removeInvolvement}\n           />\n      </Page>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport TimeSheetForm from \"../../containers/time_sheets/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\nimport { conf } from '../../conf';\n\nexport default class TimeSheetCreate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.loadCalender = this.loadCalender.bind(this);\n    this.loadAssociation = this.loadAssociation.bind(this);\n    this.removeAssociation = this.removeAssociation.bind(this);\n    this.removeInvolvement = this.removeInvolvement.bind(this);\n    this.getInstance = this.getInstance.bind(this);\n    \n    \n    \n    \n    \n    this.state = {\n      token: window.localStorage.getItem('token'),\n      morningReport: null,\n      afternoonReport: null,\n      extraReport: null,\n      id: null,\n      associations: [],\n      involvements: [],\n      time_sheet: null,\n      timeSheetDate:  new Date(),\n    }\n  }\n\n\n  componentWillMount() {\n    ModelStore.on(\"set_instance\", this.setInstance);\n    ModelStore.on(\"got_instance\", this.getInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  loadData() {\n    if (this.$f7route.params['timeSheetId']) {\n      MyActions.getInstance('time_sheets', this.$f7route.params['timeSheetId'], this.state.token);\n    }\n  }\n\n  submit(){\n    var data = {\n      id: this.state.id,\n      associations: this.state.associations,\n      morning_report: this.state.morningReport, afternoon_report: this.state.afternoonReport,\n      extra_report: this.state.extraReport, sheet_date: this.state.timeSheetDate,\n      involvements: this.state.involvements\n    }\n    MyActions.updateInstance('time_sheets', data, this.state.token);\n  }\n\n  getInstance(){\n    var time_sheet = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (time_sheet && klass === 'TimeSheet') {\n      this.setState({\n        id: time_sheet.id,\n        time_sheet: time_sheet,\n        timeSheetDate: time_sheet.date,\n        involvements: time_sheet.the_involvements,\n        associations: time_sheet.the_associations\n      }, () => this.loadAssociation());\n\n    }\n    console.log(time_sheet)\n  }\n\n  loadAssociation() {\n    const self = this;\n    const app = self.$f7;\n\n    app.autocomplete.create({\n      openIn: 'popup', //open in page\n      openerEl: '#Morning-association', //link that opens autocomplete\n      multiple: true, //allow multiple values\n      valueProperty: 'id', //object's \"value\" property name\n      textProperty: 'title', //object's \"text\" property name\n      searchbarDisableText: dict.cancel,\n      popupCloseLinkText: dict.close,\n      notFoundText: dict.not_found,\n      limit: 50,\n      searchbarPlaceholder: dict.search,\n      preloader: true, //enable preloader\n      source: function (query, render) {\n        var autocomplete = this;\n        var results = [];\n        if (query.length === 0) {\n          render(results);\n          return;\n        }\n        // Show Preloader\n        autocomplete.preloaderShow();\n        // Do Ajax request to Autocomplete data\n        app.request({\n          url:  conf.server + '/time_sheets/search_ass',\n          method: 'GET',\n          dataType: 'json',\n          //send \"query\" to server. Useful in case you generate response dynamically\n          data: {\n            q: query\n          },\n          success: function (item) {\n            // Find matched items\n            for (var i = 0; i < item.data.length; i++) {\n              results.push(item.data[i]);\n            }\n            // Hide Preoloader\n            autocomplete.preloaderHide();\n            // Render items by passing array with result items\n            render(results);\n          }\n        });\n      },\n      on: {\n        change: function (value) {\n          if (value && value[value.length - 1]) {\n            console.log(self.state.associations)\n            self.setState({ associations: self.state.associations.concat({ title: value[value.length - 1].title, id: value[value.length - 1].id , a_type:  value[value.length - 1].a_type, kind: 'Morning'}) })\n          }\n        },\n      },\n    });\n\n    app.autocomplete.create({\n      openIn: 'popup', //open in page\n      openerEl: '#Afternoon-association', //link that opens autocomplete\n      multiple: true, //allow multiple values\n      valueProperty: 'id', //object's \"value\" property name\n      textProperty: 'title', //object's \"text\" property name\n      searchbarDisableText: dict.cancel,\n      popupCloseLinkText: dict.close,\n      notFoundText: dict.not_found,\n      limit: 50,\n      searchbarPlaceholder: dict.search,\n      //preloader: true, //enable preloader\n      source: function (query, render) {\n        var autocomplete = this;\n        var results = [];\n        if (query.length === 0) {\n          render(results);\n          return;\n        }\n        // Show Preloader\n       // autocomplete.preloaderShow();\n        // Do Ajax request to Autocomplete data\n        app.request({\n          url: conf.server + '/time_sheets/search_ass',\n          method: 'GET',\n          dataType: 'json',\n          //send \"query\" to server. Useful in case you generate response dynamically\n          data: {\n            q: query\n          },\n          success: function (item) {\n            // Find matched items\n            for (var i = 0; i < item.data.length; i++) {\n              results.push(item.data[i]);\n            }\n            // Hide Preoloader\n            //autocomplete.preloaderHide();\n            // Render items by passing array with result items\n            render(results);\n          }\n        });\n      },\n      on: {\n        change: function (value) {\n          if (value && value[value.length - 1]) {\n            self.setState({ associations: self.state.associations.concat({ title: value[value.length - 1].title, id: value[value.length - 1].id ,  a_type:  value[value.length - 1].a_type, kind: 'Afternoon'}) })\n          }\n        },\n      },\n    });\n\n    app.autocomplete.create({\n      openIn: 'popup', //open in page\n      openerEl: '#Extra-association', //link that opens autocomplete\n      multiple: true, //allow multiple values\n      valueProperty: 'id', //object's \"value\" property name\n      textProperty: 'title', //object's \"text\" property name\n      searchbarDisableText: dict.cancel,\n      popupCloseLinkText: dict.close,\n      notFoundText: dict.not_found,\n      limit: 50,\n      searchbarPlaceholder: dict.search,\n      //preloader: true, //enable preloader\n      source: function (query, render) {\n        var autocomplete = this;\n        var results = [];\n        if (query.length === 0) {\n          render(results);\n          return;\n        }\n        // Show Preloader\n       // autocomplete.preloaderShow();\n        // Do Ajax request to Autocomplete data\n        app.request({\n          url: conf.server +'/time_sheets/search_ass',\n          method: 'GET',\n          dataType: 'json',\n          //send \"query\" to server. Useful in case you generate response dynamically\n          data: {\n            q: query\n          },\n          success: function (item) {\n            // Find matched items\n            for (var i = 0; i < item.data.length; i++) {\n              results.push(item.data[i]);\n            }\n            // Hide Preoloader\n            //autocomplete.preloaderHide();\n            // Render items by passing array with result items\n            render(results);\n          }\n        });\n      },\n      on: {\n        change: function (value) {\n          if (value && value[value.length - 1]) {\n            self.setState({ associations: self.state.associations.concat({ title: value[value.length - 1].title, id: value[value.length - 1].id ,  a_type:  value[value.length - 1].a_type, kind: 'Extra'}) })\n          }\n        },\n      },\n    });\n\n    app.autocomplete.create({\n      openIn: 'popup', //open in page\n      openerEl: '#time-sheet-involvements', //link that opens autocomplete\n      multiple: true, //allow multiple values\n      valueProperty: 'id', //object's \"value\" property name\n      textProperty: 'fullname', //object's \"text\" property name\n      searchbarDisableText: dict.cancel,\n      popupCloseLinkText: dict.close,\n      notFoundText: dict.not_found,\n      limit: 50,\n      searchbarPlaceholder: dict.search,\n      //preloader: true, //enable preloader\n      source: function (query, render) {\n        var autocomplete = this;\n        var results = [];\n        if (query.length === 0) {\n          render(results);\n          return;\n        }\n        // Show Preloader\n       // autocomplete.preloaderShow();\n        // Do Ajax request to Autocomplete data\n        app.request({\n          url: conf.server + '/profiles/search',\n          method: 'GET',\n          dataType: 'json',\n          //send \"query\" to server. Useful in case you generate response dynamically\n          data: {\n            q: query\n          },\n          success: function (item) {\n            // Find matched items\n            for (var i = 0; i < item.data.length; i++) {\n               results.push(item.data[i]);\n            }\n            // Hide Preoloader\n            //autocomplete.preloaderHide();\n            // Render items by passing array with result items\n            render(results);\n          }\n        });\n      },\n      on: {\n        change: function (value) {\n          if (value && value[value.length - 1]) {\n            self.setState({ involvements: self.state.involvements.concat({ fullname: value[value.length - 1].fullname, id: value[value.length - 1].id }) })\n          }\n        },\n      },\n    });\n  }\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  setInstance(){\n    const self = this;\n    this.$f7router.navigate('/time_sheets/');\n  }\n\n  pageAfterIn() {\n    this.loadCalender();\n    this.loadAssociation();\n  }\n\n\n  loadCalender() {\n    const self = this;\n    const app = self.$f7;\n\n    app.calendar.create({\n      inputEl: '#sheet-date-calendar',\n      value: [new Date()],\n      closeOnSelect: true,\n      firstDay: 6,\n      weekendDays: [4, 5],\n      monthNames: ['فروردين', 'ارديبهشت', 'خرداد', 'تیر', 'مرداد', 'شهریور', 'مهر', 'آبان', 'آذر', 'دی', 'بهمن', 'اسفند'],\n      dayNames: ['یکشنبه', 'دوشنبه', 'سه شنبه', 'چهارشنبه', 'پنج‌شنبه', 'جمعه', 'شنبه'],\n      dayNamesShort: ['یک', 'دو', 'سه ', 'چهار', 'پنج‌', 'جمعه', 'شنبه'],\n      on: {\n        closed: function (c) {\n          self.setState({ timeSheetDate: c.value[0].a });\n        }\n      }\n    });\n  }\n\n  removeAssociation(id, kind){\n    this.setState({\n      associations: this.state.associations.filter(function (association) {\n        return (association.id !== id || association.kind !== kind)\n      })\n    });\n  }\n\n  removeInvolvement(id){\n    this.setState({\n      involvements: this.state.involvements.filter(function (involvement) {\n        return involvement.id !== id\n      })\n    });\n  }\n\n\n\n\n  render() {\n    const {time_sheet, associations, involvements} = this.state;\n    return (\n      <Page onPageAfterIn={this.pageAfterIn.bind(this)}>\n        <Navbar title={dict.time_sheet_form} backLink={dict.back} />\n        <BlockTitle>{dict.time_sheet_form}</BlockTitle>\n        <TimeSheetForm \n          time_sheet={time_sheet} submit={this.submit}\n           editing={true} handleChange={this.handleChangeValue}\n           associations={associations} removeAssociation={this.removeAssociation}\n           involvements={involvements} removeInvolvement={this.removeInvolvement}\n           />\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { List, ListItem, Card } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport { Chart } from 'react-charts'\nimport { color } from \"d3\";\nimport TaskList from \"../tasks/list\"\nimport WorkList from \"../tasks/workList\"\nconst ProfileShow = (props) => {\n\n  if (props.profile) {\n    console.log(props)\n    return (\n      <React.Fragment>\n        <List className='fs-12'>\n          <ListItem\n            key={'profile-show' + props.profile.id}\n            title={props.profile.fullname}\n            after=''>\n            <img slot=\"media\" src={props.profile.avatar} width=\"27\" height=\"27\" />\n          </ListItem>\n\n        </List>\n        <Card>\n          <TaskList tasks={props.profile.the_tasks} header={dict.tasks} sortChange={props.sortChange} />\n        </Card>\n        <Card>\n          <WorkList works={props.profile.the_works} header={dict.works} sortChange={props.sortChange} />\n        </Card>\n      </React.Fragment>\n    )\n  } else {\n    return (null)\n  }\n}\nexport default ProfileShow;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Link,\n  Tabs,\n  Toolbar,\n  Tab,\n  Range,\n  Block,\n  Icon, Fab\n} from 'framework7-react';\nimport { dict } from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport ProfileShow from \"../../containers/profiles/show\"\n\nexport default class Layout extends Component {\n  constructor() {\n    super();\n    this.getInstance = this.getInstance.bind(this);\n    \n    this.state = {\n      token: window.localStorage.getItem('token'),\n      profile: null,\n      id: null,\n      actuals: null,\n      metas: null,\n      channels: null,\n    }\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n  }\n\n  componentDidMount() {\n    MyActions.getInstance('profiles', this.$f7route.params['profileId'], this.state.token);\n  }\n\n  getInstance() {\n    var profile = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (profile && klass === 'Profile') {\n      this.setState({\n        profile: profile,\n        id: profile.id,\n      });\n    }\n  }\n\n  fab() {\n    if (this.state.profile) {\n      return (\n        <Fab href={\"/profiles/\" + this.state.profile.id + \"/edit\"} target=\"#main-view\" position=\"left-bottom\" slot=\"fixed\" color=\"lime\">\n          <Icon ios=\"f7:edit\" aurora=\"f7:edit\" md=\"material:edit\"></Icon>\n          <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n        </Fab>\n      )\n    }\n  }\n\n\n  render() {\n    const { profile } = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.profiles} backLink={dict.back} />\n        {this.fab()}\n        <ProfileShow profile={profile} />\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { List,ListItem } from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\nimport Moment from 'react-moment';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\nimport ExpertiesList from \"./experties\";\n\nconst ProfileList = (props) => {\n\n  if (props.profiles) {\n    return (\n      <List mediaList>\n        {props.profiles.map((profile) =>\n          <ListItem\n          key={crypto.lib.WordArray.random(32)}\n          link={\"/profiles/\" + profile.id}\n          title={profile.fullname}\n          after=\"\"\n          subtitle=\"\"\n          text=\"\"\n          >\n                <img slot=\"media\" src={profile.avatar} width=\"40\" height=\"40\" />\n          </ListItem>\n        )}\n      </List>\n    )\n  } else {\n    return (<ul></ul>)\n  }\n}\nexport default ProfileList;\n","import React from \"react\";\nimport { Page, Navbar, Searchbar, BlockTitle, Subnavbar, Fab, Icon, Link } from 'framework7-react';\nimport ProfileList from \"./list\"\nimport { dict } from '../../Dict';\n\nconst ProfileIndex = (props) => {\n  return (\n    <Page>\n      <Navbar title={dict.profiles} backLink={dict.back} >\n        <Link panelOpen=\"right\">\n          <Icon f7=\"bars\"></Icon>\n        </Link>\n        <Subnavbar inner={false}>\n          <Searchbar\n            disableButtonText={dict.cancel}\n            placeholder={dict.search}\n            onChange={(e) => {\n              props.search({ query: e.target.value })\n            }}\n          ></Searchbar>\n        </Subnavbar>\n      </Navbar>\n      <BlockTitle></BlockTitle>\n      <Fab href=\"/profiles/new\" target=\"#main-view\" position=\"left-bottom\" slot=\"fixed\" color=\"deeporange\">\n        <Icon ios=\"f7:add\" aurora=\"f7:add\" md=\"material:add\"></Icon>\n        <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n      </Fab>\n      <ProfileList profiles={props.profiles} />\n\n    </Page>\n  )\n}\nexport default ProfileIndex;\n","import React from \"react\"\nimport { Page,Fab, Icon } from 'framework7-react';\nimport ModelStore from \"../../stores/ModelStore\";\nimport ProfileIndex from \"../../containers/profiles/index\"\nimport * as MyActions from \"../../actions/MyActions\";\nimport { dict} from '../../Dict';\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\n\nexport default class Layout extends React.Component {\n  constructor() {\n    super();\n    this.getList = this.getList.bind(this);\n    this.search = this.search.bind(this);\n    \n    this.state = {\n      token: window.localStorage.getItem('token'),\n      profiles: null,\n      query: null,\n    }\n  }\n  componentWillMount() {\n    ModelStore.on(\"got_list\", this.getList);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_list\", this.getList);\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  loadData(){\n    MyActions.getList('profiles', this.state.page, {}, this.state.token);\n  }\n\n  search(obj){\n    this.setState(obj, () => {\n      MyActions.getList('profiles/search', this.state.page, {q: this.state.query}, this.state.token);\n  });    \n  }\n\n  getList() {\n    var profiles = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    if (profiles && klass === 'Profile'){\n      this.setState({\n        profiles: profiles,\n      });\n    }\n  }\n\n  render() {\n    const {profiles} = this.state;\n    return(<ProfileIndex profiles={profiles} search={this.search}/>)\n  }\n}\n","import React from \"react\";\nimport { List, ListInput, CardFooter, Button, Card, Link, CardHeader, CardContent, Row } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport crypto from 'crypto-js';\nimport ExpertiesList from \"./experties\";\nimport ImageUploader from 'react-images-upload';\nconst ProfileForm = (props) => {\n  if (props.profile) {\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>{dict.profile_info}</CardHeader>\n          <CardContent>\n            <List >\n              <ListInput\n                label={dict.firstname}\n                type=\"text\"\n                placeholder='...'\n                defaultValue={props.name}\n                onInput={(e) => {\n                  props.handleChange({ name: e.target.value })\n                }}\n              />\n\n              <ListInput\n                label={dict.surename}\n                type=\"text\"\n                placeholder='...'\n                defaultValue={props.surename}\n                onInput={(e) => {\n                  props.handleChange({ surename: e.target.value })\n                }}\n              />\n            </List>\n          </CardContent>\n          <CardFooter>\n            <Link></Link>\n            <Link className=\"btn-notice\"></Link>\n            <Button className=\"col btn\" fill onClick={props.submit}>{dict.submit}</Button>\n          </CardFooter>\n        </Card>\n\n\n\n        <Card>\n          <CardHeader>\n            <img src={props.avatar} width=\"40\" height=\"40\"></img>\n          </CardHeader>\n          <ImageUploader\n            withIcon={true}\n            buttonText={dict.choose_image}\n            onChange={props.onDrop}\n            buttonClassName='upload-btn'\n            imgExtension={['.jpg', '.jpeg', '.png']}\n            maxFileSize={5242880}\n          />\n        </Card>\n\n\n      </React.Fragment>\n    )\n  } else {\n    return (null)\n  }\n\n}\nexport default ProfileForm;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport ProfileForm from \"../../containers/profiles/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\nexport default class ProfileCreate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.handleChangeValueFields = this.handleChangeValueFields.bind(this);\n    this.removeActual = this.removeActual.bind(this);\n    this.getInstance = this.getInstance.bind(this);\n    this.submitFields = this.submitFields.bind(this);\n    this.onDrop = this.onDrop.bind(this);    \n    this.getList = this.getList.bind(this);\n    \n    \n    this.getList = this.getList.bind(this);\n\n    this.state = {\n      profile: {},\n      metas: null,\n      token: window.localStorage.getItem('token'),\n      fields: [],\n      name: 'dd',\n      surename: '',\n      pictures: [],\n      avatar: null,\n    }\n  }\n\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.getInstance);\n    ModelStore.on(\"deleted_instance\", this.getInstance);\n    ModelStore.on(\"got_list\", this.getList);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.getInstance);\n    ModelStore.removeListener(\"deleted_instance\", this.getInstance);\n    ModelStore.removeListener(\"got_list\", this.getList);\n  }\n\n  componentDidMount(){\n    this.loadData();\n\n  }\n\n  loadData(){\n    MyActions.getList('metas', this.state.page);\n  }\n\n  onDrop(picture) {\n    console.log(picture[0])\n    MyActions.fileUpload('profiles', this.state.id, picture[0], this.state.token);\n  }\n\n\n  submit(){\n    var data = {id: this.state.id, name: this.state.name, surename: this.state.surename}\n    MyActions.updateInstance('profiles', data, this.state.token);\n  }\n\n  submitFields(){\n    var data = {meta_id: this.state.metaId, content: this.state.fields}\n    MyActions.setInstance('actuals', data, this.state.token);\n  }\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  handleChangeValueFields(key, value, metaId) {\n    var fields = this.state.fields\n    if (fields.length > 0) {\n      for (let i = 0; i < fields.length; i++) {\n        if (fields[i].fid && fields[i].fid === key) {\n          let newState = Object.assign({}, this.state);\n          newState.fields[i] = { fid: key, value: value, metaId: metaId }\n          this.setState(newState);\n        } else {\n          this.setState({ fields: this.state.fields.concat({ fid: key, value: value , metaId:metaId}) });\n        }\n      }\n    } else {\n      this.setState({ fields: this.state.fields.concat({ fid: key, value: value, metaId:metaId }) });\n    }\n  }\n\n  setInstance(){\n    const self = this;\n    this.$f7router.navigate('/profiles/');\n  }\n\n  getInstance() {\n    var profile = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (profile && klass === 'Profile') {\n      this.setState({\n        metas: profile.metas,\n        profile: profile\n      });\n    }\n  }\n\n\n  removeActual(uuid){\n    MyActions.removeInstance('actuals', {uuid: uuid});\n  }\n\n  getList() {\n    var metas = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    if (metas && klass === 'Meta'){\n      this.setState({\n        metas: metas,\n      });\n    }\n  }\n\n\n\n  render() {\n    const {profile, metas, name, avatar, surename} = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.profile_form} backLink={dict.back} />\n        <BlockTitle>{dict.profile_form}</BlockTitle>\n        <ProfileForm name={name} avatar={avatar} surename={surename} metas={metas} onDrop={this.onDrop} removeActual={this.removeActual} submitFields={this.submitFields} submit={this.submit} editing={true} handleChangeValueFields={this.handleChangeValueFields} handleChange={this.handleChangeValue}/>\n      </Page>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  BlockTitle,\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport ProfileForm from \"../../containers/profiles/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\nexport default class ProfileCreate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.getInstance = this.getInstance.bind(this);\n    this.onDrop = this.onDrop.bind(this);    \n    \n\n    \n\n    this.state = {\n      name: null,\n      surename: null,\n      token: window.localStorage.getItem('token'),\n      profile: null,\n      id: null, \n      pictures: [],\n      avatar: null,\n    }\n  }\n\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.setInstance);\n    ModelStore.on(\"file_posted\", this.getInstance);    \n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n    ModelStore.removeListener(\"file_posted\", this.getInstance);\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  loadData(){\n    if (this.$f7route.params['profileId']) {\n      MyActions.getInstance('profiles', this.$f7route.params['profileId'], this.state.token);\n    }\n  }\n\n  onDrop(picture) {\n    console.log(picture[0])\n    MyActions.fileUpload('profiles', this.state.id, picture[0], this.state.token);\n  }\n\n\n  submit(){\n    var data = {id: this.state.id, name: this.state.name, surename: this.state.surename}\n    MyActions.updateInstance('profiles', data, this.state.token);\n  }\n\n\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n\n\n  setInstance(){\n    const self = this;\n    this.$f7router.navigate('/profiles/');\n  }\n\n  getInstance() {\n    var profile = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (profile && klass === 'Profile') {\n      this.setState({\n        id: profile.id, \n        profile: profile,\n        name: profile.name,\n        surename : profile.surename,\n        avatar: profile.avatar,\n      });\n    }\n  }\n\n\n\n\n\n\n  render() {\n    const {profile, name, surename, avatar} = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.profile_form} backLink={dict.back} />\n        <BlockTitle>{dict.profile_form}</BlockTitle>\n        <ProfileForm profile={profile}\n          name={name} avatar={avatar} surename={surename} onDrop={this.onDrop}  \n         submit={this.submit} editing={true} \n         handleChange={this.handleChangeValue} \n         />\n      </Page>\n    );\n  }\n}\n\n","import React from \"react\";\nimport { List, BlockTitle, ListItem, Block, Row, Col, Button, Link } from 'framework7-react';\nimport { stateToHTML } from \"draft-js-export-html\";\nimport { EditorState, convertFromRaw } from \"draft-js\";\nimport { Editor } from 'react-draft-wysiwyg';\nimport { dict } from '../../Dict';\nimport Moment from 'react-moment';\nimport CommentForm from \"../comments/form\"\nimport CommentList from \"../comments/list\"\nimport 'moment-timezone';\nimport 'moment/locale/fa';\n\nconst ReportShow = (props) => {\n\n  function commentable(){\n    if (props.access.includes('view_reports')) {\n      return (\n        <CommentForm\n          model={props.task} submit={props.submitComment}\n          handleChange={props.handleChange} \n    \n         \n        />\n      )\n    }\n  }\n\n  function comments(){\n    if (props.comments) {\n     return( <CommentList\n      comments={props.comments} deleteCommentConfirm={props.deleteCommentConfirm}\n      loadMore={props.loadMore} />)\n    }\n  }\n  if (props.report && props.report.draft) {\n    const contentState = convertFromRaw(props.report.draft);\n    const editorState = EditorState.createWithContent(contentState);\n    function parent() {\n      if (props.report.the_work) {\n        return (<ListItem title={props.report.the_work.title} href={'/works/' + props.report.the_work.id}></ListItem>)\n      }\n      if (props.report.the_task) {\n        return (<ListItem title={props.report.the_task.title} href={'/tasks/' + props.report.the_task.id}></ListItem>)\n      }\n    }\n\n    function creation(t) {\n      var date = new Date(new window.ODate(t))\n      return (<Moment date={date} fromNow></Moment>)\n    }\n    return (\n      <React.Fragment>\n        <Block>\n          <Row>\n\n          </Row>\n        </Block>\n        <List simple-list>\n          {parent()}\n        </List>\n\n        <List simple-list>\n          <ListItem\n            key={'profile' + props.report.profile.id}\n            title={props.report.profile.fullname}\n            after=''>\n            <img slot=\"media\" src={props.report.profile.avatar} width=\"27\" height=\"27\" />\n          </ListItem>\n        </List>\n\n\n\n\n        <BlockTitle>{dict.title}</BlockTitle>\n        <List simple-list>\n          <ListItem>{props.report.title}</ListItem>\n        </List>\n\n        <BlockTitle>{dict.content}</BlockTitle>\n        <Editor editorState={editorState}\n          toolbar={{ options: [] }}\n          readOnly={true}\n        />\n        <List simple-list>\n          <ListItem title={creation(props.report.creation_date)}></ListItem>\n        </List>\n\n        <BlockTitle>{dict.attachments}</BlockTitle>\n        <List>\n          {props.report.attachments.map((attachment) =>\n            <li className=\"\">\n              <div className=\"item-content\">\n                <div className=\"item-inner\">\n                  <div className=\"item-title\">\n                    <a className=\"link external\" target=\"_blank\" href={attachment.link}>\n                      <i className=\"fa ml-5 fa-cloud-download\" aria-hidden=\"true\"></i>\n                      {attachment.filename}\n                    </a>\n                  </div>\n                </div>\n              </div>\n            </li>\n          )}\n        </List>\n\n        {commentable()}\n        {comments()}\n\n\n      </React.Fragment>\n    )\n  } else {\n    return (null)\n  }\n}\nexport default ReportShow;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  Link,\n  BlockTitle,\n  Icon, Fab\n} from 'framework7-react';\nimport { dict } from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport ReportShow from \"../../containers/reports/show\";\n\n\nexport default class Layout extends Component {\n  constructor() {\n    super();\n    this.getInstance = this.getInstance.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.getList = this.getList.bind(this);\n    this.submitComment = this.submitComment.bind(this);\n    this.deleteComment = this.deleteComment.bind(this);\n    this.deleteCommentConfirm = this.deleteCommentConfirm.bind(this);\n    \n    this.loadMore = this.loadMore.bind(this);\n\n\n\n\n    this.state = {\n      report: null,\n      id: null,\n      page: 1,\n      selectedChannel: null,\n      sheetOpened: false,\n      commentContent: '',\n      comments: null,\n      access: null,\n      token: window.localStorage.getItem('token'),\n\n    }\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.setInstance);\n    ModelStore.on(\"got_list\", this.getList);\n    ModelStore.on(\"deleted_instance\", this.getInstance);\n\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n    ModelStore.removeListener(\"got_list\", this.getList);\n    ModelStore.removeListener(\"deleted_instance\", this.getInstance);\n  }\n\n  componentDidMount() {\n    MyActions.getInstance('reports', this.$f7route.params['reportId'], this.state.token);\n  }\n\n  getInstance() {\n    var report = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (report && klass === 'Report') {\n      this.setState({\n        report: report,\n        id: report.id,\n        comments: report.the_comments,\n        access: report.user_access,\n      });\n    }\n    console.log(report)\n  }\n\n  getList() {\n\n  }\n\n  setInstance() {\n    var report = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (report && klass === 'Report') {\n      this.setState({\n        report: report,\n        comments: report.the_comments,\n        page: 1\n      });\n    }\n  }\n\n  loadMore() {\n    this.setState({ page: this.state.page + 1 }, () => {\n      MyActions.getInstance('reports', this.$f7route.params['reportId'], this.state.token, this.state.page);\n    });\n  }\n\n  fab() {\n    if (this.state.report) {\n      return (\n        <Fab href={\"/reports/\" + this.state.report.id + \"/edit\"} target=\"#main-view\" position=\"left-bottom\" slot=\"fixed\" color=\"lime\">\n          <Icon ios=\"f7:edit\" aurora=\"f7:edit\" md=\"material:edit\"></Icon>\n          <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n        </Fab>\n      )\n    }\n  }\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n\n\n  submitComment() {\n    var data = { commentable_type: 'Report', commentable_id: this.state.id, content: this.state.commentContent }\n    MyActions.setInstance('comments', data, this.state.token);\n  }\n\n\n  deleteCommentConfirm(id) {\n    const self = this;\n    const app = self.$f7;\n    app.dialog.confirm(dict.are_you_sure, dict.alert, () => self.deleteComment(id))\n  }\n\n  deleteComment(id) {\n    var data = { id: id }\n    MyActions.removeInstance('comments', data, this.state.token, this.state.page);\n  }\n\n  render() {\n    const { report, comments , access} = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.reports} >\n        <Link panelOpen=\"right\">\n          <Icon f7=\"bars\"></Icon>\n        </Link>\n      </Navbar>\n        <BlockTitle></BlockTitle>\n        {this.fab()}\n        <ReportShow \n          report={report} comments={comments} submitComment={this.submitComment}\n          deleteCommentConfirm={this.deleteCommentConfirm} submit={this.submit} \n          handleChange={this.handleChangeValue} loadMore={this.loadMore} \n          access={access}\n          />\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { Card, CardHeader, Link, CardContent, Row, Col} from 'framework7-react';\nimport crypto from 'crypto-js';\n\nimport { dict } from \"../../Dict\";\n\nconst ReportList = (props) => {\n  if (props.reports && props.reports.length > 0) {\n    return (\n      <React.Fragment>\n        <Row noGap>\n          {props.reports.map((report) =>\n            <Col width=\"100\" tabletWidth=\"33\" key={crypto.lib.WordArray.random(128/8)}> \n              <Card className=\"demo-facebook-card\">\n                <CardHeader className=\"no-border\">\n                <div className=\"demo-facebook-avatar\"><Link tooltip={report.profile.fullname} href={'/profiles/' + report.profile.id}><img src={report.profile.avatar} height=\"34\" /></Link></div>\n                  <div className=\"demo-facebook-name \">\n                    <div className=\"demo-facebook-profile \">\n                      <Link className=\"gray-color\" href={'/profiles/' + report.profile.id}>{report.profile.fullname.substring(0, 40)}</Link>\n                    </div>\n                    <Link tooltip={dict.view} className=\"gray-color\" href={'/reports/' + report.id}>{report.title.substring(0, 15) + '..'}</Link></div>\n                  <div className=\"demo-facebook-date\">\n                    \n                  </div>\n                </CardHeader>\n                <CardContent className='lightgray-color fs-12'>\n                  {report.content.substring(0, 150) + '...'}\n                  <div className=\"demo-facebook-more\">\n                    <Link className=\"gray-color\" href={'/reports/' + report.id}>\n                      {dict.view}\n                      <i className=\"va fa fa-arrow-left mr-2\"></i>\n                    </Link>\n                  </div>\n                </CardContent>\n              </Card>\n            </Col>\n          )}\n        </Row>\n        <Row noGap>\n          <Col></Col>\n          <Col className='center mb-20'>\n          <a className=\"gray-color\" onClick={() => props.loadMore()}>\n            {dict.more}\n          </a>\n          </Col>\n          <Col></Col>\n        </Row>\n      </React.Fragment>\n    )\n  } else {\n    return (<ul></ul>)\n  }\n}\nexport default ReportList;\n","import React from \"react\";\nimport { Page, Navbar, Subnavbar, Searchbar, BlockTitle, Link, Fab, Icon, Toolbar, Tabs, Tab, Block } from 'framework7-react';\nimport ReportList from \"./list\"\nimport { dict } from '../../Dict';\n\nconst ReportIndex = (props) => {\n  return (\n    <Page pageContent={false}>\n      <Navbar title={dict.reports} >\n        <Link panelOpen=\"right\">\n          <Icon f7=\"bars\"></Icon>\n        </Link>\n        <Subnavbar inner={false}>\n          <Searchbar\n            disableButtonText={dict.cancel}\n            placeholder={dict.search}\n            onChange={(e) => {\n              props.search({ query: e.target.value })\n            }}\n          ></Searchbar>\n        </Subnavbar>\n      </Navbar>\n      <Toolbar tabbar bottom>\n          <Link tabLink=\"#tab-1\" tabLinkActive><i className=\"va ml-5 fa fa-link\"></i></Link>\n          <Link tabLink=\"#tab-2\"><i className=\"va ml-5 fa fa-plug\"></i></Link>\n          <Link tabLink=\"#tab-3\"><i className=\"va ml-5 fa fa-user-o\"></i></Link>\n        </Toolbar>\n      <BlockTitle></BlockTitle>\n      <Fab href=\"/reports/new\" target=\"#main-view\" position=\"left-bottom\" slot=\"fixed\" color=\"deeporange\">\n        <Icon ios=\"f7:add\" aurora=\"f7:add\" md=\"material:add\"></Icon>\n        <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n      </Fab>\n      <Tabs swipeable>\n        <Tab id=\"tab-1\" className=\"page-content\" tabActive>\n          <Block>\n            <ReportList reports={props.reports} interaction={props.interaction} loadMore={props.loadMore} />\n          </Block>\n        </Tab>\n\n        <Tab id=\"tab-2\" className=\"page-content\" >\n          <Block>\n            <ReportList reports={props.reports} interaction={props.interaction} loadMore={props.loadMore} />\n          </Block>\n        </Tab>\n\n        <Tab id=\"tab-3\" className=\"page-content\" >\n          <Block>\n            <ReportList reports={props.reports} interaction={props.interaction} loadMore={props.loadMore} />\n          </Block>\n        </Tab>\n      </Tabs>\n    </Page>\n  )\n}\nexport default ReportIndex;\n","\nexport function loggedIn() {\n  console.log('>>>>>>>>>>>>>>>>>>>>>');\n    var token = window.localStorage.getItem('token');\n    if (token) {\n      return true\n    } else {\n      this.$f7router.navigate('/login/');\n    }\n\n}\n","import React from \"react\"\nimport { Page, Fab, Icon } from 'framework7-react';\nimport ModelStore from \"../../stores/ModelStore\";\nimport ReportIndex from \"../../containers/reports/index\"\nimport * as MyActions from \"../../actions/MyActions\";\nimport { loggedIn } from \"../../components/users/loggedIn.js\"\n\n\nexport default class Report extends React.Component {\n  constructor() {\n    super();\n    this.getList = this.getList.bind(this);\n    this.loggedIn = loggedIn.bind(this);\n    this.interaction = this.interaction.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.search = this.search.bind(this);\n    this.loadMore = this.loadMore.bind(this);\n\n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      reports: [],\n      query: null,\n      page: 1\n    }\n  }\n  componentWillMount() {\n    ModelStore.on(\"got_list\", this.getList);\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_list\", this.getList);\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n  }\n\n  componentDidMount() {\n    this.loggedIn();\n    this.loadData();\n  }\n\n  loadData() {\n    MyActions.getList('reports', this.state.page, {}, this.state.token);\n  }\n\n  search(obj) {\n    this.setState({ reports: [], page: 1 });\n    this.setState(obj, () => {\n      MyActions.getList('reports/search', this.state.page, { q: this.state.query });\n    });\n\n  }\n\n  setInstance() {\n    var report = ModelStore.getIntance()\n    if (report) {\n      this.setState({ reports: this.state.reports.map(el => (el.id === report.id ? Object.assign({}, el, report) : el)) });\n    }\n  }\n\n\n  loadMore() {\n    if (this.state.query && this.state.query.length > 0) {\n      this.setState({ page: this.state.page + 1 }, () => {\n        MyActions.getList('reports/search', this.state.page, {q: this.state.query }, this.state.token);\n      });\n    } else {\n      this.setState({ page: this.state.page + 1 }, () => {\n        MyActions.getList('reports', this.state.page, {}, this.state.token);\n      });\n    }\n  }\n\n  getList() {\n    var reports = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    if (reports.length > 0 && klass === 'Report') {\n      this.setState({\n        reports: this.state.reports.concat(reports),\n      });\n    }\n  }\n\n  interaction(interaction_type, interactionable_id, interactionable_type, source_type = null, source_id = null) {\n    var data = { interaction_type: interaction_type, interactionable_id: interactionable_id, interactionable_type: interactionable_type, source_type: source_type, source_id: source_id }\n    MyActions.setInstance('interactions', data, this.state.token);\n  }\n\n  render() {\n    const { reports } = this.state;\n    return (<ReportIndex interaction={this.interaction} loadMore={this.loadMore} reports={reports} search={this.search} />)\n  }\n}\n","import React from \"react\";\nimport { Card, CardContent, CardHeader } from 'framework7-react';\nimport 'react-dropzone-uploader/dist/styles.css'\nimport '../../css/upload.css'\nimport Dropzone from 'react-dropzone-uploader'\nimport { dict } from \"../../Dict\";\nimport { conf } from '../../conf';\nconst server= conf.server\n\nconst UploadForm = (props) => {\n  // specify upload params and url for your files\n  const getUploadParams = ({ meta }) => { return { fields:{'upload[title]':props.title, 'upload[uuid]': props.uuid}, url: server+'/uploads' } }\n  \n  // called every time a file's `status` changes\n  const handleChangeStatus = ({ meta, file }, status) => { console.log(status, meta, file) }\n  \n  // receives array of files that are done uploading when submit button is clicked\n  const handleSubmit = (files, allFiles) => {\n    console.log(files.map(f => f.meta))\n    allFiles.forEach(f => f.remove())\n  }\n\n  return (\n    <Card>\n      <CardHeader>{dict.attachment}</CardHeader>\n      <CardContent>\n    <Dropzone\n      getUploadParams={getUploadParams}\n      onChangeStatus={handleChangeStatus}\n      onSubmit={handleSubmit}\n      autoUpload={true}\n      submitButtonDisabled={true}\n      inputContent={dict.drag_or_browse}\n    />\n    </CardContent>\n    </Card>\n  )\n}\n\nexport default UploadForm;\n","import React from \"react\";\nimport { List, BlockTitle, ListInput, Link, CardFooter, Button, Card, CardHeader, Col } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport crypto from 'crypto-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport { EditorState, convertFromRaw } from \"draft-js\";\nimport UploadForm from \"../uploads/form\"\nimport fa from '../../js/fa.js';\n\nconst ReportForm = (props) => {\n\n  function deleteButton() {\n    if (props.editing) {\n      return (\n        <Col>\n          <Button className=\"col btn ml-5\" outline color='red' disabled={!props.editing} onClick={() => props.deleteReportConfirm()}>{dict.delete}</Button>\n        </Col>\n      )\n    }\n  }\n\n  function attachments() {\n    if (props.previous_attachments) {\n      return (\n        <React.Fragment>\n          <BlockTitle>{dict.previous_attachments}</BlockTitle>\n          <List>\n            {props.attachments.map((attachment) =>\n              <li className=\"\">\n                <div className=\"item-content\">\n                  <div className=\"item-inner\">\n                    <div className=\"item-title\">\n                      <a className=\"link\" onClick={() => props.removeAttachment(attachment.id)}>\n                        <i className=\"fa ml-5 fa-trash\" aria-hidden=\"true\"></i>\n                        {attachment.filename}\n                      </a>\n                    </div>\n                  </div>\n                </div>\n              </li>\n            )}\n          </List>\n        </React.Fragment>\n      )\n    }\n  }\n  if (props.report) {\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>{dict.new_report}</CardHeader>\n          <List >\n            <ListInput\n              label={dict.title + '*'}\n              type=\"text\"\n              placeholder='...'\n              maxlength='65'\n              defaultValue={props.title}\n              onInput={(e) => {\n                props.handleChange({ title: e.target.value })\n              }}\n            />\n            <Editor\n              editorState={props.editorState}\n              placeholder={dict.content}\n              localization={{\n                locale: 'fa',\n                translations: fa\n              }}\n              toolbar={{\n                options: ['inline', 'list', 'link'],\n                inline: { options: ['bold', 'italic', 'underline'] },\n                image: {\n                  uploadCallback: props.uploadImageCallBack,\n                  previewImage: true,\n                },\n              }}\n              onEditorStateChange={props.onEditorStateChange}\n            />\n          </List>\n\n          <CardFooter>\n          {deleteButton()}\n            <Link></Link>\n            <Link className=\"btn-notice\"></Link>\n            <Button className=\"col btn\" fill onClick={(e) => props.submit(e)} >{dict.submit}</Button>\n          </CardFooter>\n        </Card>\n        <UploadForm uploadableType='Report' uuid={props.uuid} />\n\n\n\n      </React.Fragment>\n    )\n  } else {\n    return (null)\n  }\n}\nexport default ReportForm;\n","import { conf } from '../../conf';\nexport function uploadImageCallBack(file) {\n  return new Promise(\n    (resolve, reject) => {\n      const xhr = new XMLHttpRequest(); // eslint-disable-line no-undef\n      xhr.open('POST', conf.server+'/uploads');\n      xhr.setRequestHeader('Authorization', 'Client-ID 8d26ccd12712fca');\n      const data = new FormData(); // eslint-disable-line no-undef\n      data.append('upload[image]', file);\n      xhr.send(data);\n      xhr.addEventListener('load', () => {\n        const response = JSON.parse(xhr.responseText);\n        resolve(response);\n      });\n      xhr.addEventListener('error', () => {\n        const error = JSON.parse(xhr.responseText);\n        reject(error);\n      });\n    },\n  );\n}\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon\n} from 'framework7-react';\nimport { dict } from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport ReportForm from \"../../containers/reports/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\nimport { EditorState, convertFromRaw, convertToRaw } from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport { uploadImageCallBack } from \"./uploader.js\";\nimport crypto from 'crypto-js';\n\nexport default class ReportCreate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.onEditorStateChange = this.onEditorStateChange.bind(this)\n    this.getList = this.getList.bind(this)\n    this.uploadImageCallBack = uploadImageCallBack.bind(this);\n\n\n    this.state = {\n      report: {},\n      editorState: EditorState.createEmpty(),\n      token: window.localStorage.getItem('token'),\n      title: null,\n      interaction: null,\n      uuid: crypto.enc.Base64.stringify(crypto.lib.WordArray.random(128/8)),\n      page: 0\n    }\n  }\n\n\n  componentWillMount() {\n    ModelStore.on(\"set_instance\", this.setInstance);\n    ModelStore.on(\"got_list\", this.getList);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n    ModelStore.removeListener(\"got_list\", this.getList);\n  }\n\n\n\n  submit() {\n    this.$$('.btn').hide();\n    this.$$('.btn-notice').text(dict.submitting);\n    \n  //  this.$$()\n    const blocks = convertToRaw(this.state.editorState.getCurrentContent()).blocks;\n    const value = blocks.map(block => (!block.text.trim() && '\\n') || block.text).join('\\n');\n    var taskId = null\n    var workId = null\n    if (this.$f7route.params['callerType'] == 'tasks'){\n      taskId = this.$f7route.params['callerId']\n    }\n    if (this.$f7route.params['callerType'] == 'works'){\n      workId = this.$f7route.params['callerId']\n    }\n    var data = { task_id: taskId, work_id: workId, uuid: this.state.uuid, title: this.state.title, content: value, draft: convertToRaw(this.state.editorState.getCurrentContent()) }\n    if (this.state.title) {\n      MyActions.setInstance('reports', data, this.state.token);\n    } else {\n      const self = this;\n      self.$f7.dialog.alert(dict.incomplete_data, dict.alert);\n    }\n  }\n\n  onEditorStateChange(editorState) {\n    this.setState({\n      editorState,\n    });\n  };\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  loadData() {\n    \n  }\n\n  componentDidUpdate(prev, prevstate) {\n  }\n\n  getList() {\n\n  }\n\n  setInstance() {\n    var report = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (report && klass === 'Report') { \n      this.$$('.btn').show();\n      this.$f7router.navigate('/reports/'+ report.id);\n    }\n    \n  }\n\n\n\n\n\n  render() {\n    const { report, editorState, uuid } = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.report_form}  backLink={dict.back} />\n        <ReportForm report={report} uuid={uuid} editorState={editorState} onEditorStateChange={this.onEditorStateChange} submit={this.submit} handleChange={this.handleChangeValue} uploadImageCallBack={this.uploadImageCallBack} />\n      </Page>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport ReportForm from \"../../containers/reports/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\nimport { EditorState, convertFromRaw, convertToRaw } from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport {uploadImageCallBack} from \"./uploader.js\"\nimport crypto from 'crypto-js';\n\nexport default class ReportUpdate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.getInstance = this.getInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.onEditorStateChange = this.onEditorStateChange.bind(this)\n    this.getList = this.getList.bind(this)\n    this.removeAttachment = this.removeAttachment.bind(this);\n    this.deleteInstance = this.deleteInstance.bind(this);\n    this.deleteReportConfirm = this.deleteReportConfirm.bind(this);\n    this.deleteReport = this.deleteReport.bind(this);\n    \n    \n\n    this.state = {\n      report: null,\n      editorState: EditorState.createEmpty(),\n      token: window.localStorage.getItem('token'),\n      uuid: crypto.enc.Base64.stringify(crypto.lib.WordArray.random(128/8)),\n      id: null,\n      title: null,\n      draft: null,\n      taskId:  null,\n      workId: null,\n      page: 0\n    }\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.setInstance);\n    ModelStore.on(\"got_list\", this.getList);\n    ModelStore.on(\"deleted_instance\", this.deleteInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n    ModelStore.removeListener(\"got_list\", this.getList);\n    ModelStore.removeListener(\"deleted_instance\", this.deleteInstance);\n  }\n\n  submit(){\n    const blocks = convertToRaw(this.state.editorState.getCurrentContent()).blocks;\n    const value = blocks.map(block => (!block.text.trim() && '\\n') || block.text).join('\\n');\n    var taskId = null\n    var workId = null\n    if (this.state.task){\n      taskId = this.state.task.id\n    }\n    if (this.state.work){\n      workId = this.state.work.id\n    }\n    var data = {\n      id: this.state.id, task_id: taskId, work_id: workId, \n      uuid: this.state.uuid, title: this.state.title, content: value, \n      draft: convertToRaw(this.state.editorState.getCurrentContent()) \n    }\n    MyActions.updateInstance('reports', data, this.state.token);\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  loadData(){\n    const f7: Framework7 = Framework7.instance;\n    f7.toast.show({ text: dict.receiving, closeTimeout: 2000, position: 'top'});\n    if (this.$f7route.params['reportId']) {\n      MyActions.getInstance('reports', this.$f7route.params['reportId'], this.state.token);\n    }\n  }\n\n  getList() {\n\n  }\n\n  getInstance(){\n    var report = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (report && klass === 'Report') { \n      const contentState = convertFromRaw(report.draft);\n      const editorState = EditorState.createWithContent(contentState);\n      this.setState({\n        report: report,\n        title: report.title,\n        id: report.id,\n        task: report.the_task,\n        work: report.the_work,\n        attachments: report.attachments,\n        editorState: editorState\n      });\n    }\n    console.log(report);\n  }\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  onEditorStateChange(editorState){\n      this.setState({\n      editorState,\n    });\n  };\n\n  removeAttachment(id){\n    this.setState({\n      attachments: this.state.attachments.filter(function (attachment) {\n        return attachment.id !== id\n      })\n    });\n    var data = { id: id }\n    MyActions.removeInstance('uploads', data, this.state.token, this.state.page);\n  }\n\n\n  setInstance() {\n    var report = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (report && klass === 'Report') { \n      this.$f7router.navigate('/reports/'+ report.id);\n    }\n    \n  }\n\n\n  deleteReportConfirm(){\n    const self = this;\n    const app = self.$f7;\n    app.dialog.confirm(dict.are_you_sure, dict.alert, self.deleteReport)\n  }\n\n  deleteReport(){\n    var data = { id: this.state.id}\n    MyActions.removeInstance('reports', data, this.state.token);\n  }\n\n  deleteInstance() {\n    if (this.state.task){\n      this.$f7router.navigate('/tasks/'+this.state.task.id);\n    }\n    if (this.state.work){\n      this.$f7router.navigate('/works/'+this.state.work.id);\n    }\n   \n  }\n\n\n\n\n  render() {\n    const { report, editorState, uuid, title, attachments} = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.report} backLink={dict.back} />\n        <BlockTitle>{dict.workflow_form}</BlockTitle>\n        <ReportForm \n        report={report} attachments={attachments} title={title} \n        uuid={uuid} editorState={editorState} editing={true} deleteReportConfirm={this.deleteReportConfirm}\n        onEditorStateChange={this.onEditorStateChange} submit={this.submit}  \n        handleChange={this.handleChangeValue} removeAttachment={this.removeAttachment}/>\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { Page, Navbar, List, BlockTitle, ListItem, Fab, Icon,Preloader, Block} from 'framework7-react';\nimport { dict} from '../../Dict';\n\n\nconst GroupShow = (props) => {\n  if (props.group){\n    return(\n      <React.Fragment>\n        <BlockTitle>{dict.title}</BlockTitle>\n        <List simple-list>\n          <ListItem>{props.group.title}</ListItem>\n        </List>\n\n        <List className='fs-11'>\n        {props.group.the_grouping.map((item) =>\n          <ListItem\n            key={'involvement' + item.profile.id}\n            title={item.profile.fullname}\n            after=''>\n            <img slot=\"media\" src={item.profile.avatar} width=\"27\" height=\"27\" />\n          </ListItem>\n        )}\n      </List>\n\n      </React.Fragment>\n    )\n  } else {\n    return(null)\n  }\n}\nexport default GroupShow;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon, Fab\n} from 'framework7-react';\nimport { dict } from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport GroupShow from \"../../containers/groups/show\"\n\nexport default class Layout extends Component {\n  constructor() {\n    super();\n    this.getInstance = this.getInstance.bind(this);\n    this.submit = this.submit.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n\n\n    \n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      group: null,\n      id: null,\n      user_id: null,\n    }\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.getInstance);\n    ModelStore.on(\"deleted_instance\", this.getInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.getInstance);\n    ModelStore.removeListener(\"deleted_instance\", this.getInstance);\n  }\n\n  componentDidMount() {\n    MyActions.getInstance('groups', this.$f7route.params['groupId'], this.state.token);\n  }\n\n  getInstance() {\n    var group = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (group && klass === 'Group') {\n      this.setState({\n        group: group,\n        id: group.id,\n      });\n    }\n    this.$$('.btn').show();\n  }\n\n\n  submit() {\n    this.$$('.btn').hide();\n    this.$$('.btn-notice').text(dict.submitting);\n    var data = { group_id: this.state.id, user_id: this.state.user_id }\n    MyActions.setInstance('users/assignments', data, this.state.token);\n  }\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  fab() {\n    if (this.state.group) {\n      return (\n        <Fab href={\"/groups/\" + this.state.group.id + \"/edit\"} target=\"#main-view\" position=\"left-bottom\" slot=\"fixed\" color=\"lime\">\n          <Icon ios=\"f7:edit\" aurora=\"f7:edit\" md=\"material:edit\"></Icon>\n          <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n        </Fab>\n      )\n    }\n  }\n\n\n  render() {\n    const { group } = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.groups} backLink={dict.back} />\n        <BlockTitle></BlockTitle>\n        {this.fab()}\n        <GroupShow \n          group={group}  submit={this.submit} \n          handleChange={this.handleChangeValue}\n        />\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { List, ListItem} from 'framework7-react';\nimport crypto from 'crypto-js';\n\nconst GroupList = (props) => {\n\n  if (props.groups) {\n    return (\n      <List mediaList>\n        {props.groups.map((group) =>\n          <ListItem\n            key={crypto.lib.WordArray.random(32)}\n            link={\"/groups/\" + group.id}\n            ignoreCache={true}\n            title={group.title}\n            after=\"\"\n            subtitle=\"\"\n            text=\"\"\n            ></ListItem>\n        )}\n      </List>\n    )} else {\n      return (<ul></ul>)\n    }\n  }\n  export default GroupList;\n","import React from \"react\";\nimport { Page, Navbar, List, BlockTitle, ListItem, Fab, Icon,Preloader, Block} from 'framework7-react';\nimport GroupList from \"./list\"\nimport { dict} from '../../Dict';\n\nconst GroupIndex = (props) => {\n  return(\n    <Page>\n      <Navbar title={dict.groups} backLink={dict.back} >\n      </Navbar>\n      <BlockTitle>{dict.list}</BlockTitle>\n      <Fab href=\"/groups/new\" target=\"#main-view\"  position=\"left-bottom\" slot=\"fixed\" color=\"deeporange\">\n        <Icon ios=\"f7:add\" aurora=\"f7:add\" md=\"material:add\"></Icon>\n        <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n      </Fab>\n      <GroupList groups={props.groups}/>\n    </Page>\n  )\n}\nexport default GroupIndex;\n","import React from \"react\"\nimport { Page,Fab, Icon } from 'framework7-react';\nimport ModelStore from \"../../stores/ModelStore\";\nimport GroupIndex from \"../../containers/groups/index\"\nimport * as MyActions from \"../../actions/MyActions\";\nimport { dict} from '../../Dict';\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\n\nexport default class Layout extends React.Component {\n  constructor() {\n    super();\n    this.getList = this.getList.bind(this);\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      groups: null,\n    }\n  }\n  componentWillMount() {\n    ModelStore.on(\"got_list\", this.getList);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_list\", this.getList);\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  loadData(){\n    const f7: Framework7 = Framework7.instance;\n    f7.toast.show({ text: dict.receiving, closeTimeout: 2000, position: 'top'});\n    MyActions.getList('groups', this.state.page, {}, this.state.token);\n  }\n\n  getList() {\n    var groups = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    if (groups && klass === 'Group'){\n      this.setState({\n        groups: groups,\n      });\n    }\n  }\n\n  render() {\n    const {groups} = this.state;\n    return(<GroupIndex groups={groups}/>)\n  }\n}\n","import React from \"react\";\nimport { List, ListItem, ListInput, Block, Row, Button, BlockTitle, Chip, Link } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport crypto from 'crypto-js';\n\n\nconst GroupForm = (props) => {\n  console.log(props)\n  function groupings() {\n    var chips = [\n      <div>\n        <a className='fs-11 ' href=\"#\" id='time-sheet-grouping'>\n          <div className=\"item-title fs-11\">\n            <i className=\"va-minus-2 ml-5 fa fa-user-plus\"></i>\n            {dict.profiles}:\n        </div>\n        </a>\n      </div>\n    ]\n    if (props.grouping) {\n      props.grouping.map((profile) => {\n        chips.push(<Chip text={profile.fullname} deleteable onClick={() => props.removeGrouping(profile.id)} />)\n      }\n      )\n    }\n    return chips\n  }\n  return (\n    <React.Fragment>\n      <BlockTitle>{dict.group}</BlockTitle>\n      <List >\n        <ListInput\n          label={dict.title}\n          type=\"text\"\n          placeholder='...'\n          defaultValue={props.title}\n          onInput={(e) => {\n            props.handleChange({ title: e.target.value })\n          }}\n        />\n        <ListItem title={groupings()}></ListItem>\n      </List>\n      \n\n      <Block strong>\n        <Row tag=\"p\">\n        <Link className=\"btn-notice\"></Link>\n          <Button className=\"col btn\" fill disabled={!props.editing} onClick={props.submit}>{dict.submit}</Button>\n        </Row>\n      </Block>\n    </React.Fragment>\n  )}\nexport default GroupForm;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport GroupForm from \"../../containers/groups/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\nimport { conf } from '../../conf';\n\nexport default class GroupCreate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.loadGrouping = this.loadGrouping.bind(this);\n    this.removeGrouping = this.removeGrouping.bind(this);\n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      group: {},\n      grouping: [],\n    }\n  }\n\n\n  componentWillMount() {\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n  }\n\n  submit(){\n    var data = {title: this.state.title, grouping: this.state.grouping}\n    MyActions.setInstance('groups', data, this.state.token);\n  }\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  setInstance(){\n    const self = this;\n    this.$f7router.navigate('/groups/');\n  }\n\n  removeGrouping(id){\n    this.setState({\n      grouping: this.state.grouping.filter(function (profile) {\n        return profile.id !== id\n      })\n    });\n  }\n\n  pageAfterIn() {\n    this.loadGrouping();\n  }\n\n\n  loadGrouping() {\n    const self = this;\n    const app = self.$f7;\n    app.autocomplete.create({\n      openIn: 'popup', //open in page\n      openerEl: '#time-sheet-grouping', //link that opens autocomplete\n      multiple: true, //allow multiple values\n      valueProperty: 'id', //object's \"value\" property name\n      textProperty: 'fullname', //object's \"text\" property name\n      searchbarDisableText: dict.cancel,\n      popupCloseLinkText: dict.close,\n      notFoundText: dict.not_found,\n      limit: 50,\n      searchbarPlaceholder: dict.search,\n      //preloader: true, //enable preloader\n      source: function (query, render) {\n        var autocomplete = this;\n        var results = [];\n        if (query.length === 0) {\n          render(results);\n          return;\n        }\n        // Show Preloader\n       // autocomplete.preloaderShow();\n        // Do Ajax request to Autocomplete data\n        app.request({\n          url: conf.server + '/profiles/search',\n          method: 'GET',\n          dataType: 'json',\n          //send \"query\" to server. Useful in case you generate response dynamically\n          data: {\n            q: query\n          },\n          success: function (item) {\n            // Find matched items\n            for (var i = 0; i < item.data.length; i++) {\n               results.push(item.data[i]);\n            }\n            // Hide Preoloader\n            //autocomplete.preloaderHide();\n            // Render items by passing array with result items\n            render(results);\n          }\n        });\n      },\n      on: {\n        change: function (value) {\n          if (value && value[value.length - 1]) {\n            self.setState({ grouping: self.state.grouping.concat({ fullname: value[value.length - 1].fullname, id: value[value.length - 1].id }) })\n          }\n        },\n      },\n    });\n  }\n\n\n\n  render() {\n    const {group, grouping} = this.state;\n    return (\n      <Page onPageAfterIn={this.pageAfterIn.bind(this)}>\n        <Navbar title={dict.group_form} backLink={dict.back} />\n        <BlockTitle>{dict.group_form}</BlockTitle>\n        <GroupForm \n        group={group} submit={this.submit} editing={true} grouping={grouping}\n        handleChange={this.handleChangeValue} removeGrouping={this.removeGrouping}\n        \n        />\n      </Page>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport GroupForm from \"../../containers/groups/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\nimport { conf } from '../../conf';\n\nexport default class GroupCreate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.loadGrouping = this.loadGrouping.bind(this);\n    this.removeGrouping = this.removeGrouping.bind(this);\n    this.getInstance = this.getInstance.bind(this);\n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      group: {},\n      title: null,\n      id: null,\n      grouping: [],\n    }\n  }\n\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n  }\n\n  componentDidMount() {\n    MyActions.getInstance('groups', this.$f7route.params['groupId'], this.state.token);\n  }\n\n  submit(){\n    var data = {id: this.state.id, title: this.state.title, grouping: this.state.grouping}\n    MyActions.updateInstance('groups', data, this.state.token);\n  }\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  setInstance(){\n    const self = this;\n    this.$f7router.navigate('/groups/');\n  }\n\n  removeGrouping(id){\n    this.setState({\n      grouping: this.state.grouping.filter(function (profile) {\n        return profile.id !== id\n      })\n    });\n  }\n\n  pageAfterIn() {\n    this.loadGrouping();\n  }\n\n  getInstance() {\n    var group = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (group && klass === 'Group') {\n      this.setState({\n        group: group,\n        id: group.id,\n        title: group.title,\n        grouping: group.tag_grouping\n      });\n    }\n  }\n\n\n  loadGrouping() {\n    const self = this;\n    const app = self.$f7;\n    app.autocomplete.create({\n      openIn: 'popup', //open in page\n      openerEl: '#time-sheet-grouping', //link that opens autocomplete\n      multiple: true, //allow multiple values\n      valueProperty: 'id', //object's \"value\" property name\n      textProperty: 'fullname', //object's \"text\" property name\n      searchbarDisableText: dict.cancel,\n      popupCloseLinkText: dict.close,\n      notFoundText: dict.not_found,\n      limit: 50,\n      searchbarPlaceholder: dict.search,\n      //preloader: true, //enable preloader\n      source: function (query, render) {\n        var autocomplete = this;\n        var results = [];\n        if (query.length === 0) {\n          render(results);\n          return;\n        }\n        // Show Preloader\n       // autocomplete.preloaderShow();\n        // Do Ajax request to Autocomplete data\n        app.request({\n          url: conf.server + '/profiles/search',\n          method: 'GET',\n          dataType: 'json',\n          //send \"query\" to server. Useful in case you generate response dynamically\n          data: {\n            q: query\n          },\n          success: function (item) {\n            // Find matched items\n            for (var i = 0; i < item.data.length; i++) {\n               results.push(item.data[i]);\n            }\n            // Hide Preoloader\n            //autocomplete.preloaderHide();\n            // Render items by passing array with result items\n            render(results);\n          }\n        });\n      },\n      on: {\n        change: function (value) {\n          if (value && value[value.length - 1]) {\n            self.setState({ grouping: self.state.grouping.concat({ fullname: value[value.length - 1].fullname, id: value[value.length - 1].id }) })\n          }\n        },\n      },\n    });\n  }\n\n\n\n  render() {\n    const {group, grouping, title, id} = this.state;\n    return (\n      <Page onPageAfterIn={this.pageAfterIn.bind(this)}>\n        <Navbar title={dict.group_form} backLink={dict.back} />\n        <BlockTitle>{dict.group_form}</BlockTitle>\n        <GroupForm \n        group={group} submit={this.submit} editing={true} grouping={grouping}\n        id={id} title={title}\n        handleChange={this.handleChangeValue} removeGrouping={this.removeGrouping}\n        \n        />\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { List, ListItem, Toggle, Block, Row, Button, Chip, Col } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport crypto from 'crypto-js';\n\n\nconst SettingForm = (props) => {\n  if (true) {\n    function setting(item) {\n      if (props.notification_setting && props.notification_setting[item]) {\n        return (true)\n      } else {\n        if (props.notification_setting && props.notification_setting[item] == false) {\n          return (false)\n        } else {\n          return (false)\n        }\n      }\n    }\n\n    function blockList() {\n      var chips = [\n        <div>\n          <a className='fs-11 ' href=\"#\" id='user-blocklist'>\n            <div className=\"item-title fs-11\">\n              <i className=\"va-minus-2 ml-5 fa fa-user-plus\"></i>\n              {dict.profiles}:\n          </div>\n          </a>\n        </div>\n      ]\n      if (props.blockList) {\n        props.blockList.map((profile) => {\n          chips.push(<Chip text={profile.fullname} deleteable onClick={() => props.removeBlocked(profile.id)} />)\n        }\n        )\n      }\n      return chips\n    }\n\n    return (\n      <React.Fragment>\n        <List form className='fs-11'>\n          <ListItem>\n            <span >{dict.private}</span>\n            <Toggle className='pd-5' onChange={(e) => props.changeSetting(e, '')} />\n            <span className='pd-10 fs-8'>{dict.if_someone_adds_you_youll_be_asked}</span>\n          </ListItem>\n        </List>\n\n        <List>\n          <ListItem title={dict.blocked_list}></ListItem>\n          <ListItem title={blockList()}></ListItem>\n        </List>\n\n        <div className=\"data-table card\">\n          <table className='fs-11'>\n            <thead>\n              <tr>\n                <td>{dict.notification_type}</td>\n                <td>{dict.mail_notification}</td>\n                <td>{dict.push_notification}</td>\n                <td>{dict.sms}</td>\n              </tr>\n            </thead>\n            <tbody>\n              {}\n              <tr>\n                <td className='fs-11'>{dict.add_involvement_to_tasks}</td>\n                <td><Toggle className='pd-5' checked={setting('add_involvement_to_tasks_email')} onChange={(e) => props.changeSetting(e, 'add_involvement_to_tasks_email')} /></td>\n                <td><Toggle className='pd-5' checked={setting('add_involvement_to_tasks_push')} onChange={(e) => props.changeSetting(e, 'add_involvement_to_tasks_push')} /></td>\n                <td><Toggle className='pd-5' checked={setting('add_involvement_to_tasks_sms')} onChange={(e) => props.changeSetting(e, 'add_involvement_to_tasks_sms')} /></td>\n              </tr>\n              <tr>\n                <td className='fs-11'>{dict.remove_involvement_from_tasks}</td>\n                <td><Toggle className='pd-5' checked={setting('remove_involvement_from_tasks_email')} onChange={(e) => props.changeSetting(e, 'remove_involvement_from_tasks_email')} /></td>\n                <td><Toggle className='pd-5' checked={setting('remove_involvement_from_tasks_push')} onChange={(e) => props.changeSetting(e, 'remove_involvement_from_tasks_push')} /></td>\n                <td><Toggle className='pd-5' checked={setting('remove_involvement_from_tasks_sms')} onChange={(e) => props.changeSetting(e, 'remove_involvement_from_tasks_sms')} /></td>\n              </tr>\n              <tr>\n                <td className='fs-11'>{dict.change_status_tasks}</td>\n                <td><Toggle className='pd-5' checked={setting('change_status_tasks_email')} onChange={(e) => props.changeSetting(e, 'change_status_tasks_email')} /></td>\n                <td><Toggle className='pd-5' checked={setting('change_status_tasks_push')} onChange={(e) => props.changeSetting(e, 'change_status_tasks_push')} /></td>\n                <td><Toggle className='pd-5' checked={setting('change_status_tasks_sms')} onChange={(e) => props.changeSetting(e, 'change_status_tasks_sms')} /></td>\n              </tr>\n              <tr>\n                <td className='fs-11'>{dict.add_works_to_tasks}</td>\n                <td><Toggle className='pd-5' checked={setting('add_works_to_tasks_email')} onChange={(e) => props.changeSetting(e, 'add_works_to_tasks_email')} /></td>\n                <td><Toggle className='pd-5' checked={setting('add_works_to_tasks_push')} onChange={(e) => props.changeSetting(e, 'add_works_to_tasks_push')} /></td>\n                <td><Toggle className='pd-5' checked={setting('add_works_to_tasks_sms')} onChange={(e) => props.changeSetting(e, 'add_works_to_tasks_sms')} /></td>\n              </tr>\n              <tr>\n                <td className='fs-11'>{dict.add_reports_to_tasks}</td>\n                <td><Toggle className='pd-5' checked={setting('add_reports_to_tasks_email')} onChange={(e) => props.changeSetting(e, 'add_reports_to_tasks_email')} /></td>\n                <td><Toggle className='pd-5' checked={setting('add_reports_to_tasks_push')} onChange={(e) => props.changeSetting(e, 'add_reports_to_tasks_push')} /></td>\n                <td><Toggle className='pd-5' checked={setting('add_reports_to_tasks_sms')} onChange={(e) => props.changeSetting(e, 'add_reports_to_tasks_sms')} /></td>\n              </tr>\n              <tr>\n                <td className='fs-11'>{dict.add_comments_to_tasks}</td>\n                <td><Toggle className='pd-5' checked={setting('add_comments_to_tasks_email')} onChange={(e) => props.changeSetting(e, 'add_comments_to_tasks_email')} /></td>\n                <td><Toggle className='pd-5' checked={setting('add_comments_to_tasks_push')} onChange={(e) => props.changeSetting(e, 'add_comments_to_tasks_push')} /></td>\n                <td><Toggle className='pd-5' checked={setting('add_comments_to_tasks_sms')} onChange={(e) => props.changeSetting(e, 'add_comments_to_tasks_sms')} /></td>\n              </tr>\n              <tr>\n                <td></td>\n                <td></td>\n                <td></td>\n                <td></td>\n              </tr>\n              <tr>\n                <td className='fs-11'>{dict.add_involvement_to_works}</td>\n                <td><Toggle className='pd-5' checked={setting('add_involvement_to_works_email')} onChange={(e) => props.changeSetting(e, 'add_involvement_to_works_email')} /></td>\n                <td><Toggle className='pd-5' checked={setting('add_involvement_to_works_push')} onChange={(e) => props.changeSetting(e, 'add_involvement_to_works_push')} /></td>\n                <td><Toggle className='pd-5' checked={setting('add_involvement_to_works_sms')} onChange={(e) => props.changeSetting(e, 'add_involvement_to_works_sms')} /></td>\n              </tr>\n              <tr>\n                <td className='fs-11'>{dict.remove_involvement_from_works}</td>\n                <td><Toggle className='pd-5' checked={setting('remove_involvement_from_works_email')} onChange={(e) => props.changeSetting(e, 'remove_involvement_from_works_email')} /></td>\n                <td><Toggle className='pd-5' checked={setting('remove_involvement_from_works_push')} onChange={(e) => props.changeSetting(e, 'remove_involvement_from_works_push')} /></td>\n                <td><Toggle className='pd-5' checked={setting('remove_involvement_from_works_sms')} onChange={(e) => props.changeSetting(e, 'remove_involvement_from_works_sms')} /></td>\n              </tr>\n              <tr>\n                <td className='fs-11'>{dict.change_status_works}</td>\n                <td><Toggle className='pd-5' checked={setting('change_status_works_email')} onChange={(e) => props.changeSetting(e, 'change_status_works_email')} /></td>\n                <td><Toggle className='pd-5' checked={setting('change_status_works_push')} onChange={(e) => props.changeSetting(e, 'change_status_works_push')} /></td>\n                <td><Toggle className='pd-5' checked={setting('change_status_works_sms')} onChange={(e) => props.changeSetting(e, 'change_status_works_sms')} /></td>\n              </tr>\n              <tr>\n                <td className='fs-11'>{dict.add_todos_to_works}</td>\n                <td><Toggle className='pd-5' checked={setting('add_todos_to_works_email')} onChange={(e) => props.changeSetting(e, 'add_todos_to_works_email')} /></td>\n                <td><Toggle className='pd-5' checked={setting('add_todos_to_works_push')} onChange={(e) => props.changeSetting(e, 'add_todos_to_works_push')} /></td>\n                <td><Toggle className='pd-5' checked={setting('add_todos_to_works_sms')} onChange={(e) => props.changeSetting(e, 'add_todos_to_works_sms')} /></td>\n              </tr>\n              <tr>\n                <td className='fs-11'>{dict.add_reports_to_works}</td>\n                <td><Toggle className='pd-5' checked={setting('add_reports_to_works_email')} onChange={(e) => props.changeSetting(e, 'add_reports_to_works_email')} /></td>\n                <td><Toggle className='pd-5' checked={setting('add_reports_to_works_push')} onChange={(e) => props.changeSetting(e, 'add_reports_to_works_push')} /></td>\n                <td><Toggle className='pd-5' checked={setting('add_reports_to_works_sms')} onChange={(e) => props.changeSetting(e, 'add_reports_to_works_sms')} /></td>\n              </tr>\n              <tr>\n                <td className='fs-11'>{dict.add_comments_to_works}</td>\n                <td><Toggle className='pd-5' checked={setting('add_comments_to_works_email')} onChange={(e) => props.changeSetting(e, 'add_comments_to_works_email')} /></td>\n                <td><Toggle className='pd-5' checked={setting('add_comments_to_works_push')} onChange={(e) => props.changeSetting(e, 'add_comments_to_works_push')} /></td>\n                <td><Toggle className='pd-5' checked={setting('add_comments_to_works_sms')} onChange={(e) => props.changeSetting(e, 'add_comments_to_works_sms')} /></td>\n              </tr>\n              <tr>\n                <td></td>\n                <td></td>\n                <td></td>\n                <td></td>\n              </tr>\n              <tr>\n                <td className='fs-11'>{dict.add_comments_to_reports}</td>\n                <td><Toggle className='pd-5' checked={setting('add_comments_to_reports_email')} onChange={(e) => props.changeSetting(e, 'add_comments_to_reports_email')} /></td>\n                <td><Toggle className='pd-5' checked={setting('add_comments_to_reports_push')} onChange={(e) => props.changeSetting(e, 'add_comments_to_reports_push')} /></td>\n                <td><Toggle className='pd-5' checked={setting('add_comments_to_reports_sms')} onChange={(e) => props.changeSetting(e, 'add_comments_to_reports_sms')} /></td>\n              </tr>\n              <tr>\n                <td></td>\n                <td></td>\n                <td></td>\n                <td></td>\n              </tr>\n              <tr>\n                <td className='fs-11'>{dict.add_involvement_to_todos}</td>\n                <td><Toggle className='pd-5' checked={setting('add_involvement_to_todos_email')} onChange={(e) => props.changeSetting(e, 'add_involvement_to_todos_email')} /></td>\n                <td><Toggle className='pd-5' checked={setting('add_involvement_to_todos_push')} onChange={(e) => props.changeSetting(e, 'add_involvement_to_todos_push')} /></td>\n                <td><Toggle className='pd-5' checked={setting('add_involvement_to_todos_sms')} onChange={(e) => props.changeSetting(e, 'add_involvement_to_todos_sms')} /></td>\n              </tr>\n              <tr>\n                <td className='fs-11'>{dict.remove_involvement_from_todos}</td>\n                <td><Toggle className='pd-5' checked={setting('remove_involvement_from_todos_email')} onChange={(e) => props.changeSetting(e, 'remove_involvement_from_todos_email')} /></td>\n                <td><Toggle className='pd-5' checked={setting('remove_involvement_from_todos_push')} onChange={(e) => props.changeSetting(e, 'remove_involvement_from_todos_push')} /></td>\n                <td><Toggle className='pd-5' checked={setting('remove_involvement_from_todos_sms')} onChange={(e) => props.changeSetting(e, 'remove_involvement_from_todos_sms')} /></td>\n              </tr>\n              <tr>\n                <td></td>\n                <td></td>\n                <td></td>\n                <td></td>\n              </tr>\n              <tr>\n                <td className='fs-11'>{dict.add_involvement_to_time_sheets}</td>\n                <td><Toggle className='pd-5' checked={setting('add_involvement_to_time_sheets_email')} onChange={(e) => props.changeSetting(e, 'add_involvement_to_time_sheets_email')} /></td>\n                <td><Toggle className='pd-5' checked={setting('add_involvement_to_time_sheets_push')} onChange={(e) => props.changeSetting(e, 'add_involvement_to_time_sheets_push')} /></td>\n                <td><Toggle className='pd-5' checked={setting('add_involvement_to_time_sheets_sms')} onChange={(e) => props.changeSetting(e, 'add_involvement_to_time_sheets_sms')} /></td>\n              </tr>\n              <tr>\n                <td className='fs-11'>{dict.remove_involvement_from_timesheets}</td>\n                <td><Toggle className='pd-5' checked={setting('remove_involvement_from_timesheets_email')} onChange={(e) => props.changeSetting(e, 'remove_involvement_from_timesheets_email')} /></td>\n                <td><Toggle className='pd-5' checked={setting('remove_involvement_from_timesheets_push')} onChange={(e) => props.changeSetting(e, 'remove_involvement_from_timesheets_push')} /></td>\n                <td><Toggle className='pd-5' checked={setting('remove_involvement_from_timesheets_sms')} onChange={(e) => props.changeSetting(e, 'remove_involvement_from_timesheets_sms')} /></td>\n              </tr>\n\n            </tbody>\n          </table>\n        </div>\n\n\n\n      </React.Fragment>\n    )\n  } else {\n    return (null)\n  }\n\n}\nexport default SettingForm;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  BlockTitle,\n} from 'framework7-react';\nimport { dict } from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport SettingForm from \"../../containers/settings/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\nimport { conf } from '../../conf';\n\nexport default class SettingCreate extends Component {\n  constructor() {\n    super();\n\n    this.getInstance = this.getInstance.bind(this);\n    this.changeSetting = this.changeSetting.bind(this);\n    this.loadBlockList = this.loadBlockList.bind(this);\n    this.removeBlocked = this.removeBlocked.bind(this);\n    \n\n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      setting: {},\n      title: null,\n      id: null,\n      setting: null,\n      notification_setting: null,\n      blockList: []\n    }\n  }\n\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  loadData() {\n    MyActions.getInstance('settings', 1, this.state.token);\n  }\n\n  pageAfterIn() {\n    this.loadBlockList();\n  }\n\n\n  loadBlockList() {\n    const self = this;\n    const app = self.$f7;\n    app.autocomplete.create({\n      openIn: 'popup', //open in page\n      openerEl: '#user-blocklist', //link that opens autocomplete\n      multiple: true, //allow multiple values\n      valueProperty: 'id', //object's \"value\" property name\n      textProperty: 'fullname', //object's \"text\" property name\n      searchbarDisableText: dict.cancel,\n      popupCloseLinkText: dict.close,\n      notFoundText: dict.not_found,\n      limit: 50,\n      searchbarPlaceholder: dict.search,\n      //preloader: true, //enable preloader\n      source: function (query, render) {\n        var autocomplete = this;\n        var results = [];\n        if (query.length === 0) {\n          render(results);\n          return;\n        }\n        // Show Preloader\n       // autocomplete.preloaderShow();\n        // Do Ajax request to Autocomplete data\n        app.request({\n          url: conf.server + '/profiles/search',\n          method: 'GET',\n          dataType: 'json',\n          //send \"query\" to server. Useful in case you generate response dynamically\n          data: {\n            q: query\n          },\n          success: function (item) {\n            // Find matched items\n            for (var i = 0; i < item.data.length; i++) {\n               results.push(item.data[i]);\n            }\n            // Hide Preoloader\n            //autocomplete.preloaderHide();\n            // Render items by passing array with result items\n            render(results);\n          }\n        });\n      },\n      on: {\n        change: function (value) {\n          if (value && value[value.length - 1]) {\n            self.setState({ blockList: self.state.blockList.concat({ fullname: value[value.length - 1].fullname, id: value[value.length - 1].id }) })\n            var data = {profile_id: value[value.length - 1].id }\n            MyActions.setInstance('settings/add_block', data, self.state.token)\n          }\n        },\n      },\n    });\n  }\n\n\n\n\n\n  getInstance() {\n    var setting = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (setting && klass === 'Setting') {\n      this.setState({\n        title: setting.title,\n        id: setting.id,\n        notification_setting: setting.notification_setting\n      });\n    } else {\n      this.setState({\n        notification_setting: []\n      });\n    }\n    \n  }\n\n  changeSetting(e, item) {\n    var data = { item: item }\n    if (e.target.checked) {\n      this.setState(prevState => {\n        let notification_setting = Object.assign({}, prevState.notification_setting);\n        notification_setting[item] = true;\n        return { notification_setting };\n      })\n      MyActions.setInstance('settings/add', data, this.state.token)\n    } else {\n      this.setState(prevState => {\n        let notification_setting = Object.assign({}, prevState.notification_setting);\n        notification_setting[item] = false;\n        return { notification_setting };\n      })\n      MyActions.setInstance('settings/remove', data, this.state.token);\n    }\n  }\n\n  removeBlocked(id){\n    this.setState({\n      blockList: this.state.blockList.filter(function (profile) {\n        return profile.id !== id\n      })\n    });\n    var data = {profile_id: id }\n    MyActions.setInstance('settings/remove_block', data, this.state.token)\n  }\n\n\n\n\n  render() {\n    const { notification_setting, title, blockList } = this.state;\n    return (\n      <Page onPageAfterIn={this.pageAfterIn.bind(this)}>\n        <Navbar title={dict.work_form} backLink={dict.back} />\n        <BlockTitle>{dict.work_form}</BlockTitle>\n        <SettingForm\n          notification_setting={notification_setting}\n          title={title} changeSetting={this.changeSetting} blockList={blockList}\n          submit={this.submit} editing={true} handleChange={this.handleChangeValue} \n          removeBlocked={this.removeBlocked}\n          />\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { Link, List, CardHeader, ListInput, CardContent, CardFooter, Button, Page, Card, Navbar, Icon } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport crypto from 'crypto-js';\n\nconst LoginForm = (props) => {\n  return (\n    <Page>\n      <Navbar title={dict.sign_up} >\n        <Link panelOpen=\"right\">\n          <Icon f7=\"bars\"></Icon>\n        </Link>\n      </Navbar>\n      <Card>\n        <CardHeader>{dict.login}</CardHeader>\n        <CardContent className='mh-auto'>\n          <List >\n            <ListInput\n              label={dict.email}\n              type=\"text\"\n              autofocus={true}\n              placeholder={dict.enter_your_email}\n              value={props.email}\n              onInput={(e) => {\n                props.handleChange({ email: e.target.value })\n              }}\n            />\n            {/*<ListInput\n              label={dict.password}\n              type=\"password\"\n              placeholder={dict.enter_your_password}\n              value={props.password}\n              onInput={(e) => {\n                props.handleChange({ password: e.target.value })\n              }}\n            />*/}\n          </List>\n        </CardContent>\n        <CardFooter>\n          <Link href=\"/sign_up/\" animate={false} ignoreCache={true}>{dict.you_can_sign_up} </Link>\n          <Button fill className='fs-11 external f-color-black bg-teal' href=\"https://auth.ut.ac.ir:8443/cas/login?service=https%3A%2F%2Ftavan.ut.ac.ir%2Fusers%2Fservice\"  animate={false} ignoreCache={true}>{dict.cas} </Button>\n          <Link className=\"btn-notice\"></Link>\n          <Button className=\"col btn\" fill onClick={props.submit}>{dict.login}</Button>\n        </CardFooter>\n      </Card>\n    </Page>\n  )\n}\nexport default LoginForm;\n","import React from 'react';\nimport {\n  Page,\n  Navbar,\n  NavLeft,\n  NavTitle,\n  NavRight,\n  Link,\n  Toolbar,\n  Block,\n  BlockTitle,\n  List,\n  ListItem,\n  Row,\n  Col,\n  Button, Icon, Fab,Searchbar, Subnavbar, LoginScreenTitle, ListInput, ListButton, BlockFooter\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport LoginForm from \"../../containers/users/Login\"\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\nexport default class extends React.Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      email: '',\n      password: '',\n    };\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n  }\n  componentDidMount(){\n    if(this.$f7route.params['token']) {\n      MyActions.setInstance('users/validate_token', {}, this.$f7route.params['token']);\n    }\n    if(this.state.token && this.state.token.length > 10){\n      MyActions.setInstance('users/validate_token', {}, this.state.token);\n    }\n  }\n\n  submit(){\n    var data = {email: this.state.email, password: this.state.password}\n    MyActions.setInstance('users/login', data);\n  }\n\n  setInstance(){\n    var klass = ModelStore.getKlass()\n    if (klass === 'Login') {\n      this.$f7router.navigate('/verification/'+this.state.email);\n    }\n    if (klass === 'Validate') {\n      this.$f7router.navigate('/');\n      window.location.reload()\n    }\n    console.log(klass)\n  }\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  render() {\n    const {username, password} = this.state;\n    return (\n      <LoginForm submit={this.submit} handleChange={this.handleChangeValue}/>\n    )\n  }\n\n}\n","import React from 'react';\nimport {\n  Page,\n  Navbar,\n  NavLeft,\n  NavTitle,\n  NavRight,\n  Link,\n  Toolbar,\n  Block,\n  BlockTitle,\n  List,\n  ListItem,\n  Row,\n  Col,\n  Button, Icon, Fab,Searchbar, Subnavbar, LoginScreenTitle, ListInput, ListButton, BlockFooter\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport LoginForm from \"../../containers/users/Login\"\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\nexport default class extends React.Component {\n  constructor() {\n    super();\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n\n    this.state = {\n      email: '',\n      password: '',\n    };\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n  }\n  componentDidMount(){\n    MyActions.setInstance('users/validate_token', {}, this.$f7route.params['token']);\n  }\n\n  setInstance() {\n    var user = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (klass === 'Validate') {\n      window.localStorage.setItem('token', user.token);\n      this.$f7router.navigate('/');\n      window.location.reload()\n    } else {\n      this.$f7router.navigate('/login_error/');\n      window.location.reload()\n    }\n  }\n\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  render() {\n    const {username, password} = this.state;\n    return (\n      <LoginForm submit={this.submit} handleChange={this.handleChangeValue}/>\n    )\n  }\n\n}\n","import React from \"react\";\nimport { Link, List, ListItem, ListInput, Navbar, Icon, Button, Page, LoginScreenTitle, ListButton, CardFooter, Card, CardHeader, CardContent } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport crypto from 'crypto-js';\n\nconst SignUpForm = (props) => {\n  return (\n    <Page>\n      <Navbar title={dict.sign_up} >\n        <Link panelOpen=\"right\">\n          <Icon f7=\"bars\"></Icon>\n        </Link>\n      </Navbar>\n      <Card>\n        <CardHeader>{dict.sign_up}</CardHeader>\n        <CardContent>\n          <List >\n            <ListInput\n              label={dict.firstname + ' *'}\n              placeholder={dict.enter_your_name}\n              type=\"text\"\n              name={crypto.lib.WordArray.random(32)}\n              onInput={(e) => {\n                props.handleChange({ name: e.target.value })\n              }}\n            />\n\n            <ListInput\n              label={dict.surename + ' *'}\n              placeholder={dict.enter_your_surename}\n              type=\"text\"\n              name={crypto.lib.WordArray.random(32)}\n              onInput={(e) => {\n                props.handleChange({ surename: e.target.value })\n              }}\n            />\n\n\n            <ListInput\n              label={' * ' + dict.email}\n              type=\"email\"\n              validate\n              placeholder={dict.enter_your_email}\n              className='ltr'\n              value={props.email}\n              onInput={(e) => {\n                props.handleChange({ email: e.target.value })\n              }}\n            />\n          {/*\n            <ListInput\n              label={dict.password + ' *'}\n              type=\"password\"\n              placeholder={dict.enter_your_password}\n              autocomplete='new-password'\n              name={crypto.lib.WordArray.random(32)}\n              value={props.password}\n              onInput={(e) => {\n                props.handleChange({ password: e.target.value })\n              }}\n            />\n            <ListInput\n              label={dict.password_confirmation + ' *'}\n              type=\"password\"\n              autocomplete='off'\n              placeholder={dict.enter_your_password_confirmation}\n              value={props.password}\n              onInput={(e) => {\n                props.handleChange({ password_confirmation: e.target.value })\n              }}\n            />*/}\n          </List>\n        </CardContent>\n        <CardFooter>\n          <Link href=\"/login/\">{dict.if_registered}{'\\u00A0'}{dict.you_can_login} </Link>\n          <Link className=\"btn-notice\"></Link>\n          <Button className=\"col btn\" fill onClick={props.submit}>{dict.sign_up}</Button>\n        </CardFooter>\n      </Card>\n    </Page>\n  )\n}\nexport default SignUpForm;\n","import React from 'react';\nimport {\n  Page,\n  Navbar,\n  NavLeft,\n  NavTitle,\n  NavRight,\n  Link,\n  Toolbar,\n  Block,\n  BlockTitle,\n  List,\n  ListItem,\n  Row,\n  Col,\n  Button, Icon, Fab, Searchbar, Subnavbar, LoginScreenTitle, ListInput, ListButton, BlockFooter\n} from 'framework7-react';\nimport { dict } from '../../Dict';\nimport SignUpForm from \"../../containers/users/SignUp\"\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\nexport default class extends React.Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n\n    this.state = {\n      email: '',\n      name: '',\n      surename: '',\n    };\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n  }\n\n  submit() {\n    this.$$('.btn').hide();\n    this.$$('.btn-notice').text(dict.submitting);\n    var data = { \n      email: this.state.email,\n       name: this.state.name, \n       surename: this.state.surename }\n    if (\n      (this.state.email && this.state.email.length > 0) &&\n      (this.state.name && this.state.name.length > 0) &&\n      (this.state.surename && this.state.surename.length > 0) \n      ) {\n      MyActions.setInstance('users/sign_up', data);\n    } else {\n      const self = this;\n      self.$f7.dialog.alert(dict.incomplete_data, dict.alert);\n    }\n  }\n\n  setInstance() {\n    var klass = ModelStore.getKlass()\n    if (klass === 'SignUp') {\n      this.$$('.btn').show();\n      this.$f7router.navigate('/verification/'+this.state.email);\n    }\n  }\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n    console.log(obj)\n  }\n\n  render() {\n    const { username, password } = this.state;\n    return (\n      <SignUpForm submit={this.submit} handleChange={this.handleChangeValue} />\n    )\n  }\n\n}\n","import React from \"react\";\nimport { Link, List, CardHeader, ListInput, CardContent, CardFooter, Button, Page, Card, Navbar, Icon } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport crypto from 'crypto-js';\n\nconst LoginForm = (props) => {\n  return (\n    <Page>\n      <Navbar title={dict.verification} >\n        <Link panelOpen=\"right\">\n          <Icon f7=\"bars\"></Icon>\n        </Link>\n      </Navbar>\n      <Card>\n        <CardHeader>{dict.login}</CardHeader>\n        <CardContent >\n          <List >\n          <ListInput\n              label={dict.email}\n              type=\"text\"\n              autofocus={true}\n              placeholder={dict.enter_your_email}\n              value={props.email}\n              onInput={(e) => {\n                props.handleChange({ email: e.target.value })\n              }}\n            />\n            <ListInput\n              label={dict.verification_code}\n              type=\"text\"\n              placeholder={dict.enter_verification_code}\n              onInput={(e) => {\n                props.handleChange({ verificationCode: e.target.value })\n              }}\n            />\n          </List>\n        </CardContent>\n        <CardFooter>\n          <Link href=\"/sign_up/\" animate={false} ignoreCache={true}>{dict.you_can_sign_up} </Link>\n          <Link className=\"btn-notice\"></Link>\n          <Button className=\"col btn\" fill onClick={props.submit}>{dict.login}</Button>\n        </CardFooter>\n      </Card>\n    </Page>\n  )\n}\nexport default LoginForm;\n","import React from 'react';\nimport {\n  Page,\n  Navbar,\n  NavLeft,\n  NavTitle,\n  NavRight,\n  Link,\n  Toolbar,\n  Block,\n  BlockTitle,\n  List,\n  ListItem,\n  Row,\n  Col,\n  Button, Icon, Fab,Searchbar, Subnavbar, LoginScreenTitle, ListInput, ListButton, BlockFooter\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport VerificationForm from \"../../containers/users/Verification\"\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\nexport default class extends React.Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n\n    this.state = {\n      verificationCode: '',\n      email: '',\n    };\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n  }\n\n  componentDidMount(){\n    this.setState({email: this.$f7route.params['email']})\n  }\n\n  submit(){\n    var data = {verification_code: this.state.verificationCode}\n    MyActions.setInstance('users/verify', data);\n  }\n\n  setInstance(){\n    var user = ModelStore.getIntance();\n    var klass = ModelStore.getKlass()\n    if (user && klass == 'Verify'){\n      window.localStorage.setItem('token', user.token);\n      this.$f7router.navigate('/');\n      window.location.reload()\n    }\n  }\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  render() {\n    const {username, email} = this.state;\n    return (\n      <VerificationForm submit={this.submit} email={email} handleChange={this.handleChangeValue}/>\n    )\n  }\n\n}\n","import React from \"react\";\nimport { List, ListItem, Link, Card, CardHeader, CardContent, CardFooter } from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\n\nconst NotificationList = (props) => {\n  if (props.notifications && props.notifications.length > 0) {\n    function profileLink(profile) {\n      return (<Link href='/profiles/'>{profile.fullname}</Link>)\n    }\n\n    function colorClass(notification) {\n      if (!notification.seen) {\n        return 'bg-blonde'\n      }\n    }\n    return (\n      <Card>\n        <CardHeader></CardHeader>\n        <CardContent>\n          <List mediaList>\n            {props.notifications.map((notification) =>\n              <ListItem\n                className={'fs-11 ' + colorClass(notification)}\n                key={crypto.lib.WordArray.random(32)}\n                link={'/' + notification.target_type + '/' + notification.target_id}\n                title={profileLink(notification.profile)}\n                text={notification.notification_text.title}\n              >\n                <img slot=\"media\" src={notification.profile.avatar} width=\"32\" height=\"32\" />\n              </ListItem>\n            )}\n          </List>\n        </CardContent>\n        <CardFooter></CardFooter>\n      </Card>\n    )\n  } else {\n    return (<ul></ul>)\n  }\n}\nexport default NotificationList;\n","import React from \"react\";\nimport { Page, Navbar, Subnavbar, Searchbar, BlockTitle, Link, Fab, Icon, Toolbar, Tabs, Tab, Block } from 'framework7-react';\nimport NotificationList from \"./list\"\nimport { dict } from '../../Dict';\n\nconst NotificationIndex = (props) => {\n  return (\n    <Page>\n      <Navbar title={dict.notifications} >\n        <Link panelOpen=\"right\">\n          <Icon f7=\"bars\"></Icon>\n        </Link>\n      </Navbar>\n\n      <NotificationList notifications={props.notifications} loadMore={props.loadMore} />\n\n    </Page>\n  )\n}\nexport default NotificationIndex;\n","import HomePage from './components/home/index.jsx';\nimport NotFoundPage from './containers/layouts/NotFoundPage';\nimport PanelRightPage from './containers/layouts/PanelRightPage';\n\n\n\nimport RoleShow from './components/roles/show';\nimport RoleIndex from './components/roles/index';\nimport RoleCreate from './components/roles/create';\nimport RoleUpdate from './components/roles/update';\n\n\nimport TagShow from './components/tags/show';\nimport TagIndex from './components/tags/index';\nimport TagCreate from './components/tags/create';\nimport TagUpdate from './components/tags/update';\n\nimport StatusShow from './components/statuses/show';\nimport StatusIndex from './components/statuses/index';\nimport StatusCreate from './components/statuses/create';\nimport StatusUpdate from './components/statuses/update';\n\nimport TaskShow from './components/tasks/show';\nimport TaskIndex from './components/tasks/index';\nimport TaskCreate from './components/tasks/create';\nimport TaskUpdate from './components/tasks/update';\n\nimport WorkShow from './components/works/show';\nimport WorkIndex from './components/works/index';\nimport WorkCreate from './components/works/create';\nimport WorkUpdate from './components/works/update';\n\nimport TodoCreate from './components/todos/create';\nimport TodoUpdate from './components/todos/update';\n\nimport TimeSheetShow from './components/time_sheets/show';\nimport TimeSheetIndex from './components/time_sheets/index';\nimport TimeSheetCreate from './components/time_sheets/create';\nimport TimeSheetUpdate from './components/time_sheets/update';\n\n\nimport ProfileShow from './components/profiles/show';\nimport ProfileIndex from './components/profiles/index';\nimport ProfileCreate from './components/profiles/create';\nimport ProfileUpdate from './components/profiles/update';\n\nimport ReportShow from './components/reports/show';\nimport ReportIndex from './components/reports/index';\nimport ReportCreate from './components/reports/create';\nimport ReportUpdate from './components/reports/update';\n\nimport GroupShow from './components/groups/show';\nimport GroupIndex from './components/groups/index';\nimport GroupCreate from './components/groups/create';\nimport GroupUpdate from './components/groups/update';\n\nimport SettingUpdate from './components/settings/update';\n\nimport Login from './components/users/Login';\nimport LoginJwt from './components/users/LoginJwt';\nimport SignUp from './components/users/SignUp';\nimport Verification from './components/users/Verification';\nimport NotificationIndex from './components/notifications/index';\n\n\nexport default [\n  {\n    path: '/',\n    component: HomePage,\n  },\n  {\n    path: '/login/',\n    component: Login,\n  },\n  {\n    path: '/sign_up/',\n    component: SignUp,\n  },\n  {\n    path: '/verification/:email',\n    component: Verification,\n  },\n  {\n    path: '/login_jwt/:token',\n    component: LoginJwt,\n  },\n  {\n    path: '/panel-right/',\n    component: PanelRightPage,\n  },\n\n  {\n    path: '/notifications/',\n    component: NotificationIndex,\n  },\n\n\n  {\n    path: '/roles/',\n    component: RoleIndex,\n  },\n  {\n    path: '/roles/:roleId/edit',\n    component: RoleUpdate,\n  },\n  {\n    path: '/roles/new',\n    component: RoleCreate,\n  },\n  {\n    path: '/roles/:roleId',\n    component: RoleShow,\n  },\n\n  {\n    path: '/settings/',\n    component: SettingUpdate,\n  },\n\n  {\n    path: '/groups/',\n    component: GroupIndex,\n  },\n  {\n    path: '/groups/:groupId/edit',\n    component: GroupUpdate,\n  },\n  {\n    path: '/groups/new',\n    component: GroupCreate,\n  },\n  {\n    path: '/groups/:groupId',\n    component: GroupShow,\n  },\n\n\n  {\n    path: '/statuses/',\n    component: StatusIndex,\n  },\n  {\n    path: '/statuses/:statusId/edit',\n    component: StatusUpdate,\n  },\n  {\n    path: '/statuses/new',\n    component: StatusCreate,\n  },\n  {\n    path: '/statuses/:statusId',\n    component: StatusShow,\n  },\n\n\n  {\n    path: '/tasks/',\n    component: TaskIndex,\n  },\n  {\n    path: '/tasks/:taskId/edit',\n    component: TaskUpdate,\n  },\n  {\n    path: '/tasks/new',\n    component: TaskCreate,\n  },\n  {\n    path: '/tasks/:taskId',\n    component: TaskShow,\n  },\n\n\n  {\n    path: '/tags/',\n    component: TagIndex,\n  },\n  {\n    path: '/tags/:tagId/edit',\n    component: TagUpdate,\n  },\n  {\n    path: '/tags/new',\n    component: TagCreate,\n  },\n  {\n    path: '/tags/:tagId',\n    component: TagShow,\n  },\n\n\n\n  {\n    path: '/time_sheets/',\n    component: TimeSheetIndex,\n  },\n  {\n    path: '/time_sheets/:timeSheetId/edit',\n    component: TimeSheetUpdate,\n  },\n  {\n    path: '/time_sheets/new',\n    component: TimeSheetCreate,\n  },\n  {\n    path: '/time_sheets/:timeSheetId',\n    component: TimeSheetShow,\n  },\n\n\n  {\n    path: '/reports/',\n    component: ReportIndex,\n  },\n  {\n    path: '/reports/:reportId/edit',\n    component: ReportUpdate,\n  },\n  {\n    path: '/reports/new/:callerType/:callerId',\n    component: ReportCreate,\n  },\n  {\n    path: '/reports/:reportId',\n    component: ReportShow,\n  },\n\n  {\n    path: '/works/',\n    component: WorkIndex,\n  },\n  {\n    path: '/works/:workId/edit',\n    component: WorkUpdate,\n  },\n  {\n    path: '/works/new/:taskId',\n    component: WorkCreate,\n  },\n  {\n    path: '/works/:workId',\n    component: WorkShow,\n  },\n\n  {\n    path: '/todos/:todoId/edit',\n    component: TodoUpdate,\n  },\n  {\n    path: '/todos/new/:workId',\n    component: TodoCreate,\n  },\n\n  {\n    path: '/profiles/',\n    component: ProfileIndex,\n  },\n  {\n    path: '/profiles/:profileId/edit',\n    component: ProfileUpdate,\n  },\n  {\n    path: '/profiles/new',\n    component: ProfileCreate,\n  },\n  {\n    path: '/profiles/:profileId',\n    component: ProfileShow,\n  },\n  {\n    path: '(.*)',\n    component: NotFoundPage,\n  },\n];\n","import React from \"react\"\nimport { Page, Fab, Icon } from 'framework7-react';\nimport ModelStore from \"../../stores/ModelStore\";\nimport NotificationIndex from \"../../containers/notifications/index\"\nimport * as MyActions from \"../../actions/MyActions\";\nimport { loggedIn } from \"../../components/users/loggedIn.js\"\n\n\nexport default class Notification extends React.Component {\n  constructor() {\n    super();\n    this.getList = this.getList.bind(this);\n    this.loggedIn = loggedIn.bind(this);\n    this.interaction = this.interaction.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.search = this.search.bind(this);\n    this.loadMore = this.loadMore.bind(this);\n\n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      notifications: [],\n      query: null,\n      page: 1\n    }\n  }\n  componentWillMount() {\n    ModelStore.on(\"got_list\", this.getList);\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_list\", this.getList);\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n  }\n\n  componentDidMount() {\n\n    this.loggedIn();\n    this.loadData();\n  }\n\n  loadData() {\n    MyActions.getList('notifications', this.state.page, {}, this.state.token);\n  }\n\n  search(obj) {\n    this.setState({ notifications: [], page: 1 });\n    this.setState(obj, () => {\n      MyActions.getList('notifications/search', this.state.page, { q: this.state.query });\n    });\n\n  }\n\n  loadMore() {\n    if (this.state.query && this.state.query.length > 0) {\n      this.setState({ page: this.state.page + 1 }, () => {\n        MyActions.getList('notifications/search', this.state.page, {q: this.state.query }, this.state.token);\n      });\n    } else {\n      this.setState({ page: this.state.page + 1 }, () => {\n        MyActions.getList('notifications', this.state.page, {}, this.state.token);\n      });\n    }\n  }\n\n\n\n  setInstance() {\n    var notification = ModelStore.getIntance()\n    if (notification) {\n      this.setState({ notifications: this.state.notifications.map(el => (el.id === notification.id ? Object.assign({}, el, notification) : el)) });\n    }\n  }\n\n  getList() {\n    var notifications = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    if (notifications.length > 0 && klass === 'Notification') {\n      this.setState({\n        notifications: this.state.notifications.concat(notifications),\n      });\n    }\n    var data = {}\n    MyActions.setInstance('notifications', data, this.state.token);\n  }\n\n  interaction(interaction_type, interactionable_id, interactionable_type, source_type = null, source_id = null) {\n    var data = { interaction_type: interaction_type, interactionable_id: interactionable_id, interactionable_type: interactionable_type, source_type: source_type, source_id: source_id }\n    MyActions.setInstance('interactions', data, this.state.token);\n  }\n\n  render() {\n    const { notifications } = this.state;\n    return (<NotificationIndex interaction={this.interaction} loadMore={this.loadMore} notifications={notifications} search={this.search} />)\n  }\n}\n","import React from 'react';\nimport { Page, Navbar, Block } from 'framework7-react';\n\nexport default () => (\n  <Page>\n    <Navbar title=\"Not found\" backLink=\"Back\" />\n    <Block strong>\n      <p>Sorry</p>\n      <p>Requested content not found.</p>\n    </Block>\n  </Page>\n);\n","import React, { Component } from 'react';\nimport {\n  App,\n  Panel,\n  View,\n  Statusbar,\n} from 'framework7-react';\nimport ModelStore from \"../stores/ModelStore\";\nimport * as MyActions from \"../actions/MyActions\";\nimport { messaging } from \"../init-fcm.js\";\n\n\nimport routes from '../routes';\n\nexport default class extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n    }\n  }\n  async componentDidMount() {\n    const self = this;      \n    const app = self.$f7;\n\n    if (messaging) {\n      messaging.requestPermission()\n        .then(async function () {\n          const token = await messaging.getToken();\n          var data = { token: token }\n          if (self.state.token && self.state.token.length > 10) {\n            MyActions.setInstance('devices', data, self.state.token);\n          }\n        })\n        .catch(function (err) {\n          console.log(\"Unable to get permission to notify.\", err);\n        });\n    }\n    navigator.serviceWorker.addEventListener(\"message\", (message) => {\n\n      app.notification.create({\n        icon: '',\n\n        title: message.data.firebaseMessaging.payload.notification.title,\n        titleRightText: '',\n        cssClass: 'notification',\n        subtitle: message.data.firebaseMessaging.payload.notification.body,\n        closeTimeout: 5000,\n      }).open();\n    });\n\n\n  }\n  // Framework7 parameters here\n\n  render() {\n    const f7params = {\n      id: 'io.framework7.testapp', // App bundle ID\n      name: 'Framework7', // App name\n      theme: 'aurora', // Automatic theme detection\n      panel: {\n        rightBreakpoint: 960,\n      },\n      view: {\n        //ignoreCache: true,\n        //reloadCurrent: true\n      },\n      // App routes\n      routes,\n    };\n\n    const server = React.createContext('http://localhost:3001/v1/');\n    return (\n      <App params={f7params}>\n        {/* Statusbar */}\n        <Statusbar />\n\n        {/* Left Panel */}\n        <Panel left cover themeDark>\n          <View url=\"/panel-left/\" />\n        </Panel>\n\n        {/* Right Panel */}\n        <Panel right reveal themeDark>\n          <View url=\"/panel-right/\" />\n        </Panel>\n\n        {/* Main View */}\n        <View id=\"main-view\" url=\"/app\" pushState={true} main className=\"safe-areas\" />\n\n      </App>\n    );\n  }\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// Import Framework7\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\n// Import Framework7-React plugin\nimport Framework7React from 'framework7-react';\n\n// Import main App component\nimport App from './components/App.jsx';\n\n// Framework7 styles\nimport 'framework7/css/framework7.bundle.rtl.min.css';\n\n// Icons\nimport './css/icons.css';\n\n// Custom app styles\nimport './css/app.css';\nimport './css/editor.css';\nimport './css/font-awesome.min.css';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\n\n\nimport * as serviceWorker from './serviceWorker';\n\nif (\"serviceWorker\" in navigator) {\n  navigator.serviceWorker\n    .register(\"./firebase-messaging-sw.js\")\n    .then(function(registration) {\n      console.log(\"Registration successful, scope is:\", registration.scope);\n    })\n    .catch(function(err) {\n      console.log(\"Service worker registration failed, error:\", err);\n    });\n}\n// Init Framework7-React plugin\nFramework7.use(Framework7React);\n\n// Mount React App\nReactDOM.render(React.createElement(App),\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}